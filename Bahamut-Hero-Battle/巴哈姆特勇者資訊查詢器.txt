// Decompiled with JetBrains decompiler
// Type: 巴哈姆特勇者資訊查詢器.My.MyProject
// Assembly: 巴哈姆特勇者資訊查詢器, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A33BE2FC-B7FF-424D-BCC1-9549C68B0587
// Assembly location: C:\Users\User\Desktop\巴哈姆特勇者資訊查詢器_v1.3.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

#nullable disable
namespace 巴哈姆特勇者資訊查詢器.My
{
  [StandardModule]
  [HideModuleName]
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  internal sealed class MyProject
  {
    private static readonly MyProject.ThreadSafeObjectProvider<MyComputer> m_ComputerObjectProvider = new MyProject.ThreadSafeObjectProvider<MyComputer>();
    private static readonly MyProject.ThreadSafeObjectProvider<MyApplication> m_AppObjectProvider = new MyProject.ThreadSafeObjectProvider<MyApplication>();
    private static readonly MyProject.ThreadSafeObjectProvider<User> m_UserObjectProvider = new MyProject.ThreadSafeObjectProvider<User>();
    private static MyProject.ThreadSafeObjectProvider<MyProject.MyForms> m_MyFormsObjectProvider = new MyProject.ThreadSafeObjectProvider<MyProject.MyForms>();
    private static readonly MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices> m_MyWebServicesObjectProvider = new MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices>();

    [HelpKeyword("My.Computer")]
    internal static MyComputer Computer
    {
      [DebuggerHidden] get => MyProject.m_ComputerObjectProvider.GetInstance;
    }

    [HelpKeyword("My.Application")]
    internal static MyApplication Application
    {
      [DebuggerHidden] get => MyProject.m_AppObjectProvider.GetInstance;
    }

    [HelpKeyword("My.User")]
    internal static User User
    {
      [DebuggerHidden] get => MyProject.m_UserObjectProvider.GetInstance;
    }

    [HelpKeyword("My.Forms")]
    internal static MyProject.MyForms Forms
    {
      [DebuggerHidden] get => MyProject.m_MyFormsObjectProvider.GetInstance;
    }

    [HelpKeyword("My.WebServices")]
    internal static MyProject.MyWebServices WebServices
    {
      [DebuggerHidden] get => MyProject.m_MyWebServicesObjectProvider.GetInstance;
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Windows.Forms.Form", "Create__Instance__", "Dispose__Instance__", "My.MyProject.Forms")]
    internal sealed class MyForms
    {
      [ThreadStatic]
      private static Hashtable m_FormBeingCreated;
      [EditorBrowsable(EditorBrowsableState.Never)]
      public 主表單 m_主表單;

      [DebuggerHidden]
      private static T Create__Instance__<T>(T Instance) where T : Form, new()
      {
        T instance;
        if ((object) Instance == null || Instance.IsDisposed)
        {
          if (MyProject.MyForms.m_FormBeingCreated != null)
          {
            if (MyProject.MyForms.m_FormBeingCreated.ContainsKey((object) typeof (T)))
              throw new InvalidOperationException(Utils.GetResourceString("WinForms_RecursiveFormCreate"));
          }
          else
            MyProject.MyForms.m_FormBeingCreated = new Hashtable();
          MyProject.MyForms.m_FormBeingCreated.Add((object) typeof (T), (object) null);
          TargetInvocationException invocationException;
          try
          {
            instance = new T();
          }
          catch (TargetInvocationException ex) when (
          {
            // ISSUE: unable to correctly present filter
            ProjectData.SetProjectError((Exception) ex);
            invocationException = ex;
            if (invocationException.InnerException != null)
            {
              SuccessfulFiltering;
            }
            else
              throw;
          }
          )
          {
            throw new InvalidOperationException(Utils.GetResourceString("WinForms_SeeInnerException", invocationException.InnerException.Message), invocationException.InnerException);
          }
          finally
          {
            MyProject.MyForms.m_FormBeingCreated.Remove((object) typeof (T));
          }
        }
        else
          instance = Instance;
        return instance;
      }

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) where T : Form
      {
        instance.Dispose();
        instance = default (T);
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyForms()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal new System.Type GetType() => typeof (MyProject.MyForms);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      public 主表單 主表單
      {
        get
        {
          this.m_主表單 = MyProject.MyForms.Create__Instance__<主表單>(this.m_主表單);
          return this.m_主表單;
        }
        set
        {
          if (value == this.m_主表單)
            return;
          if (value != null)
            throw new ArgumentException("Property can only be set to Nothing");
          this.Dispose__Instance__<主表單>(ref this.m_主表單);
        }
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    internal sealed class MyWebServices
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      internal new System.Type GetType() => typeof (MyProject.MyWebServices);

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override string ToString() => base.ToString();

      [DebuggerHidden]
      private static T Create__Instance__<T>(T instance) where T : new()
      {
        return (object) instance != null ? instance : new T();
      }

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) => instance = default (T);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyWebServices()
      {
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class ThreadSafeObjectProvider<T> where T : new()
    {
      internal T GetInstance
      {
        [DebuggerHidden] get
        {
          if ((object) MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
            MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = new T();
          return MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public ThreadSafeObjectProvider()
      {
      }
    }
  }
}

// Decompiled with JetBrains decompiler
// Type: 巴哈姆特勇者資訊查詢器.My.MySettingsProperty
// Assembly: 巴哈姆特勇者資訊查詢器, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A33BE2FC-B7FF-424D-BCC1-9549C68B0587
// Assembly location: C:\Users\User\Desktop\巴哈姆特勇者資訊查詢器_v1.3.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Runtime.CompilerServices;

#nullable disable
namespace 巴哈姆特勇者資訊查詢器.My
{
  [StandardModule]
  [HideModuleName]
  [DebuggerNonUserCode]
  [CompilerGenerated]
  internal sealed class MySettingsProperty
  {
    [HelpKeyword("My.Settings")]
    internal static MySettings Settings => MySettings.Default;
  }
}


// Decompiled with JetBrains decompiler
// Type: 巴哈姆特勇者資訊查詢器.My.MySettings
// Assembly: 巴哈姆特勇者資訊查詢器, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A33BE2FC-B7FF-424D-BCC1-9549C68B0587
// Assembly location: C:\Users\User\Desktop\巴哈姆特勇者資訊查詢器_v1.3.exe

using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

#nullable disable
namespace 巴哈姆特勇者資訊查詢器.My
{
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings defaultInstance = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool addedHandler;
    private static object addedHandlerLockObject = RuntimeHelpers.GetObjectValue(new object());

    [DebuggerNonUserCode]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    private static void AutoSaveSettings(object sender, EventArgs e)
    {
      if (!MyProject.Application.SaveMySettingsOnExit)
        return;
      MySettingsProperty.Settings.Save();
    }

    public static MySettings Default
    {
      get
      {
        if (!MySettings.addedHandler)
        {
          object handlerLockObject = MySettings.addedHandlerLockObject;
          ObjectFlowControl.CheckForSyncLockOnValueType(handlerLockObject);
          bool lockTaken = false;
          try
          {
            Monitor.Enter(handlerLockObject, ref lockTaken);
            if (!MySettings.addedHandler)
            {
              MyProject.Application.Shutdown += (ShutdownEventHandler) ([DebuggerNonUserCode, EditorBrowsable(EditorBrowsableState.Advanced)] (sender, e) =>
              {
                if (!MyProject.Application.SaveMySettingsOnExit)
                  return;
                MySettingsProperty.Settings.Save();
              });
              MySettings.addedHandler = true;
            }
          }
          finally
          {
            if (lockTaken)
              Monitor.Exit(handlerLockObject);
          }
        }
        return MySettings.defaultInstance;
      }
    }
  }
}


// Decompiled with JetBrains decompiler
// Type: 巴哈姆特勇者資訊查詢器.主表單
// Assembly: 巴哈姆特勇者資訊查詢器, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A33BE2FC-B7FF-424D-BCC1-9549C68B0587
// Assembly location: C:\Users\User\Desktop\巴哈姆特勇者資訊查詢器_v1.3.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Windows.Forms;
using 巴哈姆特勇者資訊查詢器.My;

#nullable disable
namespace 巴哈姆特勇者資訊查詢器
{
  [DesignerGenerated]
  public class 主表單 : Form
  {
    private Thread 資訊執行緒;
    private Thread 裝備執行緒;
    private Thread 好友執行緒;
    private Thread 粉絲執行緒;
    private Thread 公會執行緒;
    private Thread 文章執行緒;
    private string 字串內容;
    private int 文章頁數;
    private int 文章迴圈數;
    private IContainer components;

    public 主表單()
    {
      this.Load += new EventHandler(this.主表單_Load);
      this.KeyDown += new KeyEventHandler(this.主表單_KeyDown);
      this.KeyPress += new KeyPressEventHandler(this.主表單_KeyPress);
      this.FormClosing += new FormClosingEventHandler(this.主表單_FormClosing);
      this.字串內容 = (string) null;
      this.文章頁數 = 1;
      this.文章迴圈數 = 0;
      this.InitializeComponent();
    }

    private void 主表單_Load(object sender, EventArgs e)
    {
      this.檢查網路連線();
      int num = Operators.CompareString(this.狀態列_標籤_連線狀態顯示.Text, "無法連線", false) == 0 | Operators.CompareString(this.狀態列_標籤_連線狀態顯示.Text, "連線異常", false) == 0 ? 1 : 0;
    }

    private void 檢查網路連線()
    {
      bool isAvailable = MyProject.Computer.Network.IsAvailable;
      try
      {
        if (!isAvailable)
        {
          this.狀態列_標籤_連線狀態顯示.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.連線指示燈_紅燈;
          this.狀態列_標籤_連線狀態顯示.Text = "無法連線";
          this.介面初始化();
        }
        else if (isAvailable)
        {
          this.狀態列_標籤_連線狀態顯示.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.連線指示燈_綠燈;
          this.狀態列_標籤_連線狀態顯示.Text = "連線正常";
        }
        else
        {
          this.狀態列_標籤_連線狀態顯示.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.連線指示燈_黃燈;
          this.狀態列_標籤_連線狀態顯示.Text = "連線異常";
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_連線狀態顯示.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.連線指示燈_黃燈;
        this.狀態列_標籤_連線狀態顯示.Text = "連線異常";
        ProjectData.ClearProjectError();
      }
    }

    private void 介面初始化()
    {
      this.字串內容 = (string) null;
      this.文章頁數 = 1;
      this.文章迴圈數 = 0;
      this.按鈕_查詢.Enabled = true;
      this.按鈕_好友查詢.Enabled = false;
      this.清單_勇者好友.Enabled = false;
      this.按鈕_粉絲查詢.Enabled = false;
      this.清單_勇者粉絲.Enabled = false;
      this.圖片框_勇者資訊_勇者造型.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
      this.標籤_值_帳號.Text = "--";
      this.標籤_值_暱稱.Text = "--";
      this.標籤_值_等級.Text = "--";
      this.標籤_值_種族.Text = "--";
      this.標籤_值_職業.Text = "--";
      this.標籤_值_稱號.Text = "--";
      this.標籤_值_巴幣.Text = "--";
      this.標籤_值_ＧＰ.Text = "--";
      this.標籤_值_勇評.Text = "--";
      this.標籤_值_勇者血量值.Width = 0;
      this.標籤_值_勇者魔力值.Width = 0;
      this.標籤_值_勇者經驗值.Width = 0;
      this.提示.SetToolTip((Control) this.標籤_值_勇者血量值, "--");
      this.提示.SetToolTip((Control) this.標籤_背景_勇者血量值, "--");
      this.提示.SetToolTip((Control) this.標籤_值_勇者魔力值, "--");
      this.提示.SetToolTip((Control) this.標籤_背景_勇者魔力值, "--");
      this.提示.SetToolTip((Control) this.標籤_值_勇者經驗值, "--");
      this.提示.SetToolTip((Control) this.標籤_背景_勇者經驗值, "--");
      this.標籤_值_物攻.Text = "--";
      this.標籤_值_魔攻.Text = "--";
      this.標籤_值_物防.Text = "--";
      this.標籤_值_魔防.Text = "--";
      this.標籤_值_命中.Text = "--";
      this.標籤_值_迴避.Text = "--";
      this.標籤_值_幸運.Text = "--";
      this.標籤_值_更新時間.Text = "--";
      this.標籤_值_上站次數.Text = "--";
      this.標籤_值_上站日期.Text = "--";
      this.標籤_值_註冊日期.Text = "--";
      this.標籤_值_手機認證.Text = "--";
      this.標籤_值_認證時間.Text = "--";
      this.標籤_值_站規測驗.Text = "--";
      this.標籤_值_哈拉篇數.Text = "--";
      this.標籤_值_動漫電玩通.Text = "--";
      this.標籤_值_今日人氣.Text = "--";
      this.標籤_值_總人氣.Text = "--";
      this.標籤_值_創作.Text = "--";
      this.標籤_值_精華區.Text = "--";
      this.標籤_值_好友圈.Text = "--";
      this.標籤_值_粉絲數.Text = "--";
      this.圖片框_勇者裝備_勇者造型.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
      this.圖片框_勇者裝備_勇者裝備.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
      this.清單_勇者裝備.Items.Clear();
      this.清單_裝備資訊.Items.Clear();
      this.連結標籤_裝備網址.Text = (string) null;
      this.按鈕_儲存勇者造型.Enabled = false;
      this.按鈕_儲存勇者裝備.Enabled = false;
      this.圖片框_勇者好友頭像.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.未知頭像;
      this.連結標籤_好友網址.Text = (string) null;
      this.清單_勇者好友.Items.Clear();
      this.清單_好友資訊.Items.Clear();
      this.圖片框_勇者粉絲頭像.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.未知頭像;
      this.連結標籤_粉絲網址.Text = (string) null;
      this.清單_勇者粉絲.Items.Clear();
      this.清單_粉絲資訊.Items.Clear();
      this.連結標籤_公會網址.Text = (string) null;
      this.圖片框_公會封面.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設公會圖;
      this.清單_勇者公會.Items.Clear();
      this.清單_公會資訊.Items.Clear();
      this.標籤_值_公會等級.Text = "--";
      this.標籤_值_會長帳號.Text = "--";
      this.標籤_值_會長暱稱.Text = "--";
      this.標籤_值_開設日期.Text = "--";
      this.標籤_值_現有資金.Text = "--";
      this.標籤_值_招募制度.Text = "--";
      this.標籤_值_成員人數.Text = "--";
      this.標籤_值_昨日人氣.Text = "--";
      this.標籤_值_公會經驗值.Width = 0;
      this.連結標籤_文章網址.Text = (string) null;
      this.圖片框_文章封面.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設公會圖;
      this.標籤_值_文章作者.Text = "--";
      this.標籤_值_發表日期.Text = "--";
      this.標籤_值_贊助.Text = "--";
      this.標籤_值_人氣.Text = "--";
      this.標籤_值_文章ＧＰ.Text = "--";
      this.標籤_值_文章留言.Text = "--";
      this.清單_勇者文章.Items.Clear();
      this.清單_文章資訊.Items.Clear();
      this.按鈕_上一頁.Enabled = false;
      this.按鈕_下一頁.Enabled = false;
      this.圖片框_閱覽限制_付費閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.付費閱覽_灰階;
      this.圖片框_閱覽限制_限好友閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.限好友閱覽_灰階;
      this.圖片框_閱覽限制_年齡限制.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.年齡限制_灰階;
      this.圖片框_達人專區_部落格達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.部落格達人_灰階;
      this.圖片框_達人專區_小說達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.小說達人_灰階;
      this.圖片框_達人專區_繪圖達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.繪圖達人_灰階;
      this.圖片框_其它_GNN投稿新聞.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.GNN投稿新聞_灰階;
      this.圖片框_其它_熱門創作.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.熱門創作_灰階;
      this.圖片框_其它_精選閣樓.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.精選閣樓_灰階;
      this.提示.SetToolTip((Control) this.圖片框_閱覽限制_付費閱覽, "付費閱覽");
      this.狀態列_標籤_查詢狀態顯示.Text = "尚未查詢。";
    }

    private void 主表單_KeyDown(object sender, KeyEventArgs e)
    {
      switch (e.KeyCode)
      {
        case Keys.Return:
          if (Operators.CompareString(this.文字方塊_帳號輸入框.Text, (string) null, false) == 0)
          {
            this.狀態列_標籤_查詢狀態顯示.Text = "尚未輸入勇者帳號，無法查詢。";
            break;
          }
          this.執行查詢(RuntimeHelpers.GetObjectValue(sender), (EventArgs) e);
          break;
        case Keys.Escape:
          this.Close();
          break;
        case Keys.Prior:
          if (this.主頁籤.SelectedIndex == 0)
          {
            this.主頁籤.SelectedIndex = 5;
            break;
          }
          TabControl 主頁籤1;
          int num1 = checked ((主頁籤1 = this.主頁籤).SelectedIndex - 1);
          主頁籤1.SelectedIndex = num1;
          break;
        case Keys.Next:
          if (this.主頁籤.SelectedIndex == 5)
          {
            this.主頁籤.SelectedIndex = 0;
            break;
          }
          TabControl 主頁籤2;
          int num2 = checked ((主頁籤2 = this.主頁籤).SelectedIndex + 1);
          主頁籤2.SelectedIndex = num2;
          break;
        case Keys.Left:
          if (!e.Control)
            break;
          if (this.主頁籤.SelectedIndex == 5)
            this.清單_勇者文章.Focus();
          else
            this.主頁籤.Focus();
          if (!this.按鈕_上一頁.Enabled)
            break;
          this.按鈕_上一頁_Click(RuntimeHelpers.GetObjectValue(sender), (EventArgs) e);
          break;
        case Keys.Right:
          if (!e.Control)
            break;
          if (this.主頁籤.SelectedIndex == 5)
            this.清單_勇者文章.Focus();
          else
            this.主頁籤.Focus();
          if (!this.按鈕_下一頁.Enabled)
            break;
          this.按鈕_下一頁_Click(RuntimeHelpers.GetObjectValue(sender), (EventArgs) e);
          break;
        case Keys.C:
          if (Operators.CompareString(this.文字方塊_帳號輸入框.Text, (string) null, false) == 0)
            break;
          this.清除查詢(RuntimeHelpers.GetObjectValue(sender), (EventArgs) e);
          break;
        case Keys.E:
          if (!e.Control)
            break;
          if (this.按鈕_儲存勇者裝備.Enabled)
          {
            this.儲存勇者裝備(RuntimeHelpers.GetObjectValue(sender), (EventArgs) e);
            break;
          }
          this.狀態列_標籤_查詢狀態顯示.Text = "尚未選擇勇者裝備，無法儲存。";
          break;
        case Keys.F:
          if (Operators.CompareString(this.文字方塊_帳號輸入框.Text, (string) null, false) == 0)
            break;
          this.執行查詢(RuntimeHelpers.GetObjectValue(sender), (EventArgs) e);
          break;
        case Keys.K:
          if (!e.Control)
            break;
          if (this.按鈕_好友查詢.Enabled)
          {
            this.按鈕_好友查詢_Click(RuntimeHelpers.GetObjectValue(sender), (EventArgs) e);
            break;
          }
          this.狀態列_標籤_查詢狀態顯示.Text = "尚未選擇好友，無法查詢。";
          break;
        case Keys.L:
          if (!e.Control)
            break;
          if (this.按鈕_粉絲查詢.Enabled)
          {
            this.按鈕_粉絲查詢_Click(RuntimeHelpers.GetObjectValue(sender), (EventArgs) e);
            break;
          }
          this.狀態列_標籤_查詢狀態顯示.Text = "尚未選擇粉絲，無法查詢。";
          break;
        case Keys.M:
          if (!e.Control)
            break;
          if (this.按鈕_儲存勇者造型.Enabled)
          {
            this.儲存勇者造型(RuntimeHelpers.GetObjectValue(sender), (EventArgs) e);
            break;
          }
          this.狀態列_標籤_查詢狀態顯示.Text = "尚未查詢勇者，無法儲存勇者造型。";
          break;
      }
    }

    private void 主表單_KeyPress(object sender, KeyPressEventArgs e)
    {
      if (Operators.CompareString(Conversions.ToString(e.KeyChar), "\r", false) != 0)
        return;
      e.Handled = true;
    }

    private void 執行查詢(object sender, EventArgs e)
    {
      Control.CheckForIllegalCrossThreadCalls = false;
      try
      {
        if (Operators.CompareString(this.文字方塊_帳號輸入框.Text, (string) null, false) == 0)
        {
          this.狀態列_標籤_查詢狀態顯示.Text = "尚未輸入勇者帳號，無法查詢。";
        }
        else
        {
          this.介面初始化();
          this.按鈕_查詢.Enabled = false;
          this.狀態列_標籤_查詢狀態顯示.Text = "查詢中...";
          this.檢查網路連線();
          if (Operators.CompareString(this.狀態列_標籤_連線狀態顯示.Text, "無法連線", false) == 0 | Operators.CompareString(this.狀態列_標籤_連線狀態顯示.Text, "連線異常", false) == 0)
          {
            this.按鈕_查詢.Enabled = true;
          }
          else
          {
            string Left = Conversions.ToString(this.查詢小屋狀態("https://home.gamer.com.tw/homeindex.php?owner=" + this.文字方塊_帳號輸入框.Text));
            if (Operators.CompareString(Left, "查無此人", false) == 0)
            {
              this.按鈕_查詢.Enabled = true;
              this.狀態列_標籤_查詢狀態顯示.Text = "查無此人。";
            }
            else if (Operators.CompareString(Left, "已遭查封", false) == 0)
            {
              this.按鈕_查詢.Enabled = true;
              this.狀態列_標籤_查詢狀態顯示.Text = this.文字方塊_帳號輸入框.Text + "因違反站規，此勇者小屋已遭查封。";
            }
            else if (Operators.CompareString(Left, "查無小屋", false) == 0)
            {
              this.按鈕_查詢.Enabled = true;
              this.狀態列_標籤_查詢狀態顯示.Text = "查無此小屋，請重新操作。";
            }
            else
            {
              this.資訊執行緒 = new Thread(new ThreadStart(this.查詢勇者資訊));
              this.資訊執行緒.Start();
              this.裝備執行緒 = new Thread(new ThreadStart(this.查詢勇者裝備));
              this.裝備執行緒.Start();
              this.好友執行緒 = new Thread(new ThreadStart(this.查詢勇者好友));
              this.好友執行緒.Start();
              this.粉絲執行緒 = new Thread(new ThreadStart(this.查詢勇者粉絲));
              this.粉絲執行緒.Start();
              this.公會執行緒 = new Thread(new ThreadStart(this.查詢勇者公會));
              this.公會執行緒.Start();
              this.文章執行緒 = new Thread(new ThreadStart(this.查詢勇者文章));
              this.文章執行緒.Start();
              this.狀態列_標籤_查詢狀態顯示.Text = "查詢完畢。";
              this.按鈕_查詢.Enabled = true;
            }
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 清除查詢(object sender, EventArgs e)
    {
      try
      {
        this.文字方塊_帳號輸入框.Text = (string) null;
        this.介面初始化();
        this.資訊執行緒.Abort();
        this.裝備執行緒.Abort();
        this.好友執行緒.Abort();
        this.粉絲執行緒.Abort();
        this.公會執行緒.Abort();
        this.文章執行緒.Abort();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 勇者文章初始化()
    {
      this.連結標籤_文章網址.Text = (string) null;
      this.圖片框_文章封面.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設公會圖;
      this.標籤_值_文章作者.Text = "--";
      this.標籤_值_發表日期.Text = "--";
      this.標籤_值_贊助.Text = "--";
      this.標籤_值_人氣.Text = "--";
      this.標籤_值_文章ＧＰ.Text = "--";
      this.標籤_值_文章留言.Text = "--";
      this.清單_勇者文章.Items.Clear();
      this.清單_文章資訊.Items.Clear();
      this.圖片框_閱覽限制_付費閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.付費閱覽_灰階;
      this.圖片框_閱覽限制_限好友閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.限好友閱覽_灰階;
      this.圖片框_閱覽限制_年齡限制.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.年齡限制_灰階;
      this.圖片框_達人專區_部落格達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.部落格達人_灰階;
      this.圖片框_達人專區_小說達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.小說達人_灰階;
      this.圖片框_達人專區_繪圖達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.繪圖達人_灰階;
      this.圖片框_其它_GNN投稿新聞.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.GNN投稿新聞_灰階;
      this.圖片框_其它_熱門創作.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.熱門創作_灰階;
      this.圖片框_其它_精選閣樓.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.精選閣樓_灰階;
      this.提示.SetToolTip((Control) this.圖片框_閱覽限制_付費閱覽, "付費閱覽");
    }

    private void 按鈕_上一頁_Click(object sender, EventArgs e)
    {
      try
      {
        this.按鈕_上一頁.Enabled = false;
        this.按鈕_下一頁.Enabled = false;
        // ISSUE: variable of a reference type
        int& local1;
        // ISSUE: explicit reference operation
        int num1 = checked (^(local1 = ref this.文章頁數) - 1);
        local1 = num1;
        string Left = this.清單_勇者文章.Items.Count.ToString();
        if (Operators.CompareString(Left, Conversions.ToString(1), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local2;
          // ISSUE: explicit reference operation
          int num2 = checked (^(local2 = ref this.文章迴圈數) - 11);
          local2 = num2;
        }
        else if (Operators.CompareString(Left, Conversions.ToString(2), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local3;
          // ISSUE: explicit reference operation
          int num3 = checked (^(local3 = ref this.文章迴圈數) - 12);
          local3 = num3;
        }
        else if (Operators.CompareString(Left, Conversions.ToString(3), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local4;
          // ISSUE: explicit reference operation
          int num4 = checked (^(local4 = ref this.文章迴圈數) - 13);
          local4 = num4;
        }
        else if (Operators.CompareString(Left, Conversions.ToString(4), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local5;
          // ISSUE: explicit reference operation
          int num5 = checked (^(local5 = ref this.文章迴圈數) - 14);
          local5 = num5;
        }
        else if (Operators.CompareString(Left, Conversions.ToString(5), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local6;
          // ISSUE: explicit reference operation
          int num6 = checked (^(local6 = ref this.文章迴圈數) - 15);
          local6 = num6;
        }
        else if (Operators.CompareString(Left, Conversions.ToString(6), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local7;
          // ISSUE: explicit reference operation
          int num7 = checked (^(local7 = ref this.文章迴圈數) - 16);
          local7 = num7;
        }
        else if (Operators.CompareString(Left, Conversions.ToString(7), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local8;
          // ISSUE: explicit reference operation
          int num8 = checked (^(local8 = ref this.文章迴圈數) - 17);
          local8 = num8;
        }
        else if (Operators.CompareString(Left, Conversions.ToString(8), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local9;
          // ISSUE: explicit reference operation
          int num9 = checked (^(local9 = ref this.文章迴圈數) - 18);
          local9 = num9;
        }
        else if (Operators.CompareString(Left, Conversions.ToString(9), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local10;
          // ISSUE: explicit reference operation
          int num10 = checked (^(local10 = ref this.文章迴圈數) - 19);
          local10 = num10;
        }
        else if (Operators.CompareString(Left, Conversions.ToString(10), false) == 0)
        {
          // ISSUE: variable of a reference type
          int& local11;
          // ISSUE: explicit reference operation
          int num11 = checked (^(local11 = ref this.文章迴圈數) - 20);
          local11 = num11;
        }
        this.勇者文章初始化();
        this.文章執行緒 = new Thread(new ThreadStart(this.查詢勇者文章));
        this.文章執行緒.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 按鈕_下一頁_Click(object sender, EventArgs e)
    {
      try
      {
        // ISSUE: variable of a reference type
        int& local;
        // ISSUE: explicit reference operation
        int num = checked (^(local = ref this.文章頁數) + 1);
        local = num;
        this.勇者文章初始化();
        this.文章執行緒 = new Thread(new ThreadStart(this.查詢勇者文章));
        this.文章執行緒.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 查詢勇者文章()
    {
      try
      {
        this.清單_勇者文章.Enabled = false;
        this.讀取勇者文章(Encoding.UTF8.GetString(new WebClient().DownloadData(new Uri(("https://home.gamer.com.tw/creation.php?page=" + Conversions.ToString(this.文章頁數) + "&owner=" + this.文字方塊_帳號輸入框.Text + "&v=0&t=0").Trim()))));
        this.清單_勇者文章.Enabled = true;
        this.文章執行緒.Abort();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = "勇者文章：" + ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 讀取勇者文章(string 網頁原始碼)
    {
      try
      {
        this.讀取網頁內容(網頁原始碼, 16, 6, "align=\\\"center\\\">此分類還沒有發表創作！<br />");
        if (Operators.CompareString(this.字串內容, "此分類還沒有發表創作！", false) == 0)
          return;
        MatchCollection matchCollection1 = Regex.Matches(網頁原始碼, "<img src=\\\"(https)://.+?.[A-Za-z]*\\\" /></a></div>");
        MatchCollection matchCollection2 = Regex.Matches(網頁原始碼, "<a class=\\\"TS1\\\" href=\\\"creationDetail.php\\?sn=[0-9]*\\\">.*?</a>");
        MatchCollection matchCollection3 = Regex.Matches(網頁原始碼, "class=\\\"IMG-[A-Z][0-9]*\\\"\\s[Title=\\\"]?.*?[\\\"]*?/>");
        MatchCollection matchCollection4 = Regex.Matches(網頁原始碼, "作者：<a href=\\\"//home.gamer.com.tw/[A-Za-z0-9]*\\\">.*?</a>│");
        MatchCollection matchCollection5 = Regex.Matches(網頁原始碼, "</a>│\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}│");
        MatchCollection matchCollection6 = Regex.Matches(網頁原始碼, "贊助：.*?│");
        MatchCollection matchCollection7 = Regex.Matches(網頁原始碼, "人氣：.*?<");
        MatchCollection matchCollection8 = Regex.Matches(網頁原始碼, ">[0-9]* GP<");
        if (matchCollection2.Count >= 1)
        {
          try
          {
            foreach (Match match in matchCollection2)
            {
              // ISSUE: variable of a reference type
              int& local;
              // ISSUE: explicit reference operation
              int num = checked (^(local = ref this.文章迴圈數) + 1);
              local = num;
              string[] strArray = Strings.Split(Strings.Replace(match.Value.ToString(), "<", ">"), ">");
              strArray[2] = Conversions.ToString(this.處理轉義符號(strArray[2]));
              this.清單_勇者文章.Items.Add(new ListViewItem(Conversions.ToString(this.文章迴圈數))
              {
                SubItems = {
                  "",
                  strArray[2]
                }
              });
              this.清單_文章資訊.Items.Add(new ListViewItem("https://home.gamer.com.tw/" + Strings.Mid(strArray[1], 21, checked (strArray[1].Length - 20 - 1)))
              {
                SubItems = {
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "False",
                  "False",
                  "False",
                  "False",
                  "False",
                  "False",
                  "False",
                  "False",
                  "False",
                  "False"
                }
              });
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          string Left = (string) null;
          int num1 = 0;
          try
          {
            foreach (Match match in matchCollection3)
            {
              checked { ++num1; }
              if (Strings.InStr(1, match.Value.ToString(), "IMG-C01") > 0)
              {
                Left = "付費閱覽";
                string[] strArray = Strings.Split(match.Value.ToString(), "\"");
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[7].Text = "True";
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[8].Text = Strings.Mid(strArray[3], 5, checked (strArray[3].Length - 4 - 4));
                checked { --num1; }
              }
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-E11") > 0)
              {
                Left = "限好友閱覽";
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[9].Text = "True";
                checked { --num1; }
              }
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-C14") > 0)
              {
                Left = "年齡限制";
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[10].Text = "True";
                checked { --num1; }
              }
              if (Strings.InStr(1, match.Value.ToString(), "IMG-C04") > 0)
              {
                Left = "部落格達人";
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[11].Text = "True";
                checked { --num1; }
              }
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-C05") > 0)
              {
                Left = "小說達人";
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[12].Text = "True";
                checked { --num1; }
              }
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-C06") > 0)
              {
                Left = "繪圖達人";
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[13].Text = "True";
                checked { --num1; }
              }
              if (Strings.InStr(1, match.Value.ToString(), "IMG-C12") > 0)
              {
                Left = "GNN投稿新聞";
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[14].Text = "True";
                checked { --num1; }
              }
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-C02") > 0)
              {
                Left = "熱門創作";
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[15].Text = "True";
                checked { --num1; }
              }
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-C03") > 0)
              {
                Left = "精選閣樓";
                this.清單_文章資訊.Items[checked (num1 - 1)].SubItems[16].Text = "True";
                checked { --num1; }
              }
              if (Strings.InStr(1, match.Value.ToString(), "IMG-C07") > 0)
                Left = "繪圖";
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-C08") > 0)
                Left = "小說";
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-C09") > 0)
                Left = "日誌";
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-C10") > 0)
                Left = "Cos";
              else if (Strings.InStr(1, match.Value.ToString(), "IMG-C11") > 0)
                Left = "同人";
              if (Operators.CompareString(Left, "繪圖", false) == 0 | Operators.CompareString(Left, "小說", false) == 0 | Operators.CompareString(Left, "日誌", false) == 0 | Operators.CompareString(Left, "Cos", false) == 0 | Operators.CompareString(Left, "同人", false) == 0)
                this.清單_勇者文章.Items[checked (num1 - 1)].SubItems[1].Text = Left;
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num2 = 0;
          try
          {
            foreach (Match match in matchCollection1)
            {
              checked { ++num2; }
              string[] strArray = Strings.Split(match.Value.ToString(), "\"");
              this.清單_文章資訊.Items[checked (num2 - 1)].SubItems[1].Text = strArray[1];
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num3 = 0;
          try
          {
            foreach (Match match in matchCollection4)
            {
              checked { ++num3; }
              string[] strArray = Strings.Split(Strings.Replace(match.Value.ToString(), "<", ">"), ">");
              strArray[2] = Conversions.ToString(this.處理轉義符號(strArray[2]));
              this.清單_文章資訊.Items[checked (num3 - 1)].SubItems[2].Text = strArray[2];
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num4 = 0;
          try
          {
            foreach (Match match in matchCollection5)
            {
              checked { ++num4; }
              this.清單_文章資訊.Items[checked (num4 - 1)].SubItems[3].Text = Strings.Mid(match.Value.ToString(), 6, checked (match.Value.ToString().Length - 5 - 1));
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num5 = 0;
          try
          {
            foreach (Match match in matchCollection6)
            {
              checked { ++num5; }
              this.清單_文章資訊.Items[checked (num5 - 1)].SubItems[4].Text = Strings.Mid(match.Value.ToString(), 4, checked (match.Value.ToString().Length - 3 - 1));
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num6 = 0;
          try
          {
            foreach (Match match in matchCollection7)
            {
              checked { ++num6; }
              this.清單_文章資訊.Items[checked (num6 - 1)].SubItems[5].Text = Strings.Mid(match.Value.ToString(), 4, checked (match.Value.ToString().Length - 3 - 1));
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num7 = 0;
          try
          {
            foreach (Match match in matchCollection8)
            {
              checked { ++num7; }
              this.清單_文章資訊.Items[checked (num7 - 1)].SubItems[6].Text = Strings.Mid(match.Value.ToString(), 2, checked (match.Value.ToString().Length - 1 - 4));
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          if (Regex.Matches(網頁原始碼, "class='prev'").Count >= 1)
            this.按鈕_上一頁.Enabled = true;
          else
            this.按鈕_上一頁.Enabled = false;
          if (Regex.Matches(網頁原始碼, "class='next'").Count >= 1)
            this.按鈕_下一頁.Enabled = true;
          else
            this.按鈕_下一頁.Enabled = false;
        }
        else
          this.字串內容 = "--";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 清單_選擇勇者文章(object sender, EventArgs e)
    {
      try
      {
        if (this.清單_勇者文章.SelectedItems.Count > 0)
        {
          int index = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.清單_勇者文章.SelectedItems[0].SubItems[0].Text) - 1.0)));
          while (index >= 10)
            checked { index -= 10; }
          this.連結標籤_文章網址.Text = this.清單_文章資訊.Items[index].SubItems[0].Text;
          this.標籤_值_文章作者.Text = this.清單_文章資訊.Items[index].SubItems[2].Text;
          this.標籤_值_發表日期.Text = this.清單_文章資訊.Items[index].SubItems[3].Text;
          this.標籤_值_贊助.Text = this.清單_文章資訊.Items[index].SubItems[4].Text;
          this.標籤_值_人氣.Text = this.清單_文章資訊.Items[index].SubItems[5].Text;
          this.標籤_值_文章ＧＰ.Text = this.清單_文章資訊.Items[index].SubItems[6].Text;
          this.圖片框_文章封面.Image = (Image) this.圖片網址處理(this.清單_文章資訊.Items[index].SubItems[1].Text);
          if (Operators.CompareString(this.清單_文章資訊.Items[index].SubItems[7].Text, "True", false) == 0)
          {
            this.圖片框_閱覽限制_付費閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.付費閱覽;
            this.提示.SetToolTip((Control) this.圖片框_閱覽限制_付費閱覽, "閱覽費：" + this.清單_文章資訊.Items[index].SubItems[8].Text + " 枚巴幣");
          }
          if (Operators.CompareString(this.清單_文章資訊.Items[index].SubItems[9].Text, "True", false) == 0)
            this.圖片框_閱覽限制_限好友閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.限好友閱覽;
          if (Operators.CompareString(this.清單_文章資訊.Items[index].SubItems[10].Text, "True", false) == 0)
            this.圖片框_閱覽限制_年齡限制.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.年齡限制;
          if (Operators.CompareString(this.清單_文章資訊.Items[index].SubItems[11].Text, "True", false) == 0)
            this.圖片框_達人專區_部落格達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.部落格達人;
          if (Operators.CompareString(this.清單_文章資訊.Items[index].SubItems[12].Text, "True", false) == 0)
            this.圖片框_達人專區_小說達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.小說達人;
          if (Operators.CompareString(this.清單_文章資訊.Items[index].SubItems[13].Text, "True", false) == 0)
            this.圖片框_達人專區_繪圖達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.繪圖達人;
          if (Operators.CompareString(this.清單_文章資訊.Items[index].SubItems[14].Text, "True", false) == 0)
            this.圖片框_其它_GNN投稿新聞.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.GNN投稿新聞;
          if (Operators.CompareString(this.清單_文章資訊.Items[index].SubItems[15].Text, "True", false) == 0)
            this.圖片框_其它_熱門創作.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.熱門創作;
          if (Operators.CompareString(this.清單_文章資訊.Items[index].SubItems[16].Text, "True", false) == 0)
            this.圖片框_其它_精選閣樓.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.精選閣樓;
          MatchCollection matchCollection = Regex.Matches(Encoding.UTF8.GetString(new WebClient().DownloadData(new Uri(this.連結標籤_文章網址.Text.Trim()))), "共 [0-9]* 篇留言");
          if (matchCollection.Count < 1)
            return;
          try
          {
            foreach (Match match in matchCollection)
              this.標籤_值_文章留言.Text = Strings.Mid(match.Value.ToString(), 3, checked (match.Value.ToString().Length - 2 - 4));
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
        }
        else
        {
          this.連結標籤_文章網址.Text = (string) null;
          this.標籤_值_文章作者.Text = "--";
          this.標籤_值_發表日期.Text = "--";
          this.標籤_值_贊助.Text = "--";
          this.標籤_值_人氣.Text = "--";
          this.標籤_值_ＧＰ.Text = "--";
          this.標籤_值_文章留言.Text = "--";
          this.圖片框_文章封面.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設公會圖;
          this.圖片框_閱覽限制_付費閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.付費閱覽_灰階;
          this.圖片框_閱覽限制_限好友閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.限好友閱覽_灰階;
          this.圖片框_閱覽限制_年齡限制.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.年齡限制_灰階;
          this.圖片框_達人專區_部落格達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.部落格達人_灰階;
          this.圖片框_達人專區_小說達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.小說達人_灰階;
          this.圖片框_達人專區_繪圖達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.繪圖達人_灰階;
          this.圖片框_其它_GNN投稿新聞.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.GNN投稿新聞_灰階;
          this.圖片框_其它_熱門創作.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.熱門創作_灰階;
          this.圖片框_其它_精選閣樓.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.精選閣樓_灰階;
          this.提示.SetToolTip((Control) this.圖片框_閱覽限制_付費閱覽, "付費閱覽");
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 查詢勇者公會()
    {
      try
      {
        this.清單_勇者公會.Enabled = false;
        this.讀取勇者公會(Encoding.UTF8.GetString(new WebClient().DownloadData(new Uri(("https://home.gamer.com.tw/joinGuild.php?owner=" + this.文字方塊_帳號輸入框.Text).Trim()))));
        this.清單_勇者公會.Enabled = true;
        this.公會執行緒.Abort();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = "勇者公會：" + ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 讀取勇者公會(string 網頁原始碼)
    {
      try
      {
        MatchCollection matchCollection1 = Regex.Matches(網頁原始碼, "<p\\s*?class=\\\"acgboxname\\\"><a\\s*?href=\\\".*\\\">.*</a></p>");
        MatchCollection matchCollection2 = Regex.Matches(網頁原始碼, "<img src=\\\".+\\\" /></a></div>");
        if (matchCollection1.Count >= 1)
        {
          int num1 = 0;
          try
          {
            foreach (Match match in matchCollection1)
            {
              checked { ++num1; }
              string[] strArray = Strings.Split(Strings.Replace(match.Value.ToString(), "<", ">"), ">");
              strArray[4] = Conversions.ToString(this.處理轉義符號(strArray[4]));
              this.清單_勇者公會.Items.Add(new ListViewItem(Conversions.ToString(num1))
              {
                SubItems = {
                  strArray[4]
                }
              });
              this.清單_公會資訊.Items.Add(new ListViewItem("https:" + Strings.Mid(strArray[3], 9, checked (strArray[3].Length - 8 - 1)))
              {
                SubItems = {
                  ""
                }
              });
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num2 = 0;
          try
          {
            foreach (Match match in matchCollection2)
            {
              checked { ++num2; }
              string[] strArray = Strings.Split(match.Value.ToString(), "\"");
              this.清單_公會資訊.Items[checked (num2 - 1)].SubItems[1].Text = strArray[1];
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
        }
        else
          this.字串內容 = "--";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 清單_選擇勇者公會(object sender, EventArgs e)
    {
      try
      {
        if (this.清單_勇者公會.SelectedItems.Count > 0)
        {
          int index = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.清單_勇者公會.SelectedItems[0].SubItems[0].Text) - 1.0)));
          this.連結標籤_公會網址.Text = this.清單_公會資訊.Items[index].SubItems[0].Text;
          this.圖片框_公會封面.Image = (Image) this.圖片網址處理(this.清單_公會資訊.Items[index].SubItems[1].Text);
          this.讀取勇者公會資訊(Encoding.UTF8.GetString(new WebClient().DownloadData(new Uri(this.清單_公會資訊.Items[index].SubItems[0].Text.Trim()))));
        }
        else
        {
          this.連結標籤_公會網址.Text = (string) null;
          this.圖片框_公會封面.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設公會圖;
          this.標籤_值_公會等級.Text = "--";
          this.標籤_值_會長帳號.Text = "--";
          this.標籤_值_會長暱稱.Text = "--";
          this.標籤_值_開設日期.Text = "--";
          this.標籤_值_現有資金.Text = "--";
          this.標籤_值_招募制度.Text = "--";
          this.標籤_值_成員人數.Text = "--";
          this.標籤_值_昨日人氣.Text = "--";
          this.標籤_值_公會經驗值.Width = 0;
          this.提示.SetToolTip((Control) this.標籤_值_公會經驗值, "--");
          this.提示.SetToolTip((Control) this.標籤_背景_公會經驗值, "--");
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 讀取勇者公會資訊(string 網頁原始碼)
    {
      try
      {
        if (Operators.ConditionalCompareObjectGreaterEqual(this.檢查勇者小屋狀態(網頁原始碼, 4, 4, "<p>此公會社團已被凍結！<br>原因：會長已被刪除或凍結帳號。</p>"), (object) 1, false))
        {
          this.狀態列_標籤_查詢狀態顯示.Text = "此公會社團已被凍結！　原因：會長已被刪除或凍結帳號。";
          this.標籤_值_公會等級.Text = "--";
          this.標籤_值_會長帳號.Text = "--";
          this.標籤_值_會長暱稱.Text = "--";
          this.標籤_值_開設日期.Text = "--";
          this.標籤_值_現有資金.Text = "--";
          this.標籤_值_招募制度.Text = "--";
          this.標籤_值_成員人數.Text = "--";
          this.標籤_值_昨日人氣.Text = "--";
          this.標籤_值_公會經驗值.Width = 0;
          this.提示.SetToolTip((Control) this.標籤_值_公會經驗值, "--");
          this.提示.SetToolTip((Control) this.標籤_背景_公會經驗值, "--");
        }
        else
        {
          this.狀態列_標籤_查詢狀態顯示.Text = "查詢完畢。";
          this.讀取網頁內容(網頁原始碼, 24, 1, "class=\\\"IMG-I[0-9]*\\\" title=\\\"Lv.[0-9]*\\\"");
          this.標籤_值_公會等級.Text = this.字串內容;
          this.讀取網頁內容(網頁原始碼, 3, 7, "<p class=\\\"GU-lbox2C\\\">.+</p>");
          string[] strArray = Strings.Split(Strings.Replace(this.字串內容, "<", ">"), ">");
          this.標籤_值_會長帳號.Text = strArray[5];
          strArray[7] = strArray[7].Replace("&", "&&&");
          this.標籤_值_會長暱稱.Text = Strings.Mid(strArray[7], 4, checked (strArray[7].Length - 2));
          this.標籤_值_開設日期.Text = Strings.Mid(strArray[11], 5, checked (strArray[11].Length - 4));
          this.讀取網頁內容(網頁原始碼, 15, 9, "id=\\\"sTribute\\\">[0-9]*</strong>");
          this.標籤_值_現有資金.Text = this.字串內容;
          this.讀取網頁內容(網頁原始碼, 13, 5, "招募制度</span>：.*?</li>");
          this.標籤_值_招募制度.Text = this.字串內容;
          this.讀取網頁內容(網頁原始碼, 11, 5, "成員</span>：[0-9]* 人</li>");
          this.標籤_值_成員人數.Text = this.字串內容;
          this.讀取網頁內容(網頁原始碼, 13, 5, "昨日人氣</span>：[0-9]*</li>");
          this.標籤_值_昨日人氣.Text = this.字串內容;
          this.讀取網頁內容(網頁原始碼, 7, 1, "width:[0-9]*%");
          if (Operators.CompareString(this.字串內容, "--", false) == 0)
          {
            this.標籤_值_公會經驗值.Width = 0;
          }
          else
          {
            this.提示.SetToolTip((Control) this.標籤_值_公會經驗值, this.字串內容 + "%");
            this.提示.SetToolTip((Control) this.標籤_背景_公會經驗值, this.字串內容 + "%");
            this.字串內容 = Conversions.ToString(Conversions.ToDouble(this.字串內容) / 100.0 * 369.0);
            this.標籤_值_公會經驗值.Width = Conversions.ToInteger(this.字串內容);
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 查詢勇者粉絲()
    {
      try
      {
        this.按鈕_粉絲查詢.Enabled = false;
        this.清單_勇者粉絲.Enabled = false;
        this.讀取勇者粉絲(Encoding.UTF8.GetString(new WebClient().DownloadData(new Uri(("https://home.gamer.com.tw/friendList.php?user=" + this.文字方塊_帳號輸入框.Text + "&t=4").Trim()))));
        this.按鈕_粉絲查詢.Enabled = true;
        this.清單_勇者粉絲.Enabled = true;
        this.粉絲執行緒.Abort();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = "勇者粉絲：" + ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 讀取勇者粉絲(string 網頁原始碼)
    {
      try
      {
        MatchCollection matchCollection1 = Regex.Matches(網頁原始碼, "class=\\\"gamercard\\\"\\s*?src=\\\"[^\\\"]*.[A-Za-z]*\\\">");
        MatchCollection matchCollection2 = Regex.Matches(網頁原始碼, "class=\\\"user_id\\\"\\s*?data-origin=\\\"[A-Za-z0-9]*\\\">");
        MatchCollection matchCollection3 = Regex.Matches(網頁原始碼, "class=\\\"nickname\\\"\\s*?data-origin=\\\".*\\\">");
        if (matchCollection2.Count >= 1)
        {
          int num1 = 0;
          try
          {
            foreach (Match match in matchCollection2)
            {
              checked { ++num1; }
              ListViewItem listViewItem = new ListViewItem(Conversions.ToString(num1));
              int length = match.Value.Length;
              this.字串內容 = Strings.Mid(match.Value.ToString(), 30, checked (length - 29 - 2));
              listViewItem.SubItems.Add(this.字串內容);
              listViewItem.SubItems.Add("");
              this.清單_勇者粉絲.Items.Add(listViewItem);
              this.清單_粉絲資訊.Items.Add(new ListViewItem("https://home.gamer.com.tw/" + this.字串內容)
              {
                SubItems = {
                  ""
                }
              });
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num2 = 0;
          try
          {
            foreach (Match match in matchCollection3)
            {
              checked { ++num2; }
              int length = match.Value.Length;
              this.字串內容 = Strings.Mid(match.Value.ToString(), 31, checked (length - 30 - 2));
              this.字串內容 = Conversions.ToString(this.處理轉義符號(this.字串內容));
              if (Operators.CompareString(this.字串內容, (string) null, false) == 0)
              {
                string Left = Conversions.ToString(this.查詢小屋狀態("https://home.gamer.com.tw/homeindex.php?owner=" + this.清單_勇者粉絲.Items[checked (num2 - 1)].SubItems[1].Text));
                if (Operators.CompareString(Left, "查無此人", false) == 0)
                  this.清單_勇者粉絲.Items[checked (num2 - 1)].SubItems[2].Text = "查無此人。";
                else if (Operators.CompareString(Left, "已遭查封", false) == 0)
                  this.清單_勇者粉絲.Items[checked (num2 - 1)].SubItems[2].Text = "因違反站規，此勇者小屋已遭查封。";
                else if (Operators.CompareString(Left, "查無小屋", false) == 0)
                  this.清單_勇者粉絲.Items[checked (num2 - 1)].SubItems[2].Text = "查無此小屋，請重新操作。";
                this.清單_勇者粉絲.Items[checked (num2 - 1)].ForeColor = Color.Red;
              }
              else
                this.清單_勇者粉絲.Items[checked (num2 - 1)].SubItems[2].Text = this.字串內容;
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num3 = 0;
          try
          {
            foreach (Match match in matchCollection1)
            {
              checked { ++num3; }
              string[] strArray = Strings.Split(match.Value.ToString(), "\"");
              this.清單_粉絲資訊.Items[checked (num3 - 1)].SubItems[1].Text = strArray[3];
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
        }
        else
          this.字串內容 = "--";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 清單_選擇勇者粉絲(object sender, EventArgs e)
    {
      try
      {
        if (this.清單_勇者粉絲.SelectedItems.Count > 0)
        {
          int index = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.清單_勇者粉絲.SelectedItems[0].SubItems[0].Text) - 1.0)));
          this.連結標籤_粉絲網址.Text = this.清單_粉絲資訊.Items[index].SubItems[0].Text;
          this.圖片框_勇者粉絲頭像.Image = (Image) this.圖片網址處理(this.清單_粉絲資訊.Items[index].SubItems[1].Text);
        }
        else
        {
          this.連結標籤_粉絲網址.Text = (string) null;
          this.圖片框_勇者粉絲頭像.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.未知頭像;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 按鈕_粉絲查詢_Click(object sender, EventArgs e)
    {
      try
      {
        if (Operators.CompareString(this.連結標籤_粉絲網址.Text, (string) null, false) != 0)
        {
          this.按鈕_粉絲查詢.Enabled = false;
          this.文字方塊_帳號輸入框.Text = Strings.Mid(this.連結標籤_粉絲網址.Text, 27, checked (this.連結標籤_粉絲網址.Text.Length - 26));
          this.執行查詢(RuntimeHelpers.GetObjectValue(sender), e);
          this.主頁籤.SelectedIndex = 0;
        }
        else
          this.狀態列_標籤_查詢狀態顯示.Text = "尚未選擇粉絲，無法進行查詢。";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 查詢勇者好友()
    {
      try
      {
        this.按鈕_好友查詢.Enabled = false;
        this.清單_勇者好友.Enabled = false;
        this.讀取勇者好友(Encoding.UTF8.GetString(new WebClient().DownloadData(new Uri(("https://home.gamer.com.tw/friendList.php?user=" + this.文字方塊_帳號輸入框.Text + "&t=1").Trim()))));
        this.按鈕_好友查詢.Enabled = true;
        this.清單_勇者好友.Enabled = true;
        this.好友執行緒.Abort();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = "勇者好友：" + ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 讀取勇者好友(string 網頁原始碼)
    {
      try
      {
        MatchCollection matchCollection1 = Regex.Matches(網頁原始碼, "class=\\\"gamercard\\\"\\s*?src=\\\"[^\\\"]*.[A-Za-z]*[\\?v=0-9]*?\\\">");
        MatchCollection matchCollection2 = Regex.Matches(網頁原始碼, "class=\\\"user_id\\\"\\s*?data-origin=\\\"[A-Za-z0-9]*\\\">");
        MatchCollection matchCollection3 = Regex.Matches(網頁原始碼, "class=\\\"nickname\\\"\\s*?data-origin=\\\".*\\\">");
        if (matchCollection2.Count >= 1)
        {
          int num1 = 0;
          try
          {
            foreach (Match match in matchCollection2)
            {
              checked { ++num1; }
              ListViewItem listViewItem = new ListViewItem(Conversions.ToString(num1));
              int length = match.Value.Length;
              this.字串內容 = Strings.Mid(match.Value.ToString(), 30, checked (length - 29 - 2));
              listViewItem.SubItems.Add(this.字串內容);
              listViewItem.SubItems.Add("");
              this.清單_勇者好友.Items.Add(listViewItem);
              this.清單_好友資訊.Items.Add(new ListViewItem("https://home.gamer.com.tw/" + this.字串內容)
              {
                SubItems = {
                  ""
                }
              });
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num2 = 0;
          try
          {
            foreach (Match match in matchCollection3)
            {
              checked { ++num2; }
              int length = match.Value.Length;
              this.字串內容 = Strings.Mid(match.Value.ToString(), 31, checked (length - 30 - 2));
              this.字串內容 = Conversions.ToString(this.處理轉義符號(this.字串內容));
              if (Operators.CompareString(this.字串內容, (string) null, false) == 0)
              {
                string Left = Conversions.ToString(this.查詢小屋狀態("https://home.gamer.com.tw/homeindex.php?owner=" + this.清單_勇者好友.Items[checked (num2 - 1)].SubItems[1].Text));
                if (Operators.CompareString(Left, "查無此人", false) == 0)
                  this.清單_勇者好友.Items[checked (num2 - 1)].SubItems[2].Text = "查無此人。";
                else if (Operators.CompareString(Left, "已遭查封", false) == 0)
                  this.清單_勇者好友.Items[checked (num2 - 1)].SubItems[2].Text = "因違反站規，此勇者小屋已遭查封。";
                else if (Operators.CompareString(Left, "查無小屋", false) == 0)
                  this.清單_勇者好友.Items[checked (num2 - 1)].SubItems[2].Text = "查無此小屋，請重新操作。";
                this.清單_勇者好友.Items[checked (num2 - 1)].ForeColor = Color.Red;
              }
              else
                this.清單_勇者好友.Items[checked (num2 - 1)].SubItems[2].Text = this.字串內容;
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num3 = 0;
          try
          {
            foreach (Match match in matchCollection1)
            {
              checked { ++num3; }
              string[] strArray = Strings.Split(match.Value.ToString(), "\"");
              this.清單_好友資訊.Items[checked (num3 - 1)].SubItems[1].Text = strArray[3];
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
        }
        else
          this.字串內容 = "--";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 清單_選擇勇者好友(object sender, EventArgs e)
    {
      try
      {
        if (this.清單_勇者好友.SelectedItems.Count >= 1)
        {
          int index = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.清單_勇者好友.SelectedItems[0].SubItems[0].Text) - 1.0)));
          this.連結標籤_好友網址.Text = this.清單_好友資訊.Items[index].SubItems[0].Text;
          this.圖片框_勇者好友頭像.Image = (Image) this.圖片網址處理(this.清單_好友資訊.Items[index].SubItems[1].Text);
          this.按鈕_好友查詢.Enabled = true;
        }
        else
        {
          this.連結標籤_好友網址.Text = (string) null;
          this.圖片框_勇者好友頭像.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.未知頭像;
          this.按鈕_好友查詢.Enabled = false;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 按鈕_好友查詢_Click(object sender, EventArgs e)
    {
      try
      {
        if (Operators.CompareString(this.連結標籤_好友網址.Text, (string) null, false) != 0)
        {
          this.按鈕_好友查詢.Enabled = false;
          this.文字方塊_帳號輸入框.Text = Strings.Mid(this.連結標籤_好友網址.Text, 27, checked (this.連結標籤_好友網址.Text.Length - 26));
          this.執行查詢(RuntimeHelpers.GetObjectValue(sender), e);
          this.主頁籤.SelectedIndex = 0;
        }
        else
          this.狀態列_標籤_查詢狀態顯示.Text = "尚未選擇好友，無法進行查詢。";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 查詢勇者裝備()
    {
      try
      {
        this.清單_勇者裝備.Enabled = false;
        this.按鈕_儲存勇者造型.Enabled = false;
        this.按鈕_儲存勇者裝備.Enabled = false;
        this.讀取勇者裝備(Encoding.UTF8.GetString(new WebClient().DownloadData(new Uri(("https://avatar1.gamer.com.tw/showdress.php?uid=" + this.文字方塊_帳號輸入框.Text).Trim()))), "<li>.*?<a\\s*?href=\\\"detail\\.php\\?sn=[0-9]*\\\"\\s+.*?target=\\\"_blank\\\"\\s+.*?class=\\\"msggoon\\\">.*?</a></li>");
        this.清單_勇者裝備.Enabled = true;
        this.按鈕_儲存勇者造型.Enabled = true;
        this.裝備執行緒.Abort();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = "勇者裝備：" + ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 讀取勇者裝備(string 網頁原始碼, string 字串定位)
    {
      try
      {
        MatchCollection matchCollection1 = Regex.Matches(網頁原始碼, "<li>.*?<a\\s*?href=\\\"detail\\.php\\?sn=[0-9]*\\\"\\s+.*?target=\\\"_blank\\\"\\s+.*?class=\\\"msggoon\\\">.*?</a></li>");
        MatchCollection matchCollection2 = Regex.Matches(網頁原始碼, "<img src=\\\"(https)://.+?.[PNG|png]\\\" title=\\\".+?\\\" />");
        if (matchCollection1.Count >= 1)
        {
          int num1 = 0;
          try
          {
            foreach (Match match in matchCollection1)
            {
              checked { ++num1; }
              string[] strArray1 = Strings.Split(Strings.Replace(match.Value.ToString(), "<", ">"), ">");
              string[] strArray2 = Strings.Split(match.Value.ToString(), "\"");
              this.清單_勇者裝備.Items.Add(new ListViewItem(Conversions.ToString(num1))
              {
                SubItems = {
                  strArray1[2],
                  strArray1[4]
                }
              });
              this.清單_裝備資訊.Items.Add(new ListViewItem("https://avatar1.gamer.com.tw/" + strArray2[1])
              {
                SubItems = {
                  ""
                }
              });
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
          int num2 = 0;
          try
          {
            foreach (Match match in matchCollection2)
            {
              checked { ++num2; }
              string[] strArray = Strings.Split(match.Value.ToString(), "\"");
              this.清單_裝備資訊.Items[checked (num2 - 1)].SubItems[1].Text = strArray[1];
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
        }
        else
          this.字串內容 = "--";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 清單_選擇勇者裝備(object sender, EventArgs e)
    {
      try
      {
        if (this.清單_勇者裝備.SelectedItems.Count >= 1)
        {
          int index = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.清單_勇者裝備.SelectedItems[0].SubItems[0].Text) - 1.0)));
          this.連結標籤_裝備網址.Text = this.清單_裝備資訊.Items[index].SubItems[0].Text;
          this.圖片框_勇者裝備_勇者裝備.Image = (Image) this.圖片網址處理(this.清單_裝備資訊.Items[index].SubItems[1].Text);
          this.按鈕_儲存勇者裝備.Enabled = true;
        }
        else
        {
          this.連結標籤_裝備網址.Text = (string) null;
          this.圖片框_勇者裝備_勇者裝備.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
          this.按鈕_儲存勇者裝備.Enabled = false;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 儲存勇者造型(object sender, EventArgs e)
    {
      try
      {
        this.圖片儲存路徑檢查();
        string str = MyProject.Computer.FileSystem.SpecialDirectories.MyPictures + "\\巴哈姆特勇者資訊查詢器\\" + this.標籤_值_帳號.Text + " 的勇者造型.png";
        if (Operators.CompareString(this.標籤_值_帳號.Text, "--", false) == 0)
          return;
        if (!MyProject.Computer.FileSystem.FileExists(str))
        {
          this.圖片框_勇者裝備_勇者造型.Image.Save(str);
          this.狀態列_標籤_查詢狀態顯示.Text = "勇者造型儲存完畢。";
        }
        else
          this.狀態列_標籤_查詢狀態顯示.Text = "勇者造型已存在，不須儲存。";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 儲存勇者裝備(object sender, EventArgs e)
    {
      try
      {
        this.圖片儲存路徑檢查();
        if (this.清單_勇者裝備.SelectedItems.Count > 0)
        {
          string str = MyProject.Computer.FileSystem.SpecialDirectories.MyPictures + "\\巴哈姆特勇者資訊查詢器\\" + this.標籤_值_帳號.Text + " 的勇者裝備_" + Conversions.ToString(this.儲存路徑符號處理(this.清單_勇者裝備.SelectedItems[0].SubItems[1].Text)) + "_" + Conversions.ToString(this.儲存路徑符號處理(this.清單_勇者裝備.SelectedItems[0].SubItems[2].Text)) + ".png";
          if (Operators.CompareString(this.標籤_值_帳號.Text, "--", false) == 0)
            return;
          if (!MyProject.Computer.FileSystem.FileExists(str))
          {
            this.圖片框_勇者裝備_勇者裝備.Image.Save(str);
            this.狀態列_標籤_查詢狀態顯示.Text = "勇者裝備儲存完畢。";
          }
          else
            this.狀態列_標籤_查詢狀態顯示.Text = "勇者裝備已存在，不須儲存。";
        }
        else
          this.狀態列_標籤_查詢狀態顯示.Text = "尚未選擇欲儲存的勇者裝備。";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private object 儲存路徑符號處理(string 字串處理)
    {
      object obj;
      try
      {
        字串處理 = 字串處理.Replace("\\", "＼");
        字串處理 = 字串處理.Replace("/", "／");
        字串處理 = 字串處理.Replace(":", "：");
        字串處理 = 字串處理.Replace("*", "＊");
        字串處理 = 字串處理.Replace("?", "？");
        字串處理 = 字串處理.Replace("\"", " ");
        字串處理 = 字串處理.Replace("<", "＜");
        字串處理 = 字串處理.Replace(">", "＞");
        字串處理 = 字串處理.Replace("|", "｜");
        obj = (object) 字串處理;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) ex.Message;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    private void 圖片儲存路徑檢查()
    {
      string path = MyProject.Computer.FileSystem.SpecialDirectories.MyPictures + "\\巴哈姆特勇者資訊查詢器";
      try
      {
        if (Directory.Exists(path))
          return;
        Directory.CreateDirectory(path);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private object 查詢小屋狀態(string 接收網址)
    {
      object obj;
      try
      {
        string 網頁原始碼 = Encoding.UTF8.GetString(new WebClient().DownloadData(new Uri(接收網址.Trim())));
        if (Operators.ConditionalCompareObjectGreaterEqual(this.檢查勇者小屋狀態(網頁原始碼, 4, 4, "<p>查無此人。</p>"), (object) 1, false))
        {
          obj = (object) "查無此人";
          goto label_8;
        }
        else if (Operators.ConditionalCompareObjectGreaterEqual(this.檢查勇者小屋狀態(網頁原始碼, 1, 4, "因違反站規，此勇者小屋已遭查封。</p>"), (object) 1, false))
        {
          obj = (object) "已遭查封";
          goto label_8;
        }
        else if (Operators.ConditionalCompareObjectGreaterEqual(this.檢查勇者小屋狀態(網頁原始碼, 4, 4, "<p>查無此小屋，請重新操作。</p>"), (object) 1, false))
        {
          obj = (object) "查無小屋";
          goto label_8;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
      obj = (object) "正常";
label_8:
      return obj;
    }

    private void 查詢勇者資訊()
    {
      try
      {
        string 網頁原始碼 = Encoding.UTF8.GetString(new WebClient().DownloadData(new Uri(("https://home.gamer.com.tw/homeindex.php?owner=" + this.文字方塊_帳號輸入框.Text).Trim())));
        this.圖片框_勇者資訊_勇者造型.Image = (Image) this.圖片內容(網頁原始碼, 6, 21, "src=\\\"[^\\\"]*\\\".+MSG-myavatar");
        this.讀取網頁內容(網頁原始碼, 26, 7, "<li>帳號：.+\\\"TS2\\\">.+</span>");
        this.標籤_值_帳號.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 26, 7, "<li>暱稱：.+\\\"TS2\\\">.+</span>");
        this.字串內容 = this.字串內容.Replace("&", "&&&");
        this.標籤_值_暱稱.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 3, 2, "LV[0-9]*\\s\\/");
        this.標籤_值_等級.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 3, 2, "/\\s.+\\s/");
        this.標籤_值_種族.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 8, 5, "/\\s.+</li>");
        this.標籤_值_職業.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 8, 5, "<li>稱號：.+</li>");
        this.標籤_值_稱號.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 8, 5, "<li>巴幣：.+</li>");
        this.標籤_值_巴幣.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 8, 5, "<li>GP：.+</li>");
        this.標籤_值_ＧＰ.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 7, 4, "\\\"AT2\\\">.+</a>");
        this.標籤_值_勇評.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 24, 1, "MSG-barA\\\".+%");
        if (Operators.CompareString(this.字串內容, "--", false) == 0)
        {
          this.標籤_值_勇者血量值.Width = 0;
        }
        else
        {
          this.提示.SetToolTip((Control) this.標籤_值_勇者血量值, this.字串內容 + "%");
          this.提示.SetToolTip((Control) this.標籤_背景_勇者血量值, this.字串內容 + "%");
          this.字串內容 = Conversions.ToString(Conversions.ToDouble(this.字串內容) / 100.0 * 248.0);
          this.標籤_值_勇者血量值.Width = Conversions.ToInteger(this.字串內容);
        }
        this.讀取網頁內容(網頁原始碼, 24, 1, "MSG-barB\\\".+%");
        if (Operators.CompareString(this.字串內容, "--", false) == 0)
        {
          this.標籤_值_勇者魔力值.Width = 0;
        }
        else
        {
          this.提示.SetToolTip((Control) this.標籤_值_勇者魔力值, this.字串內容 + "%");
          this.提示.SetToolTip((Control) this.標籤_背景_勇者魔力值, this.字串內容 + "%");
          this.字串內容 = Conversions.ToString(Conversions.ToDouble(this.字串內容) / 100.0 * 248.0);
          this.標籤_值_勇者魔力值.Width = Conversions.ToInteger(this.字串內容);
        }
        this.讀取網頁內容(網頁原始碼, 24, 1, "MSG-barC\\\".+%");
        if (Operators.CompareString(this.字串內容, "--", false) == 0)
        {
          this.標籤_值_勇者經驗值.Width = 0;
        }
        else
        {
          this.提示.SetToolTip((Control) this.標籤_值_勇者經驗值, this.字串內容 + "%");
          this.提示.SetToolTip((Control) this.標籤_背景_勇者經驗值, this.字串內容 + "%");
          this.字串內容 = Conversions.ToString(Conversions.ToDouble(this.字串內容) / 100.0 * 248.0);
          this.標籤_值_勇者經驗值.Width = Conversions.ToInteger(this.字串內容);
        }
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>STR：[0-9]*</li>");
        this.標籤_值_物攻.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>INT：[0-9]*</li>");
        this.標籤_值_魔攻.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>VIT：[0-9]*</li>");
        this.標籤_值_物防.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>MND：[0-9]*</li>");
        this.標籤_值_魔防.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>DEX：[0-9]*</li>");
        this.標籤_值_命中.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>AGI：[0-9]*</li>");
        this.標籤_值_迴避.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>LUK：[0-9]*</li>");
        this.標籤_值_幸運.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>更新時間：.+</li>");
        this.標籤_值_更新時間.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>上站次數：.+</li>");
        this.標籤_值_上站次數.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>上站日期：.+</li>");
        this.標籤_值_上站日期.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>註冊日期：.+</li>");
        this.標籤_值_註冊日期.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>手機認證：.+</li>");
        this.標籤_值_手機認證.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>認證時間：.+</li>");
        this.標籤_值_認證時間.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>站規測驗：.+</li>");
        this.標籤_值_站規測驗.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>哈啦篇數：.+</li>");
        this.標籤_值_哈拉篇數.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 11, 5, "<li>動漫電玩通：.+</li>");
        this.標籤_值_動漫電玩通.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>今日人氣：.+</li>");
        this.標籤_值_今日人氣.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>總人氣：.+</li>");
        this.標籤_值_總人氣.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 8, 5, "<li>創作：.+</li>");
        this.標籤_值_創作.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>精華區：.+</li>");
        this.標籤_值_精華區.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 9, 5, "<li>好友圈：.+</li>");
        this.標籤_值_好友圈.Text = this.字串內容;
        this.讀取網頁內容(網頁原始碼, 10, 5, "<li>被追蹤數：.+</li>");
        this.標籤_值_粉絲數.Text = this.字串內容;
        this.圖片框_勇者裝備_勇者造型.Image = (Image) this.圖片內容(網頁原始碼, 6, 21, "src=\\\"[^\\\"]*\\\".+MSG-myavatar");
        this.資訊執行緒.Abort();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = "勇者資訊：" + ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private object 檢查勇者小屋狀態(string 網頁原始碼, int 開始位置, int 結束位置, string 字串定位)
    {
      return (object) Regex.Matches(網頁原始碼, 字串定位).Count;
    }

    private object 圖片內容(string 網頁原始碼, int 開始位置, int 結束位置, string 字串定位)
    {
      object obj;
      try
      {
        MatchCollection matchCollection = Regex.Matches(網頁原始碼, 字串定位);
        if (matchCollection.Count >= 1)
        {
          try
          {
            foreach (Match match in matchCollection)
            {
              int length = match.Value.Length;
              HttpWebResponse response = (HttpWebResponse) ((HttpWebRequest) WebRequest.Create(Strings.Mid(match.Value.ToString(), 開始位置, checked (length - (開始位置 - 1) - 結束位置)))).GetResponse();
              try
              {
                if (response.StatusCode == HttpStatusCode.OK)
                {
                  obj = (object) new Bitmap(response.GetResponseStream());
                  goto label_13;
                }
              }
              finally
              {
                response.Close();
              }
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
        }
        else
        {
          obj = (object) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
          goto label_13;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
      obj = (object) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
label_13:
      return obj;
    }

    private object 圖片網址處理(string 圖片網址)
    {
      HttpWebResponse httpWebResponse = (HttpWebResponse) null;
      object obj;
      try
      {
        httpWebResponse = (HttpWebResponse) ((HttpWebRequest) WebRequest.Create(圖片網址)).GetResponse();
        if (httpWebResponse.StatusCode == HttpStatusCode.OK)
        {
          obj = (object) new Bitmap(httpWebResponse.GetResponseStream());
          goto label_6;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
      finally
      {
        httpWebResponse.Close();
      }
      obj = (object) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
label_6:
      return obj;
    }

    private object 讀取網頁內容(string 網頁原始碼, int 開始位置, int 結束位置, string 字串定位)
    {
      object obj;
      try
      {
        MatchCollection matchCollection = Regex.Matches(網頁原始碼, 字串定位);
        if (matchCollection.Count >= 1)
        {
          try
          {
            foreach (Match match in matchCollection)
            {
              int length = match.Value.Length;
              this.字串內容 = Strings.Mid(match.Value.ToString(), 開始位置, checked (length - (開始位置 - 1) - 結束位置));
              this.字串內容 = Conversions.ToString(this.處理轉義符號(this.字串內容));
            }
          }
          finally
          {
            IEnumerator enumerator;
            if (enumerator is IDisposable)
              (enumerator as IDisposable).Dispose();
          }
        }
        else
          this.字串內容 = "--";
        obj = (object) this.字串內容;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) ex.Message;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    private object 處理轉義符號(string 字串處理)
    {
      object obj;
      try
      {
        字串處理 = 字串處理.Replace("&nbsp;", " ");
        字串處理 = 字串處理.Replace("&quot;", "\"");
        字串處理 = 字串處理.Replace("&amp;", "&");
        字串處理 = 字串處理.Replace("&#039;", "'");
        字串處理 = 字串處理.Replace(":", ":");
        字串處理 = 字串處理.Replace("&lt;", "<");
        字串處理 = 字串處理.Replace("&gt;", ">");
        obj = (object) 字串處理;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) ex.Message;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    private void 主表單_FormClosing(object sender, FormClosingEventArgs e)
    {
      try
      {
        this.資訊執行緒.Abort();
        this.裝備執行緒.Abort();
        this.好友執行緒.Abort();
        this.粉絲執行緒.Abort();
        this.公會執行緒.Abort();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 連結標籤_裝備網址_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
      try
      {
        Process.Start(this.連結標籤_裝備網址.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 連結標籤_好友網址_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
      try
      {
        Process.Start(this.連結標籤_好友網址.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 連結標籤_粉絲網址_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
      try
      {
        Process.Start(this.連結標籤_粉絲網址.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 連結標籤_公會網址_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
      try
      {
        Process.Start(this.連結標籤_公會網址.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    private void 連結標籤_文章網址_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
      try
      {
        Process.Start(this.連結標籤_文章網址.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.狀態列_標籤_查詢狀態顯示.Text = ex.Message;
        ProjectData.ClearProjectError();
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (主表單));
      this.標籤_標題_查詢帳號 = new Label();
      this.按鈕_查詢 = new Button();
      this.文字方塊_帳號輸入框 = new TextBox();
      this.狀態列 = new StatusStrip();
      this.狀態列_標籤_連線狀態顯示 = new ToolStripStatusLabel();
      this.狀態列_標籤_查詢狀態顯示 = new ToolStripStatusLabel();
      this.主頁籤 = new TabControl();
      this.頁籤_勇者資訊 = new TabPage();
      this.群組_小屋統計 = new GroupBox();
      this.標籤_值_粉絲數 = new Label();
      this.標籤_標題_粉絲數 = new Label();
      this.標籤_值_好友圈 = new Label();
      this.標籤_標題_好友圈 = new Label();
      this.標籤_值_精華區 = new Label();
      this.標籤_標題_精華區 = new Label();
      this.標籤_值_創作 = new Label();
      this.標籤_標題_創作 = new Label();
      this.標籤_值_總人氣 = new Label();
      this.標籤_標題_總人氣 = new Label();
      this.標籤_值_今日人氣 = new Label();
      this.標籤_標題_今日人氣 = new Label();
      this.群組_個人記錄 = new GroupBox();
      this.標籤_值_動漫電玩通 = new Label();
      this.標籤_標題_動漫電玩通 = new Label();
      this.標籤_值_哈拉篇數 = new Label();
      this.標籤_標題_哈拉篇數 = new Label();
      this.標籤_值_站規測驗 = new Label();
      this.標籤_標題_站規測驗 = new Label();
      this.標籤_值_認證時間 = new Label();
      this.標籤_標題_認證時間 = new Label();
      this.標籤_值_手機認證 = new Label();
      this.標籤_標題_手機認證 = new Label();
      this.標籤_值_註冊日期 = new Label();
      this.標籤_標題_註冊日期 = new Label();
      this.標籤_值_上站日期 = new Label();
      this.標籤_標題_上站日期 = new Label();
      this.標籤_值_上站次數 = new Label();
      this.標籤_標題_上站次數 = new Label();
      this.標籤_值_更新時間 = new Label();
      this.標籤_標題_更新時間 = new Label();
      this.群組_勇者能力 = new GroupBox();
      this.標籤_值_幸運 = new Label();
      this.標籤_標題_幸運 = new Label();
      this.標籤_值_迴避 = new Label();
      this.標籤_標題_迴避 = new Label();
      this.標籤_值_命中 = new Label();
      this.標籤_標題_命中 = new Label();
      this.標籤_值_魔防 = new Label();
      this.標籤_標題_魔防 = new Label();
      this.標籤_值_物防 = new Label();
      this.標籤_標題_物防 = new Label();
      this.標籤_值_魔攻 = new Label();
      this.標籤_標題_魔攻 = new Label();
      this.標籤_值_物攻 = new Label();
      this.標籤_標題_物攻 = new Label();
      this.群組_勇者歷練 = new GroupBox();
      this.標籤_值_勇者經驗值 = new Label();
      this.標籤_背景_勇者經驗值 = new Label();
      this.標籤_標題_經驗 = new Label();
      this.標籤_值_勇者魔力值 = new Label();
      this.標籤_背景_勇者魔力值 = new Label();
      this.標籤_標題_魔力 = new Label();
      this.標籤_值_勇者血量值 = new Label();
      this.標籤_背景_勇者血量值 = new Label();
      this.標籤_標題_血量 = new Label();
      this.標籤_值_勇評 = new Label();
      this.標籤_標題_勇評 = new Label();
      this.標籤_值_ＧＰ = new Label();
      this.標籤_標題_ＧＰ = new Label();
      this.標籤_值_巴幣 = new Label();
      this.標籤_標題_巴幣 = new Label();
      this.標籤_值_稱號 = new Label();
      this.標籤_標題_稱號 = new Label();
      this.標籤_值_職業 = new Label();
      this.標籤_標題_職業 = new Label();
      this.標籤_值_種族 = new Label();
      this.標籤_標題_種族 = new Label();
      this.標籤_值_等級 = new Label();
      this.標籤_標題_等級 = new Label();
      this.標籤_值_暱稱 = new Label();
      this.標籤_標題_暱稱 = new Label();
      this.標籤_值_帳號 = new Label();
      this.標籤_標題_帳號 = new Label();
      this.頁籤_勇者裝備 = new TabPage();
      this.按鈕_儲存勇者裝備 = new Button();
      this.按鈕_儲存勇者造型 = new Button();
      this.群組_勇者裝備 = new GroupBox();
      this.群組_裝備清單 = new GroupBox();
      this.清單_裝備資訊 = new ListView();
      this.清單項目_裝備網址 = new ColumnHeader();
      this.清單項目_裝備封面網址 = new ColumnHeader();
      this.清單_勇者裝備 = new ListView();
      this.清單項目_裝備編號 = new ColumnHeader();
      this.清單項目_類別 = new ColumnHeader();
      this.清單項目_裝備名稱 = new ColumnHeader();
      this.清單_裝備網址 = new ListBox();
      this.群組_裝備網址 = new GroupBox();
      this.連結標籤_裝備網址 = new LinkLabel();
      this.群組_勇者造型 = new GroupBox();
      this.頁籤_勇者好友 = new TabPage();
      this.清單_好友資訊 = new ListView();
      this.清單項目_好友網址 = new ColumnHeader();
      this.清單項目_好友頭像網址 = new ColumnHeader();
      this.群組_好友頭像 = new GroupBox();
      this.群組_好友網址 = new GroupBox();
      this.按鈕_好友查詢 = new Button();
      this.連結標籤_好友網址 = new LinkLabel();
      this.清單_勇者好友 = new ListView();
      this.清單項目_好友編號 = new ColumnHeader();
      this.清單項目_好友帳號 = new ColumnHeader();
      this.清單項目_好友暱稱 = new ColumnHeader();
      this.頁籤_勇者粉絲 = new TabPage();
      this.清單_粉絲資訊 = new ListView();
      this.清單項目_粉絲網址 = new ColumnHeader();
      this.清單項目_粉絲頭像網址 = new ColumnHeader();
      this.群組_粉絲頭像 = new GroupBox();
      this.群組_粉絲網址 = new GroupBox();
      this.按鈕_粉絲查詢 = new Button();
      this.連結標籤_粉絲網址 = new LinkLabel();
      this.清單_勇者粉絲 = new ListView();
      this.清單項目_粉絲編號 = new ColumnHeader();
      this.清單項目_粉絲帳號 = new ColumnHeader();
      this.清單項目_粉絲暱稱 = new ColumnHeader();
      this.頁籤_勇者公會 = new TabPage();
      this.清單_公會資訊 = new ListView();
      this.清單項目_公會網址 = new ColumnHeader();
      this.清單項目_公會封面網址 = new ColumnHeader();
      this.標籤_值_會長暱稱 = new Label();
      this.標籤_標題_會長暱稱 = new Label();
      this.標籤_值_公會經驗值 = new Label();
      this.標籤_背景_公會經驗值 = new Label();
      this.標籤_標題_經驗值 = new Label();
      this.標籤_值_昨日人氣 = new Label();
      this.標籤_標題_昨日人氣 = new Label();
      this.標籤_值_成員人數 = new Label();
      this.標籤_標題_成員人數 = new Label();
      this.標籤_值_招募制度 = new Label();
      this.標籤_標題_招募制度 = new Label();
      this.標籤_值_現有資金 = new Label();
      this.標籤_標題_現有資金 = new Label();
      this.標籤_值_開設日期 = new Label();
      this.標籤_標題_開設日期 = new Label();
      this.標籤_值_會長帳號 = new Label();
      this.標籤_標題_會長帳號 = new Label();
      this.標籤_值_公會等級 = new Label();
      this.標籤_標題_公會等級 = new Label();
      this.群組_公會封面 = new GroupBox();
      this.群組_公會網址 = new GroupBox();
      this.連結標籤_公會網址 = new LinkLabel();
      this.清單_勇者公會 = new ListView();
      this.清單項目_公會編號 = new ColumnHeader();
      this.清單項目_公會名稱 = new ColumnHeader();
      this.頁籤_勇者文章 = new TabPage();
      this.標籤_值_文章留言 = new Label();
      this.標籤_標題_文章留言 = new Label();
      this.清單_文章資訊 = new ListView();
      this.清單項目_文章網址 = new ColumnHeader();
      this.清單項目_文章封面網址 = new ColumnHeader();
      this.清單項目_文章作者 = new ColumnHeader();
      this.清單項目_發表日期 = new ColumnHeader();
      this.清單項目_贊助 = new ColumnHeader();
      this.清單項目_人氣 = new ColumnHeader();
      this.清單項目_ＧＰ = new ColumnHeader();
      this.清單項目_熱門創作 = new ColumnHeader();
      this.清單項目_精選閣樓 = new ColumnHeader();
      this.清單項目_部落格達人 = new ColumnHeader();
      this.清單項目_小說達人 = new ColumnHeader();
      this.清單項目_繪圖達人 = new ColumnHeader();
      this.清單項目_GNN投稿新聞 = new ColumnHeader();
      this.按鈕_下一頁 = new Button();
      this.按鈕_上一頁 = new Button();
      this.標籤_值_贊助 = new Label();
      this.標籤_標題_贊助 = new Label();
      this.標籤_值_文章ＧＰ = new Label();
      this.標籤_標題_文章ＧＰ = new Label();
      this.標籤_值_人氣 = new Label();
      this.標籤_標題_人氣 = new Label();
      this.清單_勇者文章 = new ListView();
      this.清單項目_文章編號 = new ColumnHeader();
      this.清單項目_文章分類 = new ColumnHeader();
      this.清單項目_文章標題 = new ColumnHeader();
      this.標籤_值_發表日期 = new Label();
      this.標籤_標題_發表日期 = new Label();
      this.標籤_值_文章作者 = new Label();
      this.標籤_標題_文章作者 = new Label();
      this.群組_文章封面 = new GroupBox();
      this.群組_文章網址 = new GroupBox();
      this.連結標籤_文章網址 = new LinkLabel();
      this.按鈕_清除 = new Button();
      this.提示 = new ToolTip(this.components);
      this.群組_閱覽限制 = new GroupBox();
      this.群組_達人專區 = new GroupBox();
      this.群組_其它 = new GroupBox();
      this.圖片框_勇者資訊_勇者造型 = new PictureBox();
      this.圖片框_勇者裝備_勇者裝備 = new PictureBox();
      this.圖片框_勇者裝備_勇者造型 = new PictureBox();
      this.圖片框_勇者好友頭像 = new PictureBox();
      this.圖片框_勇者粉絲頭像 = new PictureBox();
      this.圖片框_公會封面 = new PictureBox();
      this.圖片框_其它_GNN投稿新聞 = new PictureBox();
      this.圖片框_其它_熱門創作 = new PictureBox();
      this.圖片框_其它_精選閣樓 = new PictureBox();
      this.圖片框_達人專區_部落格達人 = new PictureBox();
      this.圖片框_達人專區_小說達人 = new PictureBox();
      this.圖片框_達人專區_繪圖達人 = new PictureBox();
      this.圖片框_閱覽限制_付費閱覽 = new PictureBox();
      this.圖片框_閱覽限制_限好友閱覽 = new PictureBox();
      this.圖片框_閱覽限制_年齡限制 = new PictureBox();
      this.圖片框_文章封面 = new PictureBox();
      this.清單項目_付費閱覽 = new ColumnHeader();
      this.清單項目_限好友閱覽 = new ColumnHeader();
      this.清單項目_年齡限制 = new ColumnHeader();
      this.清單項目_付費巴幣 = new ColumnHeader();
      this.狀態列.SuspendLayout();
      this.主頁籤.SuspendLayout();
      this.頁籤_勇者資訊.SuspendLayout();
      this.群組_小屋統計.SuspendLayout();
      this.群組_個人記錄.SuspendLayout();
      this.群組_勇者能力.SuspendLayout();
      this.群組_勇者歷練.SuspendLayout();
      this.頁籤_勇者裝備.SuspendLayout();
      this.群組_勇者裝備.SuspendLayout();
      this.群組_裝備清單.SuspendLayout();
      this.群組_裝備網址.SuspendLayout();
      this.群組_勇者造型.SuspendLayout();
      this.頁籤_勇者好友.SuspendLayout();
      this.群組_好友頭像.SuspendLayout();
      this.群組_好友網址.SuspendLayout();
      this.頁籤_勇者粉絲.SuspendLayout();
      this.群組_粉絲頭像.SuspendLayout();
      this.群組_粉絲網址.SuspendLayout();
      this.頁籤_勇者公會.SuspendLayout();
      this.群組_公會封面.SuspendLayout();
      this.群組_公會網址.SuspendLayout();
      this.頁籤_勇者文章.SuspendLayout();
      this.群組_文章封面.SuspendLayout();
      this.群組_文章網址.SuspendLayout();
      this.群組_閱覽限制.SuspendLayout();
      this.群組_達人專區.SuspendLayout();
      this.群組_其它.SuspendLayout();
      ((ISupportInitialize) this.圖片框_勇者資訊_勇者造型).BeginInit();
      ((ISupportInitialize) this.圖片框_勇者裝備_勇者裝備).BeginInit();
      ((ISupportInitialize) this.圖片框_勇者裝備_勇者造型).BeginInit();
      ((ISupportInitialize) this.圖片框_勇者好友頭像).BeginInit();
      ((ISupportInitialize) this.圖片框_勇者粉絲頭像).BeginInit();
      ((ISupportInitialize) this.圖片框_公會封面).BeginInit();
      ((ISupportInitialize) this.圖片框_其它_GNN投稿新聞).BeginInit();
      ((ISupportInitialize) this.圖片框_其它_熱門創作).BeginInit();
      ((ISupportInitialize) this.圖片框_其它_精選閣樓).BeginInit();
      ((ISupportInitialize) this.圖片框_達人專區_部落格達人).BeginInit();
      ((ISupportInitialize) this.圖片框_達人專區_小說達人).BeginInit();
      ((ISupportInitialize) this.圖片框_達人專區_繪圖達人).BeginInit();
      ((ISupportInitialize) this.圖片框_閱覽限制_付費閱覽).BeginInit();
      ((ISupportInitialize) this.圖片框_閱覽限制_限好友閱覽).BeginInit();
      ((ISupportInitialize) this.圖片框_閱覽限制_年齡限制).BeginInit();
      ((ISupportInitialize) this.圖片框_文章封面).BeginInit();
      this.SuspendLayout();
      this.標籤_標題_查詢帳號.AutoSize = true;
      this.標籤_標題_查詢帳號.Location = new Point(7, 16);
      this.標籤_標題_查詢帳號.Name = "標籤_標題_查詢帳號";
      this.標籤_標題_查詢帳號.Size = new Size(41, 12);
      this.標籤_標題_查詢帳號.TabIndex = 9;
      this.標籤_標題_查詢帳號.Text = "帳號：";
      this.按鈕_查詢.Location = new Point(291, 11);
      this.按鈕_查詢.Name = "按鈕_查詢";
      this.按鈕_查詢.Size = new Size(75, 23);
      this.按鈕_查詢.TabIndex = 1;
      this.按鈕_查詢.Text = "查詢";
      this.按鈕_查詢.UseVisualStyleBackColor = true;
      this.文字方塊_帳號輸入框.Location = new Point(48, 11);
      this.文字方塊_帳號輸入框.Name = "文字方塊_帳號輸入框";
      this.文字方塊_帳號輸入框.Size = new Size(237, 22);
      this.文字方塊_帳號輸入框.TabIndex = 0;
      this.狀態列.Items.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.狀態列_標籤_連線狀態顯示,
        (ToolStripItem) this.狀態列_標籤_查詢狀態顯示
      });
      this.狀態列.Location = new Point(0, 499);
      this.狀態列.Name = "狀態列";
      this.狀態列.Size = new Size(454, 22);
      this.狀態列.SizingGrip = false;
      this.狀態列.TabIndex = 14;
      this.狀態列.Text = "狀態列";
      this.狀態列_標籤_連線狀態顯示.BackgroundImageLayout = ImageLayout.None;
      this.狀態列_標籤_連線狀態顯示.ImageAlign = ContentAlignment.MiddleLeft;
      this.狀態列_標籤_連線狀態顯示.ImageScaling = ToolStripItemImageScaling.None;
      this.狀態列_標籤_連線狀態顯示.Name = "狀態列_標籤_連線狀態顯示";
      this.狀態列_標籤_連線狀態顯示.Size = new Size(103, 17);
      this.狀態列_標籤_連線狀態顯示.Text = "尚未檢查網路連線";
      this.狀態列_標籤_連線狀態顯示.TextAlign = ContentAlignment.MiddleRight;
      this.狀態列_標籤_查詢狀態顯示.Margin = new Padding(10, 3, 0, 2);
      this.狀態列_標籤_查詢狀態顯示.Name = "狀態列_標籤_查詢狀態顯示";
      this.狀態列_標籤_查詢狀態顯示.Size = new Size(67, 17);
      this.狀態列_標籤_查詢狀態顯示.Text = "尚未查詢。";
      this.主頁籤.Controls.Add((Control) this.頁籤_勇者資訊);
      this.主頁籤.Controls.Add((Control) this.頁籤_勇者裝備);
      this.主頁籤.Controls.Add((Control) this.頁籤_勇者好友);
      this.主頁籤.Controls.Add((Control) this.頁籤_勇者粉絲);
      this.主頁籤.Controls.Add((Control) this.頁籤_勇者公會);
      this.主頁籤.Controls.Add((Control) this.頁籤_勇者文章);
      this.主頁籤.Location = new Point(7, 40);
      this.主頁籤.Name = "主頁籤";
      this.主頁籤.SelectedIndex = 0;
      this.主頁籤.Size = new Size(440, 455);
      this.主頁籤.TabIndex = 3;
      this.頁籤_勇者資訊.Controls.Add((Control) this.群組_小屋統計);
      this.頁籤_勇者資訊.Controls.Add((Control) this.群組_個人記錄);
      this.頁籤_勇者資訊.Controls.Add((Control) this.群組_勇者能力);
      this.頁籤_勇者資訊.Controls.Add((Control) this.群組_勇者歷練);
      this.頁籤_勇者資訊.Location = new Point(4, 22);
      this.頁籤_勇者資訊.Name = "頁籤_勇者資訊";
      this.頁籤_勇者資訊.Padding = new Padding(3);
      this.頁籤_勇者資訊.Size = new Size(432, 429);
      this.頁籤_勇者資訊.TabIndex = 0;
      this.頁籤_勇者資訊.Text = "勇者資訊";
      this.頁籤_勇者資訊.UseVisualStyleBackColor = true;
      this.群組_小屋統計.Controls.Add((Control) this.標籤_值_粉絲數);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_標題_粉絲數);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_值_好友圈);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_標題_好友圈);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_值_精華區);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_標題_精華區);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_值_創作);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_標題_創作);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_值_總人氣);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_標題_總人氣);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_值_今日人氣);
      this.群組_小屋統計.Controls.Add((Control) this.標籤_標題_今日人氣);
      this.群組_小屋統計.Location = new Point(220, 240);
      this.群組_小屋統計.Name = "群組_小屋統計";
      this.群組_小屋統計.Size = new Size(205, 182);
      this.群組_小屋統計.TabIndex = 17;
      this.群組_小屋統計.TabStop = false;
      this.群組_小屋統計.Text = "小屋統計";
      this.標籤_值_粉絲數.AutoSize = true;
      this.標籤_值_粉絲數.Location = new Point(71, 108);
      this.標籤_值_粉絲數.Name = "標籤_值_粉絲數";
      this.標籤_值_粉絲數.Size = new Size(13, 12);
      this.標籤_值_粉絲數.TabIndex = 30;
      this.標籤_值_粉絲數.Text = "--";
      this.標籤_標題_粉絲數.AutoSize = true;
      this.標籤_標題_粉絲數.Location = new Point(20, 108);
      this.標籤_標題_粉絲數.Name = "標籤_標題_粉絲數";
      this.標籤_標題_粉絲數.Size = new Size(53, 12);
      this.標籤_標題_粉絲數.TabIndex = 29;
      this.標籤_標題_粉絲數.Text = "粉絲數：";
      this.標籤_值_好友圈.AutoSize = true;
      this.標籤_值_好友圈.Location = new Point(71, 90);
      this.標籤_值_好友圈.Name = "標籤_值_好友圈";
      this.標籤_值_好友圈.Size = new Size(13, 12);
      this.標籤_值_好友圈.TabIndex = 28;
      this.標籤_值_好友圈.Text = "--";
      this.標籤_標題_好友圈.AutoSize = true;
      this.標籤_標題_好友圈.Location = new Point(20, 90);
      this.標籤_標題_好友圈.Name = "標籤_標題_好友圈";
      this.標籤_標題_好友圈.Size = new Size(53, 12);
      this.標籤_標題_好友圈.TabIndex = 27;
      this.標籤_標題_好友圈.Text = "好友圈：";
      this.標籤_值_精華區.AutoSize = true;
      this.標籤_值_精華區.Location = new Point(71, 72);
      this.標籤_值_精華區.Name = "標籤_值_精華區";
      this.標籤_值_精華區.Size = new Size(13, 12);
      this.標籤_值_精華區.TabIndex = 26;
      this.標籤_值_精華區.Text = "--";
      this.標籤_標題_精華區.AutoSize = true;
      this.標籤_標題_精華區.Location = new Point(20, 72);
      this.標籤_標題_精華區.Name = "標籤_標題_精華區";
      this.標籤_標題_精華區.Size = new Size(53, 12);
      this.標籤_標題_精華區.TabIndex = 25;
      this.標籤_標題_精華區.Text = "精華區：";
      this.標籤_值_創作.AutoSize = true;
      this.標籤_值_創作.Location = new Point(71, 54);
      this.標籤_值_創作.Name = "標籤_值_創作";
      this.標籤_值_創作.Size = new Size(13, 12);
      this.標籤_值_創作.TabIndex = 24;
      this.標籤_值_創作.Text = "--";
      this.標籤_標題_創作.AutoSize = true;
      this.標籤_標題_創作.Location = new Point(32, 54);
      this.標籤_標題_創作.Name = "標籤_標題_創作";
      this.標籤_標題_創作.Size = new Size(41, 12);
      this.標籤_標題_創作.TabIndex = 23;
      this.標籤_標題_創作.Text = "創作：";
      this.標籤_值_總人氣.AutoSize = true;
      this.標籤_值_總人氣.Location = new Point(71, 36);
      this.標籤_值_總人氣.Name = "標籤_值_總人氣";
      this.標籤_值_總人氣.Size = new Size(13, 12);
      this.標籤_值_總人氣.TabIndex = 22;
      this.標籤_值_總人氣.Text = "--";
      this.標籤_標題_總人氣.AutoSize = true;
      this.標籤_標題_總人氣.Location = new Point(20, 36);
      this.標籤_標題_總人氣.Name = "標籤_標題_總人氣";
      this.標籤_標題_總人氣.Size = new Size(53, 12);
      this.標籤_標題_總人氣.TabIndex = 21;
      this.標籤_標題_總人氣.Text = "總人氣：";
      this.標籤_值_今日人氣.AutoSize = true;
      this.標籤_值_今日人氣.Location = new Point(71, 18);
      this.標籤_值_今日人氣.Name = "標籤_值_今日人氣";
      this.標籤_值_今日人氣.Size = new Size(13, 12);
      this.標籤_值_今日人氣.TabIndex = 20;
      this.標籤_值_今日人氣.Text = "--";
      this.標籤_標題_今日人氣.AutoSize = true;
      this.標籤_標題_今日人氣.Location = new Point(8, 18);
      this.標籤_標題_今日人氣.Name = "標籤_標題_今日人氣";
      this.標籤_標題_今日人氣.Size = new Size(65, 12);
      this.標籤_標題_今日人氣.TabIndex = 19;
      this.標籤_標題_今日人氣.Text = "今日人氣：";
      this.群組_個人記錄.Controls.Add((Control) this.標籤_值_動漫電玩通);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_標題_動漫電玩通);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_值_哈拉篇數);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_標題_哈拉篇數);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_值_站規測驗);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_標題_站規測驗);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_值_認證時間);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_標題_認證時間);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_值_手機認證);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_標題_手機認證);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_值_註冊日期);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_標題_註冊日期);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_值_上站日期);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_標題_上站日期);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_值_上站次數);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_標題_上站次數);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_值_更新時間);
      this.群組_個人記錄.Controls.Add((Control) this.標籤_標題_更新時間);
      this.群組_個人記錄.Location = new Point(5, 240);
      this.群組_個人記錄.Name = "群組_個人記錄";
      this.群組_個人記錄.Size = new Size(205, 182);
      this.群組_個人記錄.TabIndex = 16;
      this.群組_個人記錄.TabStop = false;
      this.群組_個人記錄.Text = "個人記錄";
      this.標籤_值_動漫電玩通.AutoSize = true;
      this.標籤_值_動漫電玩通.Location = new Point(83, 162);
      this.標籤_值_動漫電玩通.Name = "標籤_值_動漫電玩通";
      this.標籤_值_動漫電玩通.Size = new Size(13, 12);
      this.標籤_值_動漫電玩通.TabIndex = 36;
      this.標籤_值_動漫電玩通.Text = "--";
      this.標籤_標題_動漫電玩通.AutoSize = true;
      this.標籤_標題_動漫電玩通.Location = new Point(8, 162);
      this.標籤_標題_動漫電玩通.Name = "標籤_標題_動漫電玩通";
      this.標籤_標題_動漫電玩通.Size = new Size(77, 12);
      this.標籤_標題_動漫電玩通.TabIndex = 35;
      this.標籤_標題_動漫電玩通.Text = "動漫電玩通：";
      this.標籤_值_哈拉篇數.AutoSize = true;
      this.標籤_值_哈拉篇數.Location = new Point(83, 144);
      this.標籤_值_哈拉篇數.Name = "標籤_值_哈拉篇數";
      this.標籤_值_哈拉篇數.Size = new Size(13, 12);
      this.標籤_值_哈拉篇數.TabIndex = 34;
      this.標籤_值_哈拉篇數.Text = "--";
      this.標籤_標題_哈拉篇數.AutoSize = true;
      this.標籤_標題_哈拉篇數.Location = new Point(20, 144);
      this.標籤_標題_哈拉篇數.Name = "標籤_標題_哈拉篇數";
      this.標籤_標題_哈拉篇數.Size = new Size(65, 12);
      this.標籤_標題_哈拉篇數.TabIndex = 33;
      this.標籤_標題_哈拉篇數.Text = "哈啦篇數：";
      this.標籤_值_站規測驗.AutoSize = true;
      this.標籤_值_站規測驗.Location = new Point(83, 126);
      this.標籤_值_站規測驗.Name = "標籤_值_站規測驗";
      this.標籤_值_站規測驗.Size = new Size(13, 12);
      this.標籤_值_站規測驗.TabIndex = 32;
      this.標籤_值_站規測驗.Text = "--";
      this.標籤_標題_站規測驗.AutoSize = true;
      this.標籤_標題_站規測驗.Location = new Point(20, 126);
      this.標籤_標題_站規測驗.Name = "標籤_標題_站規測驗";
      this.標籤_標題_站規測驗.Size = new Size(65, 12);
      this.標籤_標題_站規測驗.TabIndex = 31;
      this.標籤_標題_站規測驗.Text = "站規測驗：";
      this.標籤_值_認證時間.AutoSize = true;
      this.標籤_值_認證時間.Location = new Point(83, 108);
      this.標籤_值_認證時間.Name = "標籤_值_認證時間";
      this.標籤_值_認證時間.Size = new Size(13, 12);
      this.標籤_值_認證時間.TabIndex = 30;
      this.標籤_值_認證時間.Text = "--";
      this.標籤_標題_認證時間.AutoSize = true;
      this.標籤_標題_認證時間.Location = new Point(20, 108);
      this.標籤_標題_認證時間.Name = "標籤_標題_認證時間";
      this.標籤_標題_認證時間.Size = new Size(65, 12);
      this.標籤_標題_認證時間.TabIndex = 29;
      this.標籤_標題_認證時間.Text = "認證時間：";
      this.標籤_值_手機認證.AutoSize = true;
      this.標籤_值_手機認證.Location = new Point(83, 90);
      this.標籤_值_手機認證.Name = "標籤_值_手機認證";
      this.標籤_值_手機認證.Size = new Size(13, 12);
      this.標籤_值_手機認證.TabIndex = 28;
      this.標籤_值_手機認證.Text = "--";
      this.標籤_標題_手機認證.AutoSize = true;
      this.標籤_標題_手機認證.Location = new Point(20, 90);
      this.標籤_標題_手機認證.Name = "標籤_標題_手機認證";
      this.標籤_標題_手機認證.Size = new Size(65, 12);
      this.標籤_標題_手機認證.TabIndex = 27;
      this.標籤_標題_手機認證.Text = "手機認證：";
      this.標籤_值_註冊日期.AutoSize = true;
      this.標籤_值_註冊日期.Location = new Point(83, 72);
      this.標籤_值_註冊日期.Name = "標籤_值_註冊日期";
      this.標籤_值_註冊日期.Size = new Size(13, 12);
      this.標籤_值_註冊日期.TabIndex = 26;
      this.標籤_值_註冊日期.Text = "--";
      this.標籤_標題_註冊日期.AutoSize = true;
      this.標籤_標題_註冊日期.Location = new Point(20, 72);
      this.標籤_標題_註冊日期.Name = "標籤_標題_註冊日期";
      this.標籤_標題_註冊日期.Size = new Size(65, 12);
      this.標籤_標題_註冊日期.TabIndex = 25;
      this.標籤_標題_註冊日期.Text = "註冊日期：";
      this.標籤_值_上站日期.AutoSize = true;
      this.標籤_值_上站日期.Location = new Point(83, 54);
      this.標籤_值_上站日期.Name = "標籤_值_上站日期";
      this.標籤_值_上站日期.Size = new Size(13, 12);
      this.標籤_值_上站日期.TabIndex = 24;
      this.標籤_值_上站日期.Text = "--";
      this.標籤_標題_上站日期.AutoSize = true;
      this.標籤_標題_上站日期.Location = new Point(20, 54);
      this.標籤_標題_上站日期.Name = "標籤_標題_上站日期";
      this.標籤_標題_上站日期.Size = new Size(65, 12);
      this.標籤_標題_上站日期.TabIndex = 23;
      this.標籤_標題_上站日期.Text = "上站日期：";
      this.標籤_值_上站次數.AutoSize = true;
      this.標籤_值_上站次數.Location = new Point(83, 36);
      this.標籤_值_上站次數.Name = "標籤_值_上站次數";
      this.標籤_值_上站次數.Size = new Size(13, 12);
      this.標籤_值_上站次數.TabIndex = 22;
      this.標籤_值_上站次數.Text = "--";
      this.標籤_標題_上站次數.AutoSize = true;
      this.標籤_標題_上站次數.Location = new Point(20, 36);
      this.標籤_標題_上站次數.Name = "標籤_標題_上站次數";
      this.標籤_標題_上站次數.Size = new Size(65, 12);
      this.標籤_標題_上站次數.TabIndex = 21;
      this.標籤_標題_上站次數.Text = "上站次數：";
      this.標籤_值_更新時間.AutoSize = true;
      this.標籤_值_更新時間.Location = new Point(83, 18);
      this.標籤_值_更新時間.Name = "標籤_值_更新時間";
      this.標籤_值_更新時間.Size = new Size(13, 12);
      this.標籤_值_更新時間.TabIndex = 20;
      this.標籤_值_更新時間.Text = "--";
      this.標籤_標題_更新時間.AutoSize = true;
      this.標籤_標題_更新時間.Location = new Point(20, 18);
      this.標籤_標題_更新時間.Name = "標籤_標題_更新時間";
      this.標籤_標題_更新時間.Size = new Size(65, 12);
      this.標籤_標題_更新時間.TabIndex = 19;
      this.標籤_標題_更新時間.Text = "更新時間：";
      this.群組_勇者能力.Controls.Add((Control) this.標籤_值_幸運);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_標題_幸運);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_值_迴避);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_標題_迴避);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_值_命中);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_標題_命中);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_值_魔防);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_標題_魔防);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_值_物防);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_標題_物防);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_值_魔攻);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_標題_魔攻);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_值_物攻);
      this.群組_勇者能力.Controls.Add((Control) this.標籤_標題_物攻);
      this.群組_勇者能力.Location = new Point(323, 7);
      this.群組_勇者能力.Name = "群組_勇者能力";
      this.群組_勇者能力.Size = new Size(102, 226);
      this.群組_勇者能力.TabIndex = 15;
      this.群組_勇者能力.TabStop = false;
      this.群組_勇者能力.Text = "勇者能力";
      this.標籤_值_幸運.AutoSize = true;
      this.標籤_值_幸運.Location = new Point(45, 126);
      this.標籤_值_幸運.Name = "標籤_值_幸運";
      this.標籤_值_幸運.Size = new Size(13, 12);
      this.標籤_值_幸運.TabIndex = 28;
      this.標籤_值_幸運.Text = "--";
      this.標籤_標題_幸運.AutoSize = true;
      this.標籤_標題_幸運.Location = new Point(6, 126);
      this.標籤_標題_幸運.Name = "標籤_標題_幸運";
      this.標籤_標題_幸運.Size = new Size(41, 12);
      this.標籤_標題_幸運.TabIndex = 27;
      this.標籤_標題_幸運.Text = "幸運：";
      this.標籤_值_迴避.AutoSize = true;
      this.標籤_值_迴避.Location = new Point(45, 108);
      this.標籤_值_迴避.Name = "標籤_值_迴避";
      this.標籤_值_迴避.Size = new Size(13, 12);
      this.標籤_值_迴避.TabIndex = 26;
      this.標籤_值_迴避.Text = "--";
      this.標籤_標題_迴避.AutoSize = true;
      this.標籤_標題_迴避.Location = new Point(6, 108);
      this.標籤_標題_迴避.Name = "標籤_標題_迴避";
      this.標籤_標題_迴避.Size = new Size(41, 12);
      this.標籤_標題_迴避.TabIndex = 25;
      this.標籤_標題_迴避.Text = "迴避：";
      this.標籤_值_命中.AutoSize = true;
      this.標籤_值_命中.Location = new Point(45, 90);
      this.標籤_值_命中.Name = "標籤_值_命中";
      this.標籤_值_命中.Size = new Size(13, 12);
      this.標籤_值_命中.TabIndex = 24;
      this.標籤_值_命中.Text = "--";
      this.標籤_標題_命中.AutoSize = true;
      this.標籤_標題_命中.Location = new Point(6, 90);
      this.標籤_標題_命中.Name = "標籤_標題_命中";
      this.標籤_標題_命中.Size = new Size(41, 12);
      this.標籤_標題_命中.TabIndex = 23;
      this.標籤_標題_命中.Text = "命中：";
      this.標籤_值_魔防.AutoSize = true;
      this.標籤_值_魔防.Location = new Point(45, 72);
      this.標籤_值_魔防.Name = "標籤_值_魔防";
      this.標籤_值_魔防.Size = new Size(13, 12);
      this.標籤_值_魔防.TabIndex = 22;
      this.標籤_值_魔防.Text = "--";
      this.標籤_標題_魔防.AutoSize = true;
      this.標籤_標題_魔防.Location = new Point(6, 72);
      this.標籤_標題_魔防.Name = "標籤_標題_魔防";
      this.標籤_標題_魔防.Size = new Size(41, 12);
      this.標籤_標題_魔防.TabIndex = 21;
      this.標籤_標題_魔防.Text = "魔防：";
      this.標籤_值_物防.AutoSize = true;
      this.標籤_值_物防.Location = new Point(45, 54);
      this.標籤_值_物防.Name = "標籤_值_物防";
      this.標籤_值_物防.Size = new Size(13, 12);
      this.標籤_值_物防.TabIndex = 20;
      this.標籤_值_物防.Text = "--";
      this.標籤_標題_物防.AutoSize = true;
      this.標籤_標題_物防.Location = new Point(6, 54);
      this.標籤_標題_物防.Name = "標籤_標題_物防";
      this.標籤_標題_物防.Size = new Size(41, 12);
      this.標籤_標題_物防.TabIndex = 19;
      this.標籤_標題_物防.Text = "物防：";
      this.標籤_值_魔攻.AutoSize = true;
      this.標籤_值_魔攻.Location = new Point(45, 36);
      this.標籤_值_魔攻.Name = "標籤_值_魔攻";
      this.標籤_值_魔攻.Size = new Size(13, 12);
      this.標籤_值_魔攻.TabIndex = 18;
      this.標籤_值_魔攻.Text = "--";
      this.標籤_標題_魔攻.AutoSize = true;
      this.標籤_標題_魔攻.Location = new Point(6, 36);
      this.標籤_標題_魔攻.Name = "標籤_標題_魔攻";
      this.標籤_標題_魔攻.Size = new Size(41, 12);
      this.標籤_標題_魔攻.TabIndex = 17;
      this.標籤_標題_魔攻.Text = "魔攻：";
      this.標籤_值_物攻.AutoSize = true;
      this.標籤_值_物攻.Location = new Point(45, 18);
      this.標籤_值_物攻.Name = "標籤_值_物攻";
      this.標籤_值_物攻.Size = new Size(13, 12);
      this.標籤_值_物攻.TabIndex = 16;
      this.標籤_值_物攻.Text = "--";
      this.標籤_標題_物攻.AutoSize = true;
      this.標籤_標題_物攻.Location = new Point(6, 18);
      this.標籤_標題_物攻.Name = "標籤_標題_物攻";
      this.標籤_標題_物攻.Size = new Size(41, 12);
      this.標籤_標題_物攻.TabIndex = 15;
      this.標籤_標題_物攻.Text = "物攻：";
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_勇者經驗值);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_背景_勇者經驗值);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_經驗);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_勇者魔力值);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_背景_勇者魔力值);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_魔力);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_勇者血量值);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_背景_勇者血量值);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_血量);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_勇評);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_勇評);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_ＧＰ);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_ＧＰ);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_巴幣);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_巴幣);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_稱號);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_稱號);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_職業);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_職業);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_種族);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_種族);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_等級);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_等級);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_暱稱);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_暱稱);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_值_帳號);
      this.群組_勇者歷練.Controls.Add((Control) this.標籤_標題_帳號);
      this.群組_勇者歷練.Controls.Add((Control) this.圖片框_勇者資訊_勇者造型);
      this.群組_勇者歷練.Location = new Point(7, 7);
      this.群組_勇者歷練.Name = "群組_勇者歷練";
      this.群組_勇者歷練.Size = new Size(309, 226);
      this.群組_勇者歷練.TabIndex = 14;
      this.群組_勇者歷練.TabStop = false;
      this.群組_勇者歷練.Text = "勇者歷練";
      this.標籤_值_勇者經驗值.BackColor = Color.Green;
      this.標籤_值_勇者經驗值.Location = new Point(46, 210);
      this.標籤_值_勇者經驗值.Name = "標籤_值_勇者經驗值";
      this.標籤_值_勇者經驗值.Size = new Size(0, 6);
      this.標籤_值_勇者經驗值.TabIndex = 27;
      this.提示.SetToolTip((Control) this.標籤_值_勇者經驗值, "--");
      this.標籤_背景_勇者經驗值.BackColor = Color.White;
      this.標籤_背景_勇者經驗值.BorderStyle = BorderStyle.FixedSingle;
      this.標籤_背景_勇者經驗值.Location = new Point(45, 209);
      this.標籤_背景_勇者經驗值.Name = "標籤_背景_勇者經驗值";
      this.標籤_背景_勇者經驗值.Size = new Size(250, 8);
      this.標籤_背景_勇者經驗值.TabIndex = 26;
      this.提示.SetToolTip((Control) this.標籤_背景_勇者經驗值, "--");
      this.標籤_標題_經驗.AutoSize = true;
      this.標籤_標題_經驗.Location = new Point(6, 207);
      this.標籤_標題_經驗.Name = "標籤_標題_經驗";
      this.標籤_標題_經驗.Size = new Size(41, 12);
      this.標籤_標題_經驗.TabIndex = 25;
      this.標籤_標題_經驗.Text = "經驗：";
      this.標籤_值_勇者魔力值.BackColor = Color.Blue;
      this.標籤_值_勇者魔力值.Location = new Point(46, 196);
      this.標籤_值_勇者魔力值.Name = "標籤_值_勇者魔力值";
      this.標籤_值_勇者魔力值.Size = new Size(0, 6);
      this.標籤_值_勇者魔力值.TabIndex = 24;
      this.提示.SetToolTip((Control) this.標籤_值_勇者魔力值, "--");
      this.標籤_背景_勇者魔力值.BackColor = Color.White;
      this.標籤_背景_勇者魔力值.BorderStyle = BorderStyle.FixedSingle;
      this.標籤_背景_勇者魔力值.Location = new Point(45, 195);
      this.標籤_背景_勇者魔力值.Name = "標籤_背景_勇者魔力值";
      this.標籤_背景_勇者魔力值.Size = new Size(250, 8);
      this.標籤_背景_勇者魔力值.TabIndex = 23;
      this.提示.SetToolTip((Control) this.標籤_背景_勇者魔力值, "--");
      this.標籤_標題_魔力.AutoSize = true;
      this.標籤_標題_魔力.Location = new Point(6, 193);
      this.標籤_標題_魔力.Name = "標籤_標題_魔力";
      this.標籤_標題_魔力.Size = new Size(41, 12);
      this.標籤_標題_魔力.TabIndex = 22;
      this.標籤_標題_魔力.Text = "魔力：";
      this.標籤_值_勇者血量值.BackColor = Color.Red;
      this.標籤_值_勇者血量值.Location = new Point(46, 182);
      this.標籤_值_勇者血量值.Name = "標籤_值_勇者血量值";
      this.標籤_值_勇者血量值.Size = new Size(0, 6);
      this.標籤_值_勇者血量值.TabIndex = 21;
      this.提示.SetToolTip((Control) this.標籤_值_勇者血量值, "--");
      this.標籤_背景_勇者血量值.BackColor = Color.White;
      this.標籤_背景_勇者血量值.BorderStyle = BorderStyle.FixedSingle;
      this.標籤_背景_勇者血量值.Location = new Point(45, 181);
      this.標籤_背景_勇者血量值.Name = "標籤_背景_勇者血量值";
      this.標籤_背景_勇者血量值.Size = new Size(250, 8);
      this.標籤_背景_勇者血量值.TabIndex = 20;
      this.提示.SetToolTip((Control) this.標籤_背景_勇者血量值, "--");
      this.標籤_標題_血量.AutoSize = true;
      this.標籤_標題_血量.Location = new Point(6, 179);
      this.標籤_標題_血量.Name = "標籤_標題_血量";
      this.標籤_標題_血量.Size = new Size(41, 12);
      this.標籤_標題_血量.TabIndex = 19;
      this.標籤_標題_血量.Text = "血量：";
      this.標籤_值_勇評.AutoSize = true;
      this.標籤_值_勇評.Location = new Point(163, 160);
      this.標籤_值_勇評.Name = "標籤_值_勇評";
      this.標籤_值_勇評.Size = new Size(13, 12);
      this.標籤_值_勇評.TabIndex = 18;
      this.標籤_值_勇評.Text = "--";
      this.標籤_標題_勇評.AutoSize = true;
      this.標籤_標題_勇評.Location = new Point(124, 160);
      this.標籤_標題_勇評.Name = "標籤_標題_勇評";
      this.標籤_標題_勇評.Size = new Size(41, 12);
      this.標籤_標題_勇評.TabIndex = 17;
      this.標籤_標題_勇評.Text = "勇評：";
      this.標籤_值_ＧＰ.AutoSize = true;
      this.標籤_值_ＧＰ.Location = new Point(163, 142);
      this.標籤_值_ＧＰ.Name = "標籤_值_ＧＰ";
      this.標籤_值_ＧＰ.Size = new Size(13, 12);
      this.標籤_值_ＧＰ.TabIndex = 16;
      this.標籤_值_ＧＰ.Text = "--";
      this.標籤_標題_ＧＰ.AutoSize = true;
      this.標籤_標題_ＧＰ.Location = new Point(124, 142);
      this.標籤_標題_ＧＰ.Name = "標籤_標題_ＧＰ";
      this.標籤_標題_ＧＰ.Size = new Size(41, 12);
      this.標籤_標題_ＧＰ.TabIndex = 15;
      this.標籤_標題_ＧＰ.Text = "ＧＰ：";
      this.標籤_值_巴幣.AutoSize = true;
      this.標籤_值_巴幣.Location = new Point(163, 124);
      this.標籤_值_巴幣.Name = "標籤_值_巴幣";
      this.標籤_值_巴幣.Size = new Size(13, 12);
      this.標籤_值_巴幣.TabIndex = 14;
      this.標籤_值_巴幣.Text = "--";
      this.標籤_標題_巴幣.AutoSize = true;
      this.標籤_標題_巴幣.Location = new Point(124, 124);
      this.標籤_標題_巴幣.Name = "標籤_標題_巴幣";
      this.標籤_標題_巴幣.Size = new Size(41, 12);
      this.標籤_標題_巴幣.TabIndex = 13;
      this.標籤_標題_巴幣.Text = "巴幣：";
      this.標籤_值_稱號.AutoSize = true;
      this.標籤_值_稱號.Location = new Point(163, 106);
      this.標籤_值_稱號.Name = "標籤_值_稱號";
      this.標籤_值_稱號.Size = new Size(13, 12);
      this.標籤_值_稱號.TabIndex = 12;
      this.標籤_值_稱號.Text = "--";
      this.標籤_標題_稱號.AutoSize = true;
      this.標籤_標題_稱號.Location = new Point(124, 106);
      this.標籤_標題_稱號.Name = "標籤_標題_稱號";
      this.標籤_標題_稱號.Size = new Size(41, 12);
      this.標籤_標題_稱號.TabIndex = 11;
      this.標籤_標題_稱號.Text = "稱號：";
      this.標籤_值_職業.AutoSize = true;
      this.標籤_值_職業.Location = new Point(163, 88);
      this.標籤_值_職業.Name = "標籤_值_職業";
      this.標籤_值_職業.Size = new Size(13, 12);
      this.標籤_值_職業.TabIndex = 10;
      this.標籤_值_職業.Text = "--";
      this.標籤_標題_職業.AutoSize = true;
      this.標籤_標題_職業.Location = new Point(124, 88);
      this.標籤_標題_職業.Name = "標籤_標題_職業";
      this.標籤_標題_職業.Size = new Size(41, 12);
      this.標籤_標題_職業.TabIndex = 9;
      this.標籤_標題_職業.Text = "職業：";
      this.標籤_值_種族.AutoSize = true;
      this.標籤_值_種族.Location = new Point(163, 70);
      this.標籤_值_種族.Name = "標籤_值_種族";
      this.標籤_值_種族.Size = new Size(13, 12);
      this.標籤_值_種族.TabIndex = 8;
      this.標籤_值_種族.Text = "--";
      this.標籤_標題_種族.AutoSize = true;
      this.標籤_標題_種族.Location = new Point(124, 70);
      this.標籤_標題_種族.Name = "標籤_標題_種族";
      this.標籤_標題_種族.Size = new Size(41, 12);
      this.標籤_標題_種族.TabIndex = 7;
      this.標籤_標題_種族.Text = "種族：";
      this.標籤_值_等級.AutoSize = true;
      this.標籤_值_等級.Location = new Point(163, 52);
      this.標籤_值_等級.Name = "標籤_值_等級";
      this.標籤_值_等級.Size = new Size(13, 12);
      this.標籤_值_等級.TabIndex = 6;
      this.標籤_值_等級.Text = "--";
      this.標籤_標題_等級.AutoSize = true;
      this.標籤_標題_等級.Location = new Point(124, 52);
      this.標籤_標題_等級.Name = "標籤_標題_等級";
      this.標籤_標題_等級.Size = new Size(41, 12);
      this.標籤_標題_等級.TabIndex = 5;
      this.標籤_標題_等級.Text = "等級：";
      this.標籤_值_暱稱.AutoSize = true;
      this.標籤_值_暱稱.Location = new Point(163, 34);
      this.標籤_值_暱稱.Name = "標籤_值_暱稱";
      this.標籤_值_暱稱.Size = new Size(13, 12);
      this.標籤_值_暱稱.TabIndex = 4;
      this.標籤_值_暱稱.Text = "--";
      this.標籤_標題_暱稱.AutoSize = true;
      this.標籤_標題_暱稱.Location = new Point(124, 34);
      this.標籤_標題_暱稱.Name = "標籤_標題_暱稱";
      this.標籤_標題_暱稱.Size = new Size(41, 12);
      this.標籤_標題_暱稱.TabIndex = 3;
      this.標籤_標題_暱稱.Text = "暱稱：";
      this.標籤_值_帳號.AutoSize = true;
      this.標籤_值_帳號.Location = new Point(163, 16);
      this.標籤_值_帳號.Name = "標籤_值_帳號";
      this.標籤_值_帳號.Size = new Size(13, 12);
      this.標籤_值_帳號.TabIndex = 2;
      this.標籤_值_帳號.Text = "--";
      this.標籤_標題_帳號.AutoSize = true;
      this.標籤_標題_帳號.Location = new Point(124, 16);
      this.標籤_標題_帳號.Name = "標籤_標題_帳號";
      this.標籤_標題_帳號.Size = new Size(41, 12);
      this.標籤_標題_帳號.TabIndex = 1;
      this.標籤_標題_帳號.Text = "帳號：";
      this.頁籤_勇者裝備.Controls.Add((Control) this.按鈕_儲存勇者裝備);
      this.頁籤_勇者裝備.Controls.Add((Control) this.按鈕_儲存勇者造型);
      this.頁籤_勇者裝備.Controls.Add((Control) this.群組_勇者裝備);
      this.頁籤_勇者裝備.Controls.Add((Control) this.群組_裝備清單);
      this.頁籤_勇者裝備.Controls.Add((Control) this.群組_裝備網址);
      this.頁籤_勇者裝備.Controls.Add((Control) this.群組_勇者造型);
      this.頁籤_勇者裝備.Location = new Point(4, 22);
      this.頁籤_勇者裝備.Name = "頁籤_勇者裝備";
      this.頁籤_勇者裝備.Padding = new Padding(3);
      this.頁籤_勇者裝備.Size = new Size(432, 429);
      this.頁籤_勇者裝備.TabIndex = 1;
      this.頁籤_勇者裝備.Text = "勇者裝備";
      this.頁籤_勇者裝備.UseVisualStyleBackColor = true;
      this.按鈕_儲存勇者裝備.Enabled = false;
      this.按鈕_儲存勇者裝備.Location = new Point(163, 160);
      this.按鈕_儲存勇者裝備.Name = "按鈕_儲存勇者裝備";
      this.按鈕_儲存勇者裝備.Size = new Size(106, 23);
      this.按鈕_儲存勇者裝備.TabIndex = 4;
      this.按鈕_儲存勇者裝備.Text = "儲存勇者裝備";
      this.按鈕_儲存勇者裝備.UseVisualStyleBackColor = true;
      this.按鈕_儲存勇者造型.Enabled = false;
      this.按鈕_儲存勇者造型.Location = new Point(163, 123);
      this.按鈕_儲存勇者造型.Name = "按鈕_儲存勇者造型";
      this.按鈕_儲存勇者造型.Size = new Size(106, 23);
      this.按鈕_儲存勇者造型.TabIndex = 3;
      this.按鈕_儲存勇者造型.Text = "儲存勇者造型";
      this.按鈕_儲存勇者造型.UseVisualStyleBackColor = true;
      this.群組_勇者裝備.Controls.Add((Control) this.圖片框_勇者裝備_勇者裝備);
      this.群組_勇者裝備.Location = new Point(299, 63);
      this.群組_勇者裝備.Name = "群組_勇者裝備";
      this.群組_勇者裝備.Size = new Size(126, 185);
      this.群組_勇者裝備.TabIndex = 2;
      this.群組_勇者裝備.TabStop = false;
      this.群組_勇者裝備.Text = "勇者裝備";
      this.群組_裝備清單.Controls.Add((Control) this.清單_裝備資訊);
      this.群組_裝備清單.Controls.Add((Control) this.清單_勇者裝備);
      this.群組_裝備清單.Controls.Add((Control) this.清單_裝備網址);
      this.群組_裝備清單.Location = new Point(7, 254);
      this.群組_裝備清單.Name = "群組_裝備清單";
      this.群組_裝備清單.Size = new Size(419, 170);
      this.群組_裝備清單.TabIndex = 2;
      this.群組_裝備清單.TabStop = false;
      this.群組_裝備清單.Text = "裝備清單";
      this.清單_裝備資訊.BorderStyle = BorderStyle.FixedSingle;
      this.清單_裝備資訊.Columns.AddRange(new ColumnHeader[2]
      {
        this.清單項目_裝備網址,
        this.清單項目_裝備封面網址
      });
      this.清單_裝備資訊.FullRowSelect = true;
      this.清單_裝備資訊.GridLines = true;
      this.清單_裝備資訊.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_裝備資訊.Location = new Point(7, 119);
      this.清單_裝備資訊.MultiSelect = false;
      this.清單_裝備資訊.Name = "清單_裝備資訊";
      this.清單_裝備資訊.Size = new Size(406, 44);
      this.清單_裝備資訊.TabIndex = 64;
      this.清單_裝備資訊.UseCompatibleStateImageBehavior = false;
      this.清單_裝備資訊.View = View.Details;
      this.清單_裝備資訊.Visible = false;
      this.清單項目_裝備網址.Text = "裝備網址";
      this.清單項目_裝備網址.Width = 63;
      this.清單項目_裝備封面網址.Text = "裝備封面網址";
      this.清單項目_裝備封面網址.Width = 87;
      this.清單_勇者裝備.BorderStyle = BorderStyle.FixedSingle;
      this.清單_勇者裝備.Columns.AddRange(new ColumnHeader[3]
      {
        this.清單項目_裝備編號,
        this.清單項目_類別,
        this.清單項目_裝備名稱
      });
      this.清單_勇者裝備.FullRowSelect = true;
      this.清單_勇者裝備.GridLines = true;
      this.清單_勇者裝備.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_勇者裝備.Location = new Point(7, 16);
      this.清單_勇者裝備.MultiSelect = false;
      this.清單_勇者裝備.Name = "清單_勇者裝備";
      this.清單_勇者裝備.Size = new Size(406, 147);
      this.清單_勇者裝備.TabIndex = 0;
      this.清單_勇者裝備.UseCompatibleStateImageBehavior = false;
      this.清單_勇者裝備.View = View.Details;
      this.清單項目_裝備編號.Text = "編號";
      this.清單項目_裝備編號.Width = 36;
      this.清單項目_類別.Text = "類別";
      this.清單項目_類別.Width = 130;
      this.清單項目_裝備名稱.Text = "裝備名稱";
      this.清單項目_裝備名稱.Width = 220;
      this.清單_裝備網址.FormattingEnabled = true;
      this.清單_裝備網址.ItemHeight = 12;
      this.清單_裝備網址.Location = new Point(7, 16);
      this.清單_裝備網址.Name = "清單_裝備網址";
      this.清單_裝備網址.Size = new Size(406, 136);
      this.清單_裝備網址.TabIndex = 1;
      this.清單_裝備網址.Visible = false;
      this.群組_裝備網址.Controls.Add((Control) this.連結標籤_裝備網址);
      this.群組_裝備網址.Location = new Point(6, 6);
      this.群組_裝備網址.Name = "群組_裝備網址";
      this.群組_裝備網址.Size = new Size(420, 49);
      this.群組_裝備網址.TabIndex = 1;
      this.群組_裝備網址.TabStop = false;
      this.群組_裝備網址.Text = "裝備網址";
      this.連結標籤_裝備網址.BackColor = SystemColors.Control;
      this.連結標籤_裝備網址.BorderStyle = BorderStyle.FixedSingle;
      this.連結標籤_裝備網址.LinkBehavior = LinkBehavior.HoverUnderline;
      this.連結標籤_裝備網址.LinkColor = SystemColors.WindowText;
      this.連結標籤_裝備網址.Location = new Point(6, 17);
      this.連結標籤_裝備網址.Name = "連結標籤_裝備網址";
      this.連結標籤_裝備網址.Size = new Size(407, 22);
      this.連結標籤_裝備網址.TabIndex = 1;
      this.連結標籤_裝備網址.TextAlign = ContentAlignment.MiddleLeft;
      this.群組_勇者造型.Controls.Add((Control) this.圖片框_勇者裝備_勇者造型);
      this.群組_勇者造型.Location = new Point(7, 63);
      this.群組_勇者造型.Name = "群組_勇者造型";
      this.群組_勇者造型.Size = new Size(126, 185);
      this.群組_勇者造型.TabIndex = 0;
      this.群組_勇者造型.TabStop = false;
      this.群組_勇者造型.Text = "勇者造型";
      this.頁籤_勇者好友.Controls.Add((Control) this.清單_好友資訊);
      this.頁籤_勇者好友.Controls.Add((Control) this.群組_好友頭像);
      this.頁籤_勇者好友.Controls.Add((Control) this.群組_好友網址);
      this.頁籤_勇者好友.Controls.Add((Control) this.清單_勇者好友);
      this.頁籤_勇者好友.Location = new Point(4, 22);
      this.頁籤_勇者好友.Name = "頁籤_勇者好友";
      this.頁籤_勇者好友.Size = new Size(432, 429);
      this.頁籤_勇者好友.TabIndex = 2;
      this.頁籤_勇者好友.Text = "勇者好友";
      this.頁籤_勇者好友.UseVisualStyleBackColor = true;
      this.清單_好友資訊.BorderStyle = BorderStyle.FixedSingle;
      this.清單_好友資訊.Columns.AddRange(new ColumnHeader[2]
      {
        this.清單項目_好友網址,
        this.清單項目_好友頭像網址
      });
      this.清單_好友資訊.FullRowSelect = true;
      this.清單_好友資訊.GridLines = true;
      this.清單_好友資訊.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_好友資訊.Location = new Point(13, 379);
      this.清單_好友資訊.MultiSelect = false;
      this.清單_好友資訊.Name = "清單_好友資訊";
      this.清單_好友資訊.Size = new Size(406, 44);
      this.清單_好友資訊.TabIndex = 65;
      this.清單_好友資訊.UseCompatibleStateImageBehavior = false;
      this.清單_好友資訊.View = View.Details;
      this.清單_好友資訊.Visible = false;
      this.清單項目_好友網址.Text = "好友網址";
      this.清單項目_好友網址.Width = 63;
      this.清單項目_好友頭像網址.Text = "好友頭像網址";
      this.清單項目_好友頭像網址.Width = 87;
      this.群組_好友頭像.Controls.Add((Control) this.圖片框_勇者好友頭像);
      this.群組_好友頭像.Location = new Point(7, 7);
      this.群組_好友頭像.Name = "群組_好友頭像";
      this.群組_好友頭像.Size = new Size(67, 62);
      this.群組_好友頭像.TabIndex = 5;
      this.群組_好友頭像.TabStop = false;
      this.群組_好友頭像.Text = "好友頭像";
      this.群組_好友網址.Controls.Add((Control) this.按鈕_好友查詢);
      this.群組_好友網址.Controls.Add((Control) this.連結標籤_好友網址);
      this.群組_好友網址.Location = new Point(83, 7);
      this.群組_好友網址.Name = "群組_好友網址";
      this.群組_好友網址.Size = new Size(342, 62);
      this.群組_好友網址.TabIndex = 4;
      this.群組_好友網址.TabStop = false;
      this.群組_好友網址.Text = "好友網址";
      this.按鈕_好友查詢.Enabled = false;
      this.按鈕_好友查詢.Location = new Point(262, 24);
      this.按鈕_好友查詢.Name = "按鈕_好友查詢";
      this.按鈕_好友查詢.Size = new Size(75, 23);
      this.按鈕_好友查詢.TabIndex = 9;
      this.按鈕_好友查詢.Text = "好友查詢";
      this.按鈕_好友查詢.UseVisualStyleBackColor = true;
      this.連結標籤_好友網址.BackColor = SystemColors.Control;
      this.連結標籤_好友網址.BorderStyle = BorderStyle.FixedSingle;
      this.連結標籤_好友網址.LinkBehavior = LinkBehavior.HoverUnderline;
      this.連結標籤_好友網址.LinkColor = SystemColors.WindowText;
      this.連結標籤_好友網址.Location = new Point(6, 24);
      this.連結標籤_好友網址.Name = "連結標籤_好友網址";
      this.連結標籤_好友網址.Size = new Size(250, 22);
      this.連結標籤_好友網址.TabIndex = 2;
      this.連結標籤_好友網址.TextAlign = ContentAlignment.MiddleLeft;
      this.清單_勇者好友.BorderStyle = BorderStyle.FixedSingle;
      this.清單_勇者好友.Columns.AddRange(new ColumnHeader[3]
      {
        this.清單項目_好友編號,
        this.清單項目_好友帳號,
        this.清單項目_好友暱稱
      });
      this.清單_勇者好友.FullRowSelect = true;
      this.清單_勇者好友.GridLines = true;
      this.清單_勇者好友.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_勇者好友.Location = new Point(7, 75);
      this.清單_勇者好友.MultiSelect = false;
      this.清單_勇者好友.Name = "清單_勇者好友";
      this.清單_勇者好友.Size = new Size(418, 348);
      this.清單_勇者好友.TabIndex = 1;
      this.清單_勇者好友.UseCompatibleStateImageBehavior = false;
      this.清單_勇者好友.View = View.Details;
      this.清單項目_好友編號.Text = "編號";
      this.清單項目_好友編號.Width = 36;
      this.清單項目_好友帳號.Text = "好友帳號";
      this.清單項目_好友帳號.Width = 150;
      this.清單項目_好友暱稱.Text = "好友暱稱";
      this.清單項目_好友暱稱.Width = 212;
      this.頁籤_勇者粉絲.Controls.Add((Control) this.清單_粉絲資訊);
      this.頁籤_勇者粉絲.Controls.Add((Control) this.群組_粉絲頭像);
      this.頁籤_勇者粉絲.Controls.Add((Control) this.群組_粉絲網址);
      this.頁籤_勇者粉絲.Controls.Add((Control) this.清單_勇者粉絲);
      this.頁籤_勇者粉絲.Location = new Point(4, 22);
      this.頁籤_勇者粉絲.Name = "頁籤_勇者粉絲";
      this.頁籤_勇者粉絲.Size = new Size(432, 429);
      this.頁籤_勇者粉絲.TabIndex = 3;
      this.頁籤_勇者粉絲.Text = "勇者粉絲";
      this.頁籤_勇者粉絲.UseVisualStyleBackColor = true;
      this.清單_粉絲資訊.BorderStyle = BorderStyle.FixedSingle;
      this.清單_粉絲資訊.Columns.AddRange(new ColumnHeader[2]
      {
        this.清單項目_粉絲網址,
        this.清單項目_粉絲頭像網址
      });
      this.清單_粉絲資訊.FullRowSelect = true;
      this.清單_粉絲資訊.GridLines = true;
      this.清單_粉絲資訊.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_粉絲資訊.Location = new Point(13, 379);
      this.清單_粉絲資訊.MultiSelect = false;
      this.清單_粉絲資訊.Name = "清單_粉絲資訊";
      this.清單_粉絲資訊.Size = new Size(406, 44);
      this.清單_粉絲資訊.TabIndex = 66;
      this.清單_粉絲資訊.UseCompatibleStateImageBehavior = false;
      this.清單_粉絲資訊.View = View.Details;
      this.清單_粉絲資訊.Visible = false;
      this.清單項目_粉絲網址.Text = "粉絲網址";
      this.清單項目_粉絲網址.Width = 63;
      this.清單項目_粉絲頭像網址.Text = "粉絲頭像網址";
      this.清單項目_粉絲頭像網址.Width = 87;
      this.群組_粉絲頭像.Controls.Add((Control) this.圖片框_勇者粉絲頭像);
      this.群組_粉絲頭像.Location = new Point(7, 7);
      this.群組_粉絲頭像.Name = "群組_粉絲頭像";
      this.群組_粉絲頭像.Size = new Size(67, 62);
      this.群組_粉絲頭像.TabIndex = 8;
      this.群組_粉絲頭像.TabStop = false;
      this.群組_粉絲頭像.Text = "粉絲頭像";
      this.群組_粉絲網址.Controls.Add((Control) this.按鈕_粉絲查詢);
      this.群組_粉絲網址.Controls.Add((Control) this.連結標籤_粉絲網址);
      this.群組_粉絲網址.Location = new Point(83, 7);
      this.群組_粉絲網址.Name = "群組_粉絲網址";
      this.群組_粉絲網址.Size = new Size(342, 62);
      this.群組_粉絲網址.TabIndex = 7;
      this.群組_粉絲網址.TabStop = false;
      this.群組_粉絲網址.Text = "粉絲網址";
      this.按鈕_粉絲查詢.Enabled = false;
      this.按鈕_粉絲查詢.Location = new Point(262, 24);
      this.按鈕_粉絲查詢.Name = "按鈕_粉絲查詢";
      this.按鈕_粉絲查詢.Size = new Size(75, 23);
      this.按鈕_粉絲查詢.TabIndex = 10;
      this.按鈕_粉絲查詢.Text = "粉絲查詢";
      this.按鈕_粉絲查詢.UseVisualStyleBackColor = true;
      this.連結標籤_粉絲網址.BackColor = SystemColors.Control;
      this.連結標籤_粉絲網址.BorderStyle = BorderStyle.FixedSingle;
      this.連結標籤_粉絲網址.LinkBehavior = LinkBehavior.HoverUnderline;
      this.連結標籤_粉絲網址.LinkColor = SystemColors.WindowText;
      this.連結標籤_粉絲網址.Location = new Point(6, 24);
      this.連結標籤_粉絲網址.Name = "連結標籤_粉絲網址";
      this.連結標籤_粉絲網址.Size = new Size(250, 22);
      this.連結標籤_粉絲網址.TabIndex = 3;
      this.連結標籤_粉絲網址.TextAlign = ContentAlignment.MiddleLeft;
      this.清單_勇者粉絲.BorderStyle = BorderStyle.FixedSingle;
      this.清單_勇者粉絲.Columns.AddRange(new ColumnHeader[3]
      {
        this.清單項目_粉絲編號,
        this.清單項目_粉絲帳號,
        this.清單項目_粉絲暱稱
      });
      this.清單_勇者粉絲.FullRowSelect = true;
      this.清單_勇者粉絲.GridLines = true;
      this.清單_勇者粉絲.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_勇者粉絲.Location = new Point(7, 75);
      this.清單_勇者粉絲.MultiSelect = false;
      this.清單_勇者粉絲.Name = "清單_勇者粉絲";
      this.清單_勇者粉絲.Size = new Size(418, 348);
      this.清單_勇者粉絲.TabIndex = 6;
      this.清單_勇者粉絲.UseCompatibleStateImageBehavior = false;
      this.清單_勇者粉絲.View = View.Details;
      this.清單項目_粉絲編號.Text = "編號";
      this.清單項目_粉絲編號.Width = 36;
      this.清單項目_粉絲帳號.Text = "粉絲帳號";
      this.清單項目_粉絲帳號.Width = 150;
      this.清單項目_粉絲暱稱.Text = "粉絲暱稱";
      this.清單項目_粉絲暱稱.Width = 212;
      this.頁籤_勇者公會.Controls.Add((Control) this.清單_公會資訊);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_值_會長暱稱);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_標題_會長暱稱);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_值_公會經驗值);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_背景_公會經驗值);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_標題_經驗值);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_值_昨日人氣);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_標題_昨日人氣);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_值_成員人數);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_標題_成員人數);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_值_招募制度);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_標題_招募制度);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_值_現有資金);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_標題_現有資金);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_值_開設日期);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_標題_開設日期);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_值_會長帳號);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_標題_會長帳號);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_值_公會等級);
      this.頁籤_勇者公會.Controls.Add((Control) this.標籤_標題_公會等級);
      this.頁籤_勇者公會.Controls.Add((Control) this.群組_公會封面);
      this.頁籤_勇者公會.Controls.Add((Control) this.群組_公會網址);
      this.頁籤_勇者公會.Controls.Add((Control) this.清單_勇者公會);
      this.頁籤_勇者公會.Location = new Point(4, 22);
      this.頁籤_勇者公會.Name = "頁籤_勇者公會";
      this.頁籤_勇者公會.Size = new Size(432, 429);
      this.頁籤_勇者公會.TabIndex = 4;
      this.頁籤_勇者公會.Text = "勇者公會";
      this.頁籤_勇者公會.UseVisualStyleBackColor = true;
      this.清單_公會資訊.BorderStyle = BorderStyle.FixedSingle;
      this.清單_公會資訊.Columns.AddRange(new ColumnHeader[2]
      {
        this.清單項目_公會網址,
        this.清單項目_公會封面網址
      });
      this.清單_公會資訊.FullRowSelect = true;
      this.清單_公會資訊.GridLines = true;
      this.清單_公會資訊.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_公會資訊.Location = new Point(6, 379);
      this.清單_公會資訊.MultiSelect = false;
      this.清單_公會資訊.Name = "清單_公會資訊";
      this.清單_公會資訊.Size = new Size(420, 44);
      this.清單_公會資訊.TabIndex = 65;
      this.清單_公會資訊.UseCompatibleStateImageBehavior = false;
      this.清單_公會資訊.View = View.Details;
      this.清單_公會資訊.Visible = false;
      this.清單項目_公會網址.Text = "公會網址";
      this.清單項目_公會網址.Width = 63;
      this.清單項目_公會封面網址.Text = "公會封面網址";
      this.清單項目_公會封面網址.Width = 87;
      this.標籤_值_會長暱稱.AutoSize = true;
      this.標籤_值_會長暱稱.Location = new Point(213, 96);
      this.標籤_值_會長暱稱.Name = "標籤_值_會長暱稱";
      this.標籤_值_會長暱稱.Size = new Size(13, 12);
      this.標籤_值_會長暱稱.TabIndex = 54;
      this.標籤_值_會長暱稱.Text = "--";
      this.標籤_標題_會長暱稱.AutoSize = true;
      this.標籤_標題_會長暱稱.Location = new Point(150, 96);
      this.標籤_標題_會長暱稱.Name = "標籤_標題_會長暱稱";
      this.標籤_標題_會長暱稱.Size = new Size(65, 12);
      this.標籤_標題_會長暱稱.TabIndex = 53;
      this.標籤_標題_會長暱稱.Text = "會長暱稱：";
      this.標籤_值_公會經驗值.BackColor = Color.Green;
      this.標籤_值_公會經驗值.Location = new Point(56, 208);
      this.標籤_值_公會經驗值.Name = "標籤_值_公會經驗值";
      this.標籤_值_公會經驗值.Size = new Size(0, 6);
      this.標籤_值_公會經驗值.TabIndex = 51;
      this.提示.SetToolTip((Control) this.標籤_值_公會經驗值, "--");
      this.標籤_背景_公會經驗值.BackColor = Color.White;
      this.標籤_背景_公會經驗值.BorderStyle = BorderStyle.FixedSingle;
      this.標籤_背景_公會經驗值.Location = new Point(55, 207);
      this.標籤_背景_公會經驗值.Name = "標籤_背景_公會經驗值";
      this.標籤_背景_公會經驗值.Size = new Size(371, 8);
      this.標籤_背景_公會經驗值.TabIndex = 50;
      this.提示.SetToolTip((Control) this.標籤_背景_公會經驗值, "--");
      this.標籤_標題_經驗值.AutoSize = true;
      this.標籤_標題_經驗值.Location = new Point(4, 205);
      this.標籤_標題_經驗值.Name = "標籤_標題_經驗值";
      this.標籤_標題_經驗值.Size = new Size(53, 12);
      this.標籤_標題_經驗值.TabIndex = 49;
      this.標籤_標題_經驗值.Text = "經驗值：";
      this.標籤_值_昨日人氣.AutoSize = true;
      this.標籤_值_昨日人氣.Location = new Point(213, 186);
      this.標籤_值_昨日人氣.Name = "標籤_值_昨日人氣";
      this.標籤_值_昨日人氣.Size = new Size(13, 12);
      this.標籤_值_昨日人氣.TabIndex = 48;
      this.標籤_值_昨日人氣.Text = "--";
      this.標籤_標題_昨日人氣.AutoSize = true;
      this.標籤_標題_昨日人氣.Location = new Point(150, 186);
      this.標籤_標題_昨日人氣.Name = "標籤_標題_昨日人氣";
      this.標籤_標題_昨日人氣.Size = new Size(65, 12);
      this.標籤_標題_昨日人氣.TabIndex = 47;
      this.標籤_標題_昨日人氣.Text = "昨日人氣：";
      this.標籤_值_成員人數.AutoSize = true;
      this.標籤_值_成員人數.Location = new Point(213, 168);
      this.標籤_值_成員人數.Name = "標籤_值_成員人數";
      this.標籤_值_成員人數.Size = new Size(13, 12);
      this.標籤_值_成員人數.TabIndex = 46;
      this.標籤_值_成員人數.Text = "--";
      this.標籤_標題_成員人數.AutoSize = true;
      this.標籤_標題_成員人數.Location = new Point(150, 168);
      this.標籤_標題_成員人數.Name = "標籤_標題_成員人數";
      this.標籤_標題_成員人數.Size = new Size(65, 12);
      this.標籤_標題_成員人數.TabIndex = 45;
      this.標籤_標題_成員人數.Text = "成員人數：";
      this.標籤_值_招募制度.AutoSize = true;
      this.標籤_值_招募制度.Location = new Point(213, 150);
      this.標籤_值_招募制度.Name = "標籤_值_招募制度";
      this.標籤_值_招募制度.Size = new Size(13, 12);
      this.標籤_值_招募制度.TabIndex = 44;
      this.標籤_值_招募制度.Text = "--";
      this.標籤_標題_招募制度.AutoSize = true;
      this.標籤_標題_招募制度.Location = new Point(150, 150);
      this.標籤_標題_招募制度.Name = "標籤_標題_招募制度";
      this.標籤_標題_招募制度.Size = new Size(65, 12);
      this.標籤_標題_招募制度.TabIndex = 43;
      this.標籤_標題_招募制度.Text = "招募制度：";
      this.標籤_值_現有資金.AutoSize = true;
      this.標籤_值_現有資金.Location = new Point(213, 132);
      this.標籤_值_現有資金.Name = "標籤_值_現有資金";
      this.標籤_值_現有資金.Size = new Size(13, 12);
      this.標籤_值_現有資金.TabIndex = 42;
      this.標籤_值_現有資金.Text = "--";
      this.標籤_標題_現有資金.AutoSize = true;
      this.標籤_標題_現有資金.Location = new Point(150, 132);
      this.標籤_標題_現有資金.Name = "標籤_標題_現有資金";
      this.標籤_標題_現有資金.Size = new Size(65, 12);
      this.標籤_標題_現有資金.TabIndex = 41;
      this.標籤_標題_現有資金.Text = "現有資金：";
      this.標籤_值_開設日期.AutoSize = true;
      this.標籤_值_開設日期.Location = new Point(213, 114);
      this.標籤_值_開設日期.Name = "標籤_值_開設日期";
      this.標籤_值_開設日期.Size = new Size(13, 12);
      this.標籤_值_開設日期.TabIndex = 40;
      this.標籤_值_開設日期.Text = "--";
      this.標籤_標題_開設日期.AutoSize = true;
      this.標籤_標題_開設日期.Location = new Point(150, 114);
      this.標籤_標題_開設日期.Name = "標籤_標題_開設日期";
      this.標籤_標題_開設日期.Size = new Size(65, 12);
      this.標籤_標題_開設日期.TabIndex = 39;
      this.標籤_標題_開設日期.Text = "開設日期：";
      this.標籤_值_會長帳號.AutoSize = true;
      this.標籤_值_會長帳號.Location = new Point(213, 78);
      this.標籤_值_會長帳號.Name = "標籤_值_會長帳號";
      this.標籤_值_會長帳號.Size = new Size(13, 12);
      this.標籤_值_會長帳號.TabIndex = 38;
      this.標籤_值_會長帳號.Text = "--";
      this.標籤_標題_會長帳號.AutoSize = true;
      this.標籤_標題_會長帳號.Location = new Point(150, 78);
      this.標籤_標題_會長帳號.Name = "標籤_標題_會長帳號";
      this.標籤_標題_會長帳號.Size = new Size(65, 12);
      this.標籤_標題_會長帳號.TabIndex = 37;
      this.標籤_標題_會長帳號.Text = "會長帳號：";
      this.標籤_值_公會等級.AutoSize = true;
      this.標籤_值_公會等級.Location = new Point(213, 60);
      this.標籤_值_公會等級.Name = "標籤_值_公會等級";
      this.標籤_值_公會等級.Size = new Size(13, 12);
      this.標籤_值_公會等級.TabIndex = 36;
      this.標籤_值_公會等級.Text = "--";
      this.標籤_標題_公會等級.AutoSize = true;
      this.標籤_標題_公會等級.Location = new Point(150, 60);
      this.標籤_標題_公會等級.Name = "標籤_標題_公會等級";
      this.標籤_標題_公會等級.Size = new Size(65, 12);
      this.標籤_標題_公會等級.TabIndex = 35;
      this.標籤_標題_公會等級.Text = "公會等級：";
      this.群組_公會封面.Controls.Add((Control) this.圖片框_公會封面);
      this.群組_公會封面.Location = new Point(6, 60);
      this.群組_公會封面.Name = "群組_公會封面";
      this.群組_公會封面.Size = new Size(133, 142);
      this.群組_公會封面.TabIndex = 12;
      this.群組_公會封面.TabStop = false;
      this.群組_公會封面.Text = "公會封面";
      this.群組_公會網址.Controls.Add((Control) this.連結標籤_公會網址);
      this.群組_公會網址.Location = new Point(6, 6);
      this.群組_公會網址.Name = "群組_公會網址";
      this.群組_公會網址.Size = new Size(420, 49);
      this.群組_公會網址.TabIndex = 11;
      this.群組_公會網址.TabStop = false;
      this.群組_公會網址.Text = "公會網址";
      this.連結標籤_公會網址.BackColor = SystemColors.Control;
      this.連結標籤_公會網址.BorderStyle = BorderStyle.FixedSingle;
      this.連結標籤_公會網址.LinkBehavior = LinkBehavior.HoverUnderline;
      this.連結標籤_公會網址.LinkColor = SystemColors.WindowText;
      this.連結標籤_公會網址.Location = new Point(6, 17);
      this.連結標籤_公會網址.Name = "連結標籤_公會網址";
      this.連結標籤_公會網址.Size = new Size(407, 22);
      this.連結標籤_公會網址.TabIndex = 2;
      this.連結標籤_公會網址.TextAlign = ContentAlignment.MiddleLeft;
      this.清單_勇者公會.BorderStyle = BorderStyle.FixedSingle;
      this.清單_勇者公會.Columns.AddRange(new ColumnHeader[2]
      {
        this.清單項目_公會編號,
        this.清單項目_公會名稱
      });
      this.清單_勇者公會.FullRowSelect = true;
      this.清單_勇者公會.GridLines = true;
      this.清單_勇者公會.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_勇者公會.Location = new Point(6, 220);
      this.清單_勇者公會.MultiSelect = false;
      this.清單_勇者公會.Name = "清單_勇者公會";
      this.清單_勇者公會.Size = new Size(420, 203);
      this.清單_勇者公會.TabIndex = 10;
      this.清單_勇者公會.UseCompatibleStateImageBehavior = false;
      this.清單_勇者公會.View = View.Details;
      this.清單項目_公會編號.Text = "編號";
      this.清單項目_公會編號.Width = 36;
      this.清單項目_公會名稱.Text = "公會名稱";
      this.清單項目_公會名稱.Width = 364;
      this.頁籤_勇者文章.Controls.Add((Control) this.群組_其它);
      this.頁籤_勇者文章.Controls.Add((Control) this.群組_達人專區);
      this.頁籤_勇者文章.Controls.Add((Control) this.群組_閱覽限制);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_值_文章留言);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_標題_文章留言);
      this.頁籤_勇者文章.Controls.Add((Control) this.清單_文章資訊);
      this.頁籤_勇者文章.Controls.Add((Control) this.按鈕_下一頁);
      this.頁籤_勇者文章.Controls.Add((Control) this.按鈕_上一頁);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_值_贊助);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_標題_贊助);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_值_文章ＧＰ);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_標題_文章ＧＰ);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_值_人氣);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_標題_人氣);
      this.頁籤_勇者文章.Controls.Add((Control) this.清單_勇者文章);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_值_發表日期);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_標題_發表日期);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_值_文章作者);
      this.頁籤_勇者文章.Controls.Add((Control) this.標籤_標題_文章作者);
      this.頁籤_勇者文章.Controls.Add((Control) this.群組_文章封面);
      this.頁籤_勇者文章.Controls.Add((Control) this.群組_文章網址);
      this.頁籤_勇者文章.Location = new Point(4, 22);
      this.頁籤_勇者文章.Name = "頁籤_勇者文章";
      this.頁籤_勇者文章.Padding = new Padding(3);
      this.頁籤_勇者文章.Size = new Size(432, 429);
      this.頁籤_勇者文章.TabIndex = 5;
      this.頁籤_勇者文章.Text = "勇者文章";
      this.頁籤_勇者文章.UseVisualStyleBackColor = true;
      this.標籤_值_文章留言.AutoSize = true;
      this.標籤_值_文章留言.Location = new Point(207, 150);
      this.標籤_值_文章留言.Name = "標籤_值_文章留言";
      this.標籤_值_文章留言.Size = new Size(13, 12);
      this.標籤_值_文章留言.TabIndex = 75;
      this.標籤_值_文章留言.Text = "--";
      this.標籤_標題_文章留言.AutoSize = true;
      this.標籤_標題_文章留言.Location = new Point(145, 150);
      this.標籤_標題_文章留言.Name = "標籤_標題_文章留言";
      this.標籤_標題_文章留言.Size = new Size(65, 12);
      this.標籤_標題_文章留言.TabIndex = 74;
      this.標籤_標題_文章留言.Text = "　　留言：";
      this.清單_文章資訊.BorderStyle = BorderStyle.FixedSingle;
      this.清單_文章資訊.Columns.AddRange(new ColumnHeader[17]
      {
        this.清單項目_文章網址,
        this.清單項目_文章封面網址,
        this.清單項目_文章作者,
        this.清單項目_發表日期,
        this.清單項目_贊助,
        this.清單項目_人氣,
        this.清單項目_ＧＰ,
        this.清單項目_付費閱覽,
        this.清單項目_付費巴幣,
        this.清單項目_限好友閱覽,
        this.清單項目_年齡限制,
        this.清單項目_部落格達人,
        this.清單項目_小說達人,
        this.清單項目_繪圖達人,
        this.清單項目_GNN投稿新聞,
        this.清單項目_熱門創作,
        this.清單項目_精選閣樓
      });
      this.清單_文章資訊.FullRowSelect = true;
      this.清單_文章資訊.GridLines = true;
      this.清單_文章資訊.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_文章資訊.Location = new Point(6, 281);
      this.清單_文章資訊.MultiSelect = false;
      this.清單_文章資訊.Name = "清單_文章資訊";
      this.清單_文章資訊.Size = new Size(420, 116);
      this.清單_文章資訊.TabIndex = 63;
      this.清單_文章資訊.UseCompatibleStateImageBehavior = false;
      this.清單_文章資訊.View = View.Details;
      this.清單_文章資訊.Visible = false;
      this.清單項目_文章網址.Text = "文章網址";
      this.清單項目_文章網址.Width = 61;
      this.清單項目_文章封面網址.Text = "文章封面網址";
      this.清單項目_文章封面網址.Width = 92;
      this.清單項目_文章作者.Text = "文章作者";
      this.清單項目_文章作者.Width = 64;
      this.清單項目_發表日期.Text = "發表日期";
      this.清單項目_贊助.Text = "贊助";
      this.清單項目_贊助.Width = 38;
      this.清單項目_人氣.Text = "人氣";
      this.清單項目_人氣.Width = 36;
      this.清單項目_ＧＰ.Text = "ＧＰ";
      this.清單項目_ＧＰ.Width = 37;
      this.清單項目_熱門創作.Text = "熱門創作";
      this.清單項目_熱門創作.Width = 36;
      this.清單項目_精選閣樓.Text = "精選閣樓";
      this.清單項目_精選閣樓.Width = 38;
      this.清單項目_部落格達人.Text = "部落格達人";
      this.清單項目_小說達人.Text = "小說達人";
      this.清單項目_繪圖達人.Text = "繪圖達人";
      this.清單項目_GNN投稿新聞.Text = "GNN投稿新聞";
      this.按鈕_下一頁.Enabled = false;
      this.按鈕_下一頁.Location = new Point(332, 400);
      this.按鈕_下一頁.Name = "按鈕_下一頁";
      this.按鈕_下一頁.Size = new Size(94, 23);
      this.按鈕_下一頁.TabIndex = 62;
      this.按鈕_下一頁.Text = "下一頁 →";
      this.按鈕_下一頁.UseVisualStyleBackColor = true;
      this.按鈕_上一頁.Enabled = false;
      this.按鈕_上一頁.Font = new Font("新細明體", 9f, FontStyle.Regular, GraphicsUnit.Point, (byte) 136);
      this.按鈕_上一頁.Location = new Point(6, 400);
      this.按鈕_上一頁.Name = "按鈕_上一頁";
      this.按鈕_上一頁.Size = new Size(94, 23);
      this.按鈕_上一頁.TabIndex = 61;
      this.按鈕_上一頁.Text = "← 上一頁";
      this.按鈕_上一頁.UseVisualStyleBackColor = true;
      this.標籤_值_贊助.AutoSize = true;
      this.標籤_值_贊助.Location = new Point(207, 96);
      this.標籤_值_贊助.Name = "標籤_值_贊助";
      this.標籤_值_贊助.Size = new Size(13, 12);
      this.標籤_值_贊助.TabIndex = 60;
      this.標籤_值_贊助.Text = "--";
      this.標籤_標題_贊助.AutoSize = true;
      this.標籤_標題_贊助.Location = new Point(144, 96);
      this.標籤_標題_贊助.Name = "標籤_標題_贊助";
      this.標籤_標題_贊助.Size = new Size(65, 12);
      this.標籤_標題_贊助.TabIndex = 59;
      this.標籤_標題_贊助.Text = "　　贊助：";
      this.標籤_值_文章ＧＰ.AutoSize = true;
      this.標籤_值_文章ＧＰ.Location = new Point(207, 132);
      this.標籤_值_文章ＧＰ.Name = "標籤_值_文章ＧＰ";
      this.標籤_值_文章ＧＰ.Size = new Size(13, 12);
      this.標籤_值_文章ＧＰ.TabIndex = 58;
      this.標籤_值_文章ＧＰ.Text = "--";
      this.標籤_標題_文章ＧＰ.AutoSize = true;
      this.標籤_標題_文章ＧＰ.Location = new Point(144, 132);
      this.標籤_標題_文章ＧＰ.Name = "標籤_標題_文章ＧＰ";
      this.標籤_標題_文章ＧＰ.Size = new Size(65, 12);
      this.標籤_標題_文章ＧＰ.TabIndex = 57;
      this.標籤_標題_文章ＧＰ.Text = "　　ＧＰ：";
      this.標籤_值_人氣.AutoSize = true;
      this.標籤_值_人氣.Location = new Point(207, 114);
      this.標籤_值_人氣.Name = "標籤_值_人氣";
      this.標籤_值_人氣.Size = new Size(13, 12);
      this.標籤_值_人氣.TabIndex = 56;
      this.標籤_值_人氣.Text = "--";
      this.標籤_標題_人氣.AutoSize = true;
      this.標籤_標題_人氣.Location = new Point(144, 114);
      this.標籤_標題_人氣.Name = "標籤_標題_人氣";
      this.標籤_標題_人氣.Size = new Size(65, 12);
      this.標籤_標題_人氣.TabIndex = 55;
      this.標籤_標題_人氣.Text = "　　人氣：";
      this.清單_勇者文章.BorderStyle = BorderStyle.FixedSingle;
      this.清單_勇者文章.Columns.AddRange(new ColumnHeader[3]
      {
        this.清單項目_文章編號,
        this.清單項目_文章分類,
        this.清單項目_文章標題
      });
      this.清單_勇者文章.FullRowSelect = true;
      this.清單_勇者文章.GridLines = true;
      this.清單_勇者文章.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.清單_勇者文章.Location = new Point(6, 207);
      this.清單_勇者文章.MultiSelect = false;
      this.清單_勇者文章.Name = "清單_勇者文章";
      this.清單_勇者文章.Size = new Size(420, 190);
      this.清單_勇者文章.TabIndex = 43;
      this.清單_勇者文章.UseCompatibleStateImageBehavior = false;
      this.清單_勇者文章.View = View.Details;
      this.清單項目_文章編號.Text = "編號";
      this.清單項目_文章編號.Width = 36;
      this.清單項目_文章分類.Text = "分類";
      this.清單項目_文章分類.Width = 36;
      this.清單項目_文章標題.Text = "文章標題";
      this.清單項目_文章標題.Width = 328;
      this.標籤_值_發表日期.AutoSize = true;
      this.標籤_值_發表日期.Location = new Point(207, 78);
      this.標籤_值_發表日期.Name = "標籤_值_發表日期";
      this.標籤_值_發表日期.Size = new Size(13, 12);
      this.標籤_值_發表日期.TabIndex = 42;
      this.標籤_值_發表日期.Text = "--";
      this.標籤_標題_發表日期.AutoSize = true;
      this.標籤_標題_發表日期.Location = new Point(144, 78);
      this.標籤_標題_發表日期.Name = "標籤_標題_發表日期";
      this.標籤_標題_發表日期.Size = new Size(65, 12);
      this.標籤_標題_發表日期.TabIndex = 41;
      this.標籤_標題_發表日期.Text = "發表日期：";
      this.標籤_值_文章作者.AutoSize = true;
      this.標籤_值_文章作者.Location = new Point(207, 60);
      this.標籤_值_文章作者.Name = "標籤_值_文章作者";
      this.標籤_值_文章作者.Size = new Size(13, 12);
      this.標籤_值_文章作者.TabIndex = 40;
      this.標籤_值_文章作者.Text = "--";
      this.標籤_標題_文章作者.AutoSize = true;
      this.標籤_標題_文章作者.Location = new Point(144, 60);
      this.標籤_標題_文章作者.Name = "標籤_標題_文章作者";
      this.標籤_標題_文章作者.Size = new Size(65, 12);
      this.標籤_標題_文章作者.TabIndex = 39;
      this.標籤_標題_文章作者.Text = "文章作者：";
      this.群組_文章封面.Controls.Add((Control) this.圖片框_文章封面);
      this.群組_文章封面.Location = new Point(6, 60);
      this.群組_文章封面.Name = "群組_文章封面";
      this.群組_文章封面.Size = new Size(133, 142);
      this.群組_文章封面.TabIndex = 13;
      this.群組_文章封面.TabStop = false;
      this.群組_文章封面.Text = "文章封面";
      this.群組_文章網址.Controls.Add((Control) this.連結標籤_文章網址);
      this.群組_文章網址.Location = new Point(6, 6);
      this.群組_文章網址.Name = "群組_文章網址";
      this.群組_文章網址.Size = new Size(420, 49);
      this.群組_文章網址.TabIndex = 12;
      this.群組_文章網址.TabStop = false;
      this.群組_文章網址.Text = "文章網址";
      this.連結標籤_文章網址.BackColor = SystemColors.Control;
      this.連結標籤_文章網址.BorderStyle = BorderStyle.FixedSingle;
      this.連結標籤_文章網址.LinkBehavior = LinkBehavior.HoverUnderline;
      this.連結標籤_文章網址.LinkColor = SystemColors.WindowText;
      this.連結標籤_文章網址.Location = new Point(6, 17);
      this.連結標籤_文章網址.Name = "連結標籤_文章網址";
      this.連結標籤_文章網址.Size = new Size(407, 22);
      this.連結標籤_文章網址.TabIndex = 2;
      this.連結標籤_文章網址.TextAlign = ContentAlignment.MiddleLeft;
      this.按鈕_清除.Location = new Point(372, 11);
      this.按鈕_清除.Name = "按鈕_清除";
      this.按鈕_清除.Size = new Size(75, 23);
      this.按鈕_清除.TabIndex = 2;
      this.按鈕_清除.Text = "清除";
      this.按鈕_清除.UseVisualStyleBackColor = true;
      this.群組_閱覽限制.Controls.Add((Control) this.圖片框_閱覽限制_付費閱覽);
      this.群組_閱覽限制.Controls.Add((Control) this.圖片框_閱覽限制_限好友閱覽);
      this.群組_閱覽限制.Controls.Add((Control) this.圖片框_閱覽限制_年齡限制);
      this.群組_閱覽限制.Location = new Point(331, 61);
      this.群組_閱覽限制.Name = "群組_閱覽限制";
      this.群組_閱覽限制.Size = new Size(95, 42);
      this.群組_閱覽限制.TabIndex = 91;
      this.群組_閱覽限制.TabStop = false;
      this.群組_閱覽限制.Text = "閱覽限制";
      this.群組_達人專區.Controls.Add((Control) this.圖片框_達人專區_部落格達人);
      this.群組_達人專區.Controls.Add((Control) this.圖片框_達人專區_小說達人);
      this.群組_達人專區.Controls.Add((Control) this.圖片框_達人專區_繪圖達人);
      this.群組_達人專區.Location = new Point(331, 110);
      this.群組_達人專區.Name = "群組_達人專區";
      this.群組_達人專區.Size = new Size(95, 42);
      this.群組_達人專區.TabIndex = 92;
      this.群組_達人專區.TabStop = false;
      this.群組_達人專區.Text = "達人專區";
      this.群組_其它.Controls.Add((Control) this.圖片框_其它_GNN投稿新聞);
      this.群組_其它.Controls.Add((Control) this.圖片框_其它_熱門創作);
      this.群組_其它.Controls.Add((Control) this.圖片框_其它_精選閣樓);
      this.群組_其它.Location = new Point(331, 159);
      this.群組_其它.Name = "群組_其它";
      this.群組_其它.Size = new Size(95, 42);
      this.群組_其它.TabIndex = 93;
      this.群組_其它.TabStop = false;
      this.群組_其它.Text = "其它";
      this.圖片框_勇者資訊_勇者造型.BackColor = Color.DimGray;
      this.圖片框_勇者資訊_勇者造型.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
      this.圖片框_勇者資訊_勇者造型.Location = new Point(7, 16);
      this.圖片框_勇者資訊_勇者造型.Name = "圖片框_勇者資訊_勇者造型";
      this.圖片框_勇者資訊_勇者造型.Size = new Size(110, 160);
      this.圖片框_勇者資訊_勇者造型.TabIndex = 0;
      this.圖片框_勇者資訊_勇者造型.TabStop = false;
      this.圖片框_勇者裝備_勇者裝備.BackColor = Color.DimGray;
      this.圖片框_勇者裝備_勇者裝備.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
      this.圖片框_勇者裝備_勇者裝備.Location = new Point(7, 16);
      this.圖片框_勇者裝備_勇者裝備.Name = "圖片框_勇者裝備_勇者裝備";
      this.圖片框_勇者裝備_勇者裝備.Size = new Size(110, 160);
      this.圖片框_勇者裝備_勇者裝備.TabIndex = 1;
      this.圖片框_勇者裝備_勇者裝備.TabStop = false;
      this.圖片框_勇者裝備_勇者造型.BackColor = Color.DimGray;
      this.圖片框_勇者裝備_勇者造型.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設勇者造型;
      this.圖片框_勇者裝備_勇者造型.Location = new Point(7, 16);
      this.圖片框_勇者裝備_勇者造型.Name = "圖片框_勇者裝備_勇者造型";
      this.圖片框_勇者裝備_勇者造型.Size = new Size(110, 160);
      this.圖片框_勇者裝備_勇者造型.TabIndex = 1;
      this.圖片框_勇者裝備_勇者造型.TabStop = false;
      this.圖片框_勇者好友頭像.BackColor = Color.DimGray;
      this.圖片框_勇者好友頭像.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.未知頭像;
      this.圖片框_勇者好友頭像.Location = new Point(13, 16);
      this.圖片框_勇者好友頭像.Name = "圖片框_勇者好友頭像";
      this.圖片框_勇者好友頭像.Size = new Size(40, 40);
      this.圖片框_勇者好友頭像.TabIndex = 2;
      this.圖片框_勇者好友頭像.TabStop = false;
      this.圖片框_勇者粉絲頭像.BackColor = Color.DimGray;
      this.圖片框_勇者粉絲頭像.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.未知頭像;
      this.圖片框_勇者粉絲頭像.Location = new Point(13, 16);
      this.圖片框_勇者粉絲頭像.Name = "圖片框_勇者粉絲頭像";
      this.圖片框_勇者粉絲頭像.Size = new Size(40, 40);
      this.圖片框_勇者粉絲頭像.TabIndex = 2;
      this.圖片框_勇者粉絲頭像.TabStop = false;
      this.圖片框_公會封面.BackColor = Color.Gainsboro;
      this.圖片框_公會封面.BackgroundImageLayout = ImageLayout.None;
      this.圖片框_公會封面.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設公會圖;
      this.圖片框_公會封面.Location = new Point(6, 15);
      this.圖片框_公會封面.Name = "圖片框_公會封面";
      this.圖片框_公會封面.Size = new Size(120, 120);
      this.圖片框_公會封面.SizeMode = PictureBoxSizeMode.CenterImage;
      this.圖片框_公會封面.TabIndex = 2;
      this.圖片框_公會封面.TabStop = false;
      this.圖片框_其它_GNN投稿新聞.BackColor = Color.Transparent;
      this.圖片框_其它_GNN投稿新聞.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.GNN投稿新聞_灰階;
      this.圖片框_其它_GNN投稿新聞.Location = new Point(10, 14);
      this.圖片框_其它_GNN投稿新聞.Name = "圖片框_其它_GNN投稿新聞";
      this.圖片框_其它_GNN投稿新聞.Size = new Size(21, 21);
      this.圖片框_其它_GNN投稿新聞.TabIndex = 91;
      this.圖片框_其它_GNN投稿新聞.TabStop = false;
      this.提示.SetToolTip((Control) this.圖片框_其它_GNN投稿新聞, "GNN投稿新聞");
      this.圖片框_其它_熱門創作.BackColor = Color.Transparent;
      this.圖片框_其它_熱門創作.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.熱門創作_灰階;
      this.圖片框_其它_熱門創作.Location = new Point(37, 14);
      this.圖片框_其它_熱門創作.Name = "圖片框_其它_熱門創作";
      this.圖片框_其它_熱門創作.Size = new Size(21, 21);
      this.圖片框_其它_熱門創作.TabIndex = 90;
      this.圖片框_其它_熱門創作.TabStop = false;
      this.提示.SetToolTip((Control) this.圖片框_其它_熱門創作, "熱門創作");
      this.圖片框_其它_精選閣樓.BackColor = Color.Transparent;
      this.圖片框_其它_精選閣樓.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.精選閣樓_灰階;
      this.圖片框_其它_精選閣樓.Location = new Point(64, 13);
      this.圖片框_其它_精選閣樓.Name = "圖片框_其它_精選閣樓";
      this.圖片框_其它_精選閣樓.Size = new Size(21, 21);
      this.圖片框_其它_精選閣樓.TabIndex = 89;
      this.圖片框_其它_精選閣樓.TabStop = false;
      this.提示.SetToolTip((Control) this.圖片框_其它_精選閣樓, "精選閣樓");
      this.圖片框_達人專區_部落格達人.BackColor = Color.Transparent;
      this.圖片框_達人專區_部落格達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.部落格達人_灰階;
      this.圖片框_達人專區_部落格達人.Location = new Point(10, 14);
      this.圖片框_達人專區_部落格達人.Name = "圖片框_達人專區_部落格達人";
      this.圖片框_達人專區_部落格達人.Size = new Size(21, 21);
      this.圖片框_達人專區_部落格達人.TabIndex = 91;
      this.圖片框_達人專區_部落格達人.TabStop = false;
      this.提示.SetToolTip((Control) this.圖片框_達人專區_部落格達人, "部落格達人");
      this.圖片框_達人專區_小說達人.BackColor = Color.Transparent;
      this.圖片框_達人專區_小說達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.小說達人_灰階;
      this.圖片框_達人專區_小說達人.Location = new Point(37, 14);
      this.圖片框_達人專區_小說達人.Name = "圖片框_達人專區_小說達人";
      this.圖片框_達人專區_小說達人.Size = new Size(21, 21);
      this.圖片框_達人專區_小說達人.TabIndex = 90;
      this.圖片框_達人專區_小說達人.TabStop = false;
      this.提示.SetToolTip((Control) this.圖片框_達人專區_小說達人, "小說達人");
      this.圖片框_達人專區_繪圖達人.BackColor = Color.Transparent;
      this.圖片框_達人專區_繪圖達人.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.GNN投稿新聞_灰階;
      this.圖片框_達人專區_繪圖達人.Location = new Point(64, 13);
      this.圖片框_達人專區_繪圖達人.Name = "圖片框_達人專區_繪圖達人";
      this.圖片框_達人專區_繪圖達人.Size = new Size(21, 21);
      this.圖片框_達人專區_繪圖達人.TabIndex = 89;
      this.圖片框_達人專區_繪圖達人.TabStop = false;
      this.提示.SetToolTip((Control) this.圖片框_達人專區_繪圖達人, "繪圖達人");
      this.圖片框_閱覽限制_付費閱覽.BackColor = Color.Transparent;
      this.圖片框_閱覽限制_付費閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.付費閱覽_灰階;
      this.圖片框_閱覽限制_付費閱覽.Location = new Point(10, 14);
      this.圖片框_閱覽限制_付費閱覽.Name = "圖片框_閱覽限制_付費閱覽";
      this.圖片框_閱覽限制_付費閱覽.Size = new Size(21, 21);
      this.圖片框_閱覽限制_付費閱覽.TabIndex = 91;
      this.圖片框_閱覽限制_付費閱覽.TabStop = false;
      this.提示.SetToolTip((Control) this.圖片框_閱覽限制_付費閱覽, "付費閱覽");
      this.圖片框_閱覽限制_限好友閱覽.BackColor = Color.Transparent;
      this.圖片框_閱覽限制_限好友閱覽.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.限好友閱覽_灰階;
      this.圖片框_閱覽限制_限好友閱覽.Location = new Point(37, 14);
      this.圖片框_閱覽限制_限好友閱覽.Name = "圖片框_閱覽限制_限好友閱覽";
      this.圖片框_閱覽限制_限好友閱覽.Size = new Size(21, 21);
      this.圖片框_閱覽限制_限好友閱覽.TabIndex = 90;
      this.圖片框_閱覽限制_限好友閱覽.TabStop = false;
      this.提示.SetToolTip((Control) this.圖片框_閱覽限制_限好友閱覽, "限好友閱覽");
      this.圖片框_閱覽限制_年齡限制.BackColor = Color.Transparent;
      this.圖片框_閱覽限制_年齡限制.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.年齡限制_灰階;
      this.圖片框_閱覽限制_年齡限制.Location = new Point(64, 13);
      this.圖片框_閱覽限制_年齡限制.Name = "圖片框_閱覽限制_年齡限制";
      this.圖片框_閱覽限制_年齡限制.Size = new Size(21, 21);
      this.圖片框_閱覽限制_年齡限制.TabIndex = 89;
      this.圖片框_閱覽限制_年齡限制.TabStop = false;
      this.提示.SetToolTip((Control) this.圖片框_閱覽限制_年齡限制, "年齡限制");
      this.圖片框_文章封面.BackColor = Color.Transparent;
      this.圖片框_文章封面.BackgroundImageLayout = ImageLayout.None;
      this.圖片框_文章封面.Image = (Image) 巴哈姆特勇者資訊查詢器.My.Resources.Resources.預設公會圖;
      this.圖片框_文章封面.Location = new Point(6, 15);
      this.圖片框_文章封面.Name = "圖片框_文章封面";
      this.圖片框_文章封面.Size = new Size(120, 120);
      this.圖片框_文章封面.SizeMode = PictureBoxSizeMode.Zoom;
      this.圖片框_文章封面.TabIndex = 2;
      this.圖片框_文章封面.TabStop = false;
      this.清單項目_付費閱覽.Text = "付費閱覽";
      this.清單項目_限好友閱覽.Text = "限好友閱覽";
      this.清單項目_年齡限制.Text = "年齡限制";
      this.清單項目_付費巴幣.Text = "付費巴幣";
      this.AutoScaleDimensions = new SizeF(6f, 12f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(454, 521);
      this.Controls.Add((Control) this.按鈕_清除);
      this.Controls.Add((Control) this.主頁籤);
      this.Controls.Add((Control) this.狀態列);
      this.Controls.Add((Control) this.標籤_標題_查詢帳號);
      this.Controls.Add((Control) this.按鈕_查詢);
      this.Controls.Add((Control) this.文字方塊_帳號輸入框);
      this.DoubleBuffered = true;
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.KeyPreview = true;
      this.MaximizeBox = false;
      this.Name = nameof (主表單);
      this.SizeGripStyle = SizeGripStyle.Hide;
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "巴哈姆特勇者資訊查詢器 v1.3　程式作者：高木秋人";
      this.狀態列.ResumeLayout(false);
      this.狀態列.PerformLayout();
      this.主頁籤.ResumeLayout(false);
      this.頁籤_勇者資訊.ResumeLayout(false);
      this.群組_小屋統計.ResumeLayout(false);
      this.群組_小屋統計.PerformLayout();
      this.群組_個人記錄.ResumeLayout(false);
      this.群組_個人記錄.PerformLayout();
      this.群組_勇者能力.ResumeLayout(false);
      this.群組_勇者能力.PerformLayout();
      this.群組_勇者歷練.ResumeLayout(false);
      this.群組_勇者歷練.PerformLayout();
      this.頁籤_勇者裝備.ResumeLayout(false);
      this.群組_勇者裝備.ResumeLayout(false);
      this.群組_裝備清單.ResumeLayout(false);
      this.群組_裝備網址.ResumeLayout(false);
      this.群組_勇者造型.ResumeLayout(false);
      this.頁籤_勇者好友.ResumeLayout(false);
      this.群組_好友頭像.ResumeLayout(false);
      this.群組_好友網址.ResumeLayout(false);
      this.頁籤_勇者粉絲.ResumeLayout(false);
      this.群組_粉絲頭像.ResumeLayout(false);
      this.群組_粉絲網址.ResumeLayout(false);
      this.頁籤_勇者公會.ResumeLayout(false);
      this.頁籤_勇者公會.PerformLayout();
      this.群組_公會封面.ResumeLayout(false);
      this.群組_公會網址.ResumeLayout(false);
      this.頁籤_勇者文章.ResumeLayout(false);
      this.頁籤_勇者文章.PerformLayout();
      this.群組_文章封面.ResumeLayout(false);
      this.群組_文章網址.ResumeLayout(false);
      this.群組_閱覽限制.ResumeLayout(false);
      this.群組_達人專區.ResumeLayout(false);
      this.群組_其它.ResumeLayout(false);
      ((ISupportInitialize) this.圖片框_勇者資訊_勇者造型).EndInit();
      ((ISupportInitialize) this.圖片框_勇者裝備_勇者裝備).EndInit();
      ((ISupportInitialize) this.圖片框_勇者裝備_勇者造型).EndInit();
      ((ISupportInitialize) this.圖片框_勇者好友頭像).EndInit();
      ((ISupportInitialize) this.圖片框_勇者粉絲頭像).EndInit();
      ((ISupportInitialize) this.圖片框_公會封面).EndInit();
      ((ISupportInitialize) this.圖片框_其它_GNN投稿新聞).EndInit();
      ((ISupportInitialize) this.圖片框_其它_熱門創作).EndInit();
      ((ISupportInitialize) this.圖片框_其它_精選閣樓).EndInit();
      ((ISupportInitialize) this.圖片框_達人專區_部落格達人).EndInit();
      ((ISupportInitialize) this.圖片框_達人專區_小說達人).EndInit();
      ((ISupportInitialize) this.圖片框_達人專區_繪圖達人).EndInit();
      ((ISupportInitialize) this.圖片框_閱覽限制_付費閱覽).EndInit();
      ((ISupportInitialize) this.圖片框_閱覽限制_限好友閱覽).EndInit();
      ((ISupportInitialize) this.圖片框_閱覽限制_年齡限制).EndInit();
      ((ISupportInitialize) this.圖片框_文章封面).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("標籤_標題_查詢帳號")]
    internal virtual Label 標籤_標題_查詢帳號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button 按鈕_查詢
    {
      get => this._按鈕_查詢;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.執行查詢);
        Button 按鈕查詢1 = this._按鈕_查詢;
        if (按鈕查詢1 != null)
          按鈕查詢1.Click -= eventHandler;
        this._按鈕_查詢 = value;
        Button 按鈕查詢2 = this._按鈕_查詢;
        if (按鈕查詢2 == null)
          return;
        按鈕查詢2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("文字方塊_帳號輸入框")]
    internal virtual TextBox 文字方塊_帳號輸入框 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("狀態列")]
    internal virtual StatusStrip 狀態列 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("狀態列_標籤_連線狀態顯示")]
    internal virtual ToolStripStatusLabel 狀態列_標籤_連線狀態顯示 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("主頁籤")]
    internal virtual TabControl 主頁籤 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("頁籤_勇者資訊")]
    internal virtual TabPage 頁籤_勇者資訊 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_小屋統計")]
    internal virtual GroupBox 群組_小屋統計 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_粉絲數")]
    internal virtual Label 標籤_值_粉絲數 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_粉絲數")]
    internal virtual Label 標籤_標題_粉絲數 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_好友圈")]
    internal virtual Label 標籤_值_好友圈 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_好友圈")]
    internal virtual Label 標籤_標題_好友圈 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_精華區")]
    internal virtual Label 標籤_值_精華區 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_精華區")]
    internal virtual Label 標籤_標題_精華區 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_創作")]
    internal virtual Label 標籤_值_創作 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_創作")]
    internal virtual Label 標籤_標題_創作 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_總人氣")]
    internal virtual Label 標籤_值_總人氣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_總人氣")]
    internal virtual Label 標籤_標題_總人氣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_今日人氣")]
    internal virtual Label 標籤_值_今日人氣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_今日人氣")]
    internal virtual Label 標籤_標題_今日人氣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_個人記錄")]
    internal virtual GroupBox 群組_個人記錄 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_動漫電玩通")]
    internal virtual Label 標籤_值_動漫電玩通 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_動漫電玩通")]
    internal virtual Label 標籤_標題_動漫電玩通 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_哈拉篇數")]
    internal virtual Label 標籤_值_哈拉篇數 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_哈拉篇數")]
    internal virtual Label 標籤_標題_哈拉篇數 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_站規測驗")]
    internal virtual Label 標籤_值_站規測驗 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_站規測驗")]
    internal virtual Label 標籤_標題_站規測驗 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_認證時間")]
    internal virtual Label 標籤_值_認證時間 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_認證時間")]
    internal virtual Label 標籤_標題_認證時間 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_手機認證")]
    internal virtual Label 標籤_值_手機認證 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_手機認證")]
    internal virtual Label 標籤_標題_手機認證 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_註冊日期")]
    internal virtual Label 標籤_值_註冊日期 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_註冊日期")]
    internal virtual Label 標籤_標題_註冊日期 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_上站日期")]
    internal virtual Label 標籤_值_上站日期 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_上站日期")]
    internal virtual Label 標籤_標題_上站日期 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_上站次數")]
    internal virtual Label 標籤_值_上站次數 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_上站次數")]
    internal virtual Label 標籤_標題_上站次數 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_更新時間")]
    internal virtual Label 標籤_值_更新時間 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_更新時間")]
    internal virtual Label 標籤_標題_更新時間 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_勇者能力")]
    internal virtual GroupBox 群組_勇者能力 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_幸運")]
    internal virtual Label 標籤_值_幸運 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_幸運")]
    internal virtual Label 標籤_標題_幸運 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_迴避")]
    internal virtual Label 標籤_值_迴避 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_迴避")]
    internal virtual Label 標籤_標題_迴避 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_命中")]
    internal virtual Label 標籤_值_命中 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_命中")]
    internal virtual Label 標籤_標題_命中 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_魔防")]
    internal virtual Label 標籤_值_魔防 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_魔防")]
    internal virtual Label 標籤_標題_魔防 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_物防")]
    internal virtual Label 標籤_值_物防 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_物防")]
    internal virtual Label 標籤_標題_物防 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_魔攻")]
    internal virtual Label 標籤_值_魔攻 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_魔攻")]
    internal virtual Label 標籤_標題_魔攻 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_物攻")]
    internal virtual Label 標籤_值_物攻 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_物攻")]
    internal virtual Label 標籤_標題_物攻 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_勇者歷練")]
    internal virtual GroupBox 群組_勇者歷練 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_勇者經驗值")]
    internal virtual Label 標籤_值_勇者經驗值 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_背景_勇者經驗值")]
    internal virtual Label 標籤_背景_勇者經驗值 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_經驗")]
    internal virtual Label 標籤_標題_經驗 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_勇者魔力值")]
    internal virtual Label 標籤_值_勇者魔力值 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_背景_勇者魔力值")]
    internal virtual Label 標籤_背景_勇者魔力值 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_魔力")]
    internal virtual Label 標籤_標題_魔力 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_勇者血量值")]
    internal virtual Label 標籤_值_勇者血量值 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_背景_勇者血量值")]
    internal virtual Label 標籤_背景_勇者血量值 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_血量")]
    internal virtual Label 標籤_標題_血量 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_勇評")]
    internal virtual Label 標籤_值_勇評 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_勇評")]
    internal virtual Label 標籤_標題_勇評 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_ＧＰ")]
    internal virtual Label 標籤_值_ＧＰ { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_ＧＰ")]
    internal virtual Label 標籤_標題_ＧＰ { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_巴幣")]
    internal virtual Label 標籤_值_巴幣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_巴幣")]
    internal virtual Label 標籤_標題_巴幣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_稱號")]
    internal virtual Label 標籤_值_稱號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_稱號")]
    internal virtual Label 標籤_標題_稱號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_職業")]
    internal virtual Label 標籤_值_職業 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_職業")]
    internal virtual Label 標籤_標題_職業 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_種族")]
    internal virtual Label 標籤_值_種族 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_種族")]
    internal virtual Label 標籤_標題_種族 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_等級")]
    internal virtual Label 標籤_值_等級 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_等級")]
    internal virtual Label 標籤_標題_等級 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_暱稱")]
    internal virtual Label 標籤_值_暱稱 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_暱稱")]
    internal virtual Label 標籤_標題_暱稱 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_帳號")]
    internal virtual Label 標籤_值_帳號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_帳號")]
    internal virtual Label 標籤_標題_帳號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_勇者資訊_勇者造型")]
    internal virtual PictureBox 圖片框_勇者資訊_勇者造型 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("頁籤_勇者裝備")]
    internal virtual TabPage 頁籤_勇者裝備 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_勇者造型")]
    internal virtual GroupBox 群組_勇者造型 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_勇者裝備_勇者造型")]
    internal virtual PictureBox 圖片框_勇者裝備_勇者造型 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_裝備網址")]
    internal virtual GroupBox 群組_裝備網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_裝備清單")]
    internal virtual GroupBox 群組_裝備清單 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ListView 清單_勇者裝備
    {
      get => this._清單_勇者裝備;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.清單_選擇勇者裝備);
        ListView 清單勇者裝備1 = this._清單_勇者裝備;
        if (清單勇者裝備1 != null)
          清單勇者裝備1.SelectedIndexChanged -= eventHandler;
        this._清單_勇者裝備 = value;
        ListView 清單勇者裝備2 = this._清單_勇者裝備;
        if (清單勇者裝備2 == null)
          return;
        清單勇者裝備2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("清單項目_裝備編號")]
    internal virtual ColumnHeader 清單項目_裝備編號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_類別")]
    internal virtual ColumnHeader 清單項目_類別 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_裝備名稱")]
    internal virtual ColumnHeader 清單項目_裝備名稱 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_勇者裝備")]
    internal virtual GroupBox 群組_勇者裝備 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_勇者裝備_勇者裝備")]
    internal virtual PictureBox 圖片框_勇者裝備_勇者裝備 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單_裝備網址")]
    internal virtual ListBox 清單_裝備網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("狀態列_標籤_查詢狀態顯示")]
    internal virtual ToolStripStatusLabel 狀態列_標籤_查詢狀態顯示 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button 按鈕_儲存勇者造型
    {
      get => this._按鈕_儲存勇者造型;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.儲存勇者造型);
        Button 按鈕儲存勇者造型1 = this._按鈕_儲存勇者造型;
        if (按鈕儲存勇者造型1 != null)
          按鈕儲存勇者造型1.Click -= eventHandler;
        this._按鈕_儲存勇者造型 = value;
        Button 按鈕儲存勇者造型2 = this._按鈕_儲存勇者造型;
        if (按鈕儲存勇者造型2 == null)
          return;
        按鈕儲存勇者造型2.Click += eventHandler;
      }
    }

    internal virtual Button 按鈕_儲存勇者裝備
    {
      get => this._按鈕_儲存勇者裝備;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.儲存勇者裝備);
        Button 按鈕儲存勇者裝備1 = this._按鈕_儲存勇者裝備;
        if (按鈕儲存勇者裝備1 != null)
          按鈕儲存勇者裝備1.Click -= eventHandler;
        this._按鈕_儲存勇者裝備 = value;
        Button 按鈕儲存勇者裝備2 = this._按鈕_儲存勇者裝備;
        if (按鈕儲存勇者裝備2 == null)
          return;
        按鈕儲存勇者裝備2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("頁籤_勇者好友")]
    internal virtual TabPage 頁籤_勇者好友 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ListView 清單_勇者好友
    {
      get => this._清單_勇者好友;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.清單_選擇勇者好友);
        ListView 清單勇者好友1 = this._清單_勇者好友;
        if (清單勇者好友1 != null)
          清單勇者好友1.SelectedIndexChanged -= eventHandler;
        this._清單_勇者好友 = value;
        ListView 清單勇者好友2 = this._清單_勇者好友;
        if (清單勇者好友2 == null)
          return;
        清單勇者好友2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("清單項目_好友編號")]
    internal virtual ColumnHeader 清單項目_好友編號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_好友帳號")]
    internal virtual ColumnHeader 清單項目_好友帳號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_好友暱稱")]
    internal virtual ColumnHeader 清單項目_好友暱稱 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_勇者好友頭像")]
    internal virtual PictureBox 圖片框_勇者好友頭像 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button 按鈕_清除
    {
      get => this._按鈕_清除;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.清除查詢);
        Button 按鈕清除1 = this._按鈕_清除;
        if (按鈕清除1 != null)
          按鈕清除1.Click -= eventHandler;
        this._按鈕_清除 = value;
        Button 按鈕清除2 = this._按鈕_清除;
        if (按鈕清除2 == null)
          return;
        按鈕清除2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("群組_好友網址")]
    internal virtual GroupBox 群組_好友網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_好友頭像")]
    internal virtual GroupBox 群組_好友頭像 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("頁籤_勇者粉絲")]
    internal virtual TabPage 頁籤_勇者粉絲 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_粉絲頭像")]
    internal virtual GroupBox 群組_粉絲頭像 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_勇者粉絲頭像")]
    internal virtual PictureBox 圖片框_勇者粉絲頭像 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_粉絲網址")]
    internal virtual GroupBox 群組_粉絲網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ListView 清單_勇者粉絲
    {
      get => this._清單_勇者粉絲;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.清單_選擇勇者粉絲);
        ListView 清單勇者粉絲1 = this._清單_勇者粉絲;
        if (清單勇者粉絲1 != null)
          清單勇者粉絲1.SelectedIndexChanged -= eventHandler;
        this._清單_勇者粉絲 = value;
        ListView 清單勇者粉絲2 = this._清單_勇者粉絲;
        if (清單勇者粉絲2 == null)
          return;
        清單勇者粉絲2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("清單項目_粉絲編號")]
    internal virtual ColumnHeader 清單項目_粉絲編號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_粉絲帳號")]
    internal virtual ColumnHeader 清單項目_粉絲帳號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_粉絲暱稱")]
    internal virtual ColumnHeader 清單項目_粉絲暱稱 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("頁籤_勇者公會")]
    internal virtual TabPage 頁籤_勇者公會 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_公會封面")]
    internal virtual GroupBox 群組_公會封面 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_公會封面")]
    internal virtual PictureBox 圖片框_公會封面 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_公會網址")]
    internal virtual GroupBox 群組_公會網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ListView 清單_勇者公會
    {
      get => this._清單_勇者公會;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.清單_選擇勇者公會);
        ListView 清單勇者公會1 = this._清單_勇者公會;
        if (清單勇者公會1 != null)
          清單勇者公會1.SelectedIndexChanged -= eventHandler;
        this._清單_勇者公會 = value;
        ListView 清單勇者公會2 = this._清單_勇者公會;
        if (清單勇者公會2 == null)
          return;
        清單勇者公會2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("清單項目_公會編號")]
    internal virtual ColumnHeader 清單項目_公會編號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_公會名稱")]
    internal virtual ColumnHeader 清單項目_公會名稱 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_經驗值")]
    internal virtual Label 標籤_標題_經驗值 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_昨日人氣")]
    internal virtual Label 標籤_值_昨日人氣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_昨日人氣")]
    internal virtual Label 標籤_標題_昨日人氣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_成員人數")]
    internal virtual Label 標籤_值_成員人數 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_成員人數")]
    internal virtual Label 標籤_標題_成員人數 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_招募制度")]
    internal virtual Label 標籤_值_招募制度 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_招募制度")]
    internal virtual Label 標籤_標題_招募制度 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_現有資金")]
    internal virtual Label 標籤_值_現有資金 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_現有資金")]
    internal virtual Label 標籤_標題_現有資金 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_開設日期")]
    internal virtual Label 標籤_值_開設日期 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_開設日期")]
    internal virtual Label 標籤_標題_開設日期 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_會長帳號")]
    internal virtual Label 標籤_值_會長帳號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_會長帳號")]
    internal virtual Label 標籤_標題_會長帳號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_公會等級")]
    internal virtual Label 標籤_值_公會等級 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_公會等級")]
    internal virtual Label 標籤_標題_公會等級 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_公會經驗值")]
    internal virtual Label 標籤_值_公會經驗值 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_背景_公會經驗值")]
    internal virtual Label 標籤_背景_公會經驗值 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("提示")]
    internal virtual ToolTip 提示 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual LinkLabel 連結標籤_裝備網址
    {
      get => this._連結標籤_裝備網址;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        LinkLabelLinkClickedEventHandler clickedEventHandler = new LinkLabelLinkClickedEventHandler(this.連結標籤_裝備網址_LinkClicked);
        LinkLabel 連結標籤裝備網址1 = this._連結標籤_裝備網址;
        if (連結標籤裝備網址1 != null)
          連結標籤裝備網址1.LinkClicked -= clickedEventHandler;
        this._連結標籤_裝備網址 = value;
        LinkLabel 連結標籤裝備網址2 = this._連結標籤_裝備網址;
        if (連結標籤裝備網址2 == null)
          return;
        連結標籤裝備網址2.LinkClicked += clickedEventHandler;
      }
    }

    internal virtual LinkLabel 連結標籤_好友網址
    {
      get => this._連結標籤_好友網址;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        LinkLabelLinkClickedEventHandler clickedEventHandler = new LinkLabelLinkClickedEventHandler(this.連結標籤_好友網址_LinkClicked);
        LinkLabel 連結標籤好友網址1 = this._連結標籤_好友網址;
        if (連結標籤好友網址1 != null)
          連結標籤好友網址1.LinkClicked -= clickedEventHandler;
        this._連結標籤_好友網址 = value;
        LinkLabel 連結標籤好友網址2 = this._連結標籤_好友網址;
        if (連結標籤好友網址2 == null)
          return;
        連結標籤好友網址2.LinkClicked += clickedEventHandler;
      }
    }

    internal virtual LinkLabel 連結標籤_粉絲網址
    {
      get => this._連結標籤_粉絲網址;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        LinkLabelLinkClickedEventHandler clickedEventHandler = new LinkLabelLinkClickedEventHandler(this.連結標籤_粉絲網址_LinkClicked);
        LinkLabel 連結標籤粉絲網址1 = this._連結標籤_粉絲網址;
        if (連結標籤粉絲網址1 != null)
          連結標籤粉絲網址1.LinkClicked -= clickedEventHandler;
        this._連結標籤_粉絲網址 = value;
        LinkLabel 連結標籤粉絲網址2 = this._連結標籤_粉絲網址;
        if (連結標籤粉絲網址2 == null)
          return;
        連結標籤粉絲網址2.LinkClicked += clickedEventHandler;
      }
    }

    internal virtual LinkLabel 連結標籤_公會網址
    {
      get => this._連結標籤_公會網址;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        LinkLabelLinkClickedEventHandler clickedEventHandler = new LinkLabelLinkClickedEventHandler(this.連結標籤_公會網址_LinkClicked);
        LinkLabel 連結標籤公會網址1 = this._連結標籤_公會網址;
        if (連結標籤公會網址1 != null)
          連結標籤公會網址1.LinkClicked -= clickedEventHandler;
        this._連結標籤_公會網址 = value;
        LinkLabel 連結標籤公會網址2 = this._連結標籤_公會網址;
        if (連結標籤公會網址2 == null)
          return;
        連結標籤公會網址2.LinkClicked += clickedEventHandler;
      }
    }

    internal virtual Button 按鈕_好友查詢
    {
      get => this._按鈕_好友查詢;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.按鈕_好友查詢_Click);
        Button 按鈕好友查詢1 = this._按鈕_好友查詢;
        if (按鈕好友查詢1 != null)
          按鈕好友查詢1.Click -= eventHandler;
        this._按鈕_好友查詢 = value;
        Button 按鈕好友查詢2 = this._按鈕_好友查詢;
        if (按鈕好友查詢2 == null)
          return;
        按鈕好友查詢2.Click += eventHandler;
      }
    }

    internal virtual Button 按鈕_粉絲查詢
    {
      get => this._按鈕_粉絲查詢;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.按鈕_粉絲查詢_Click);
        Button 按鈕粉絲查詢1 = this._按鈕_粉絲查詢;
        if (按鈕粉絲查詢1 != null)
          按鈕粉絲查詢1.Click -= eventHandler;
        this._按鈕_粉絲查詢 = value;
        Button 按鈕粉絲查詢2 = this._按鈕_粉絲查詢;
        if (按鈕粉絲查詢2 == null)
          return;
        按鈕粉絲查詢2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("標籤_值_會長暱稱")]
    internal virtual Label 標籤_值_會長暱稱 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_會長暱稱")]
    internal virtual Label 標籤_標題_會長暱稱 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("頁籤_勇者文章")]
    internal virtual TabPage 頁籤_勇者文章 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_文章封面")]
    internal virtual GroupBox 群組_文章封面 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_文章封面")]
    internal virtual PictureBox 圖片框_文章封面 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_文章網址")]
    internal virtual GroupBox 群組_文章網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual LinkLabel 連結標籤_文章網址
    {
      get => this._連結標籤_文章網址;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        LinkLabelLinkClickedEventHandler clickedEventHandler = new LinkLabelLinkClickedEventHandler(this.連結標籤_文章網址_LinkClicked);
        LinkLabel 連結標籤文章網址1 = this._連結標籤_文章網址;
        if (連結標籤文章網址1 != null)
          連結標籤文章網址1.LinkClicked -= clickedEventHandler;
        this._連結標籤_文章網址 = value;
        LinkLabel 連結標籤文章網址2 = this._連結標籤_文章網址;
        if (連結標籤文章網址2 == null)
          return;
        連結標籤文章網址2.LinkClicked += clickedEventHandler;
      }
    }

    [field: AccessedThroughProperty("標籤_值_發表日期")]
    internal virtual Label 標籤_值_發表日期 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_發表日期")]
    internal virtual Label 標籤_標題_發表日期 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_文章作者")]
    internal virtual Label 標籤_值_文章作者 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_文章作者")]
    internal virtual Label 標籤_標題_文章作者 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ListView 清單_勇者文章
    {
      get => this._清單_勇者文章;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.清單_選擇勇者文章);
        ListView 清單勇者文章1 = this._清單_勇者文章;
        if (清單勇者文章1 != null)
          清單勇者文章1.SelectedIndexChanged -= eventHandler;
        this._清單_勇者文章 = value;
        ListView 清單勇者文章2 = this._清單_勇者文章;
        if (清單勇者文章2 == null)
          return;
        清單勇者文章2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("清單項目_文章編號")]
    internal virtual ColumnHeader 清單項目_文章編號 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_文章標題")]
    internal virtual ColumnHeader 清單項目_文章標題 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_文章分類")]
    internal virtual ColumnHeader 清單項目_文章分類 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_贊助")]
    internal virtual Label 標籤_值_贊助 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_贊助")]
    internal virtual Label 標籤_標題_贊助 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_文章ＧＰ")]
    internal virtual Label 標籤_值_文章ＧＰ { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_文章ＧＰ")]
    internal virtual Label 標籤_標題_文章ＧＰ { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_人氣")]
    internal virtual Label 標籤_值_人氣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_人氣")]
    internal virtual Label 標籤_標題_人氣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button 按鈕_下一頁
    {
      get => this._按鈕_下一頁;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.按鈕_下一頁_Click);
        Button 按鈕下一頁1 = this._按鈕_下一頁;
        if (按鈕下一頁1 != null)
          按鈕下一頁1.Click -= eventHandler;
        this._按鈕_下一頁 = value;
        Button 按鈕下一頁2 = this._按鈕_下一頁;
        if (按鈕下一頁2 == null)
          return;
        按鈕下一頁2.Click += eventHandler;
      }
    }

    internal virtual Button 按鈕_上一頁
    {
      get => this._按鈕_上一頁;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.按鈕_上一頁_Click);
        Button 按鈕上一頁1 = this._按鈕_上一頁;
        if (按鈕上一頁1 != null)
          按鈕上一頁1.Click -= eventHandler;
        this._按鈕_上一頁 = value;
        Button 按鈕上一頁2 = this._按鈕_上一頁;
        if (按鈕上一頁2 == null)
          return;
        按鈕上一頁2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("清單_文章資訊")]
    internal virtual ListView 清單_文章資訊 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_文章網址")]
    internal virtual ColumnHeader 清單項目_文章網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_文章封面網址")]
    internal virtual ColumnHeader 清單項目_文章封面網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_文章作者")]
    internal virtual ColumnHeader 清單項目_文章作者 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_發表日期")]
    internal virtual ColumnHeader 清單項目_發表日期 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_贊助")]
    internal virtual ColumnHeader 清單項目_贊助 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_人氣")]
    internal virtual ColumnHeader 清單項目_人氣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_ＧＰ")]
    internal virtual ColumnHeader 清單項目_ＧＰ { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單_裝備資訊")]
    internal virtual ListView 清單_裝備資訊 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_裝備網址")]
    internal virtual ColumnHeader 清單項目_裝備網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_裝備封面網址")]
    internal virtual ColumnHeader 清單項目_裝備封面網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單_好友資訊")]
    internal virtual ListView 清單_好友資訊 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_好友網址")]
    internal virtual ColumnHeader 清單項目_好友網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_好友頭像網址")]
    internal virtual ColumnHeader 清單項目_好友頭像網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單_粉絲資訊")]
    internal virtual ListView 清單_粉絲資訊 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_粉絲網址")]
    internal virtual ColumnHeader 清單項目_粉絲網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_粉絲頭像網址")]
    internal virtual ColumnHeader 清單項目_粉絲頭像網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單_公會資訊")]
    internal virtual ListView 清單_公會資訊 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_公會網址")]
    internal virtual ColumnHeader 清單項目_公會網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_公會封面網址")]
    internal virtual ColumnHeader 清單項目_公會封面網址 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_熱門創作")]
    internal virtual ColumnHeader 清單項目_熱門創作 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_精選閣樓")]
    internal virtual ColumnHeader 清單項目_精選閣樓 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_部落格達人")]
    internal virtual ColumnHeader 清單項目_部落格達人 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_小說達人")]
    internal virtual ColumnHeader 清單項目_小說達人 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_繪圖達人")]
    internal virtual ColumnHeader 清單項目_繪圖達人 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_值_文章留言")]
    internal virtual Label 標籤_值_文章留言 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("標籤_標題_文章留言")]
    internal virtual Label 標籤_標題_文章留言 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_GNN投稿新聞")]
    internal virtual ColumnHeader 清單項目_GNN投稿新聞 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_其它")]
    internal virtual GroupBox 群組_其它 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_其它_GNN投稿新聞")]
    internal virtual PictureBox 圖片框_其它_GNN投稿新聞 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_其它_熱門創作")]
    internal virtual PictureBox 圖片框_其它_熱門創作 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_其它_精選閣樓")]
    internal virtual PictureBox 圖片框_其它_精選閣樓 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_達人專區")]
    internal virtual GroupBox 群組_達人專區 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_達人專區_部落格達人")]
    internal virtual PictureBox 圖片框_達人專區_部落格達人 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_達人專區_小說達人")]
    internal virtual PictureBox 圖片框_達人專區_小說達人 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_達人專區_繪圖達人")]
    internal virtual PictureBox 圖片框_達人專區_繪圖達人 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("群組_閱覽限制")]
    internal virtual GroupBox 群組_閱覽限制 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_閱覽限制_付費閱覽")]
    internal virtual PictureBox 圖片框_閱覽限制_付費閱覽 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_閱覽限制_限好友閱覽")]
    internal virtual PictureBox 圖片框_閱覽限制_限好友閱覽 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("圖片框_閱覽限制_年齡限制")]
    internal virtual PictureBox 圖片框_閱覽限制_年齡限制 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_付費閱覽")]
    internal virtual ColumnHeader 清單項目_付費閱覽 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_限好友閱覽")]
    internal virtual ColumnHeader 清單項目_限好友閱覽 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_年齡限制")]
    internal virtual ColumnHeader 清單項目_年齡限制 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("清單項目_付費巴幣")]
    internal virtual ColumnHeader 清單項目_付費巴幣 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }
  }
}

// Decompiled with JetBrains decompiler
// Type: 巴哈姆特勇者資訊查詢器.My.MyApplication
// Assembly: 巴哈姆特勇者資訊查詢器, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A33BE2FC-B7FF-424D-BCC1-9549C68B0587
// Assembly location: C:\Users\User\Desktop\巴哈姆特勇者資訊查詢器_v1.3.exe

using Microsoft.VisualBasic.ApplicationServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

#nullable disable
namespace 巴哈姆特勇者資訊查詢器.My
{
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Never)]
  internal class MyApplication : WindowsFormsApplicationBase
  {
    [STAThread]
    [DebuggerHidden]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    internal static void Main(string[] Args)
    {
      Application.SetCompatibleTextRenderingDefault(WindowsFormsApplicationBase.UseCompatibleTextRendering);
      MyProject.Application.Run(Args);
    }

    [DebuggerStepThrough]
    public MyApplication()
      : base(AuthenticationMode.Windows)
    {
      this.IsSingleInstance = true;
      this.EnableVisualStyles = true;
      this.SaveMySettingsOnExit = true;
      this.ShutdownStyle = ShutdownMode.AfterMainFormCloses;
    }

    [DebuggerStepThrough]
    protected override void OnCreateMainForm() => this.MainForm = (Form) MyProject.Forms.主表單;
  }
}


// Decompiled with JetBrains decompiler
// Type: 巴哈姆特勇者資訊查詢器.My.MyComputer
// Assembly: 巴哈姆特勇者資訊查詢器, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A33BE2FC-B7FF-424D-BCC1-9549C68B0587
// Assembly location: C:\Users\User\Desktop\巴哈姆特勇者資訊查詢器_v1.3.exe

using Microsoft.VisualBasic.Devices;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;

#nullable disable
namespace 巴哈姆特勇者資訊查詢器.My
{
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Never)]
  internal class MyComputer : Computer
  {
    [DebuggerHidden]
    [EditorBrowsable(EditorBrowsableState.Never)]
    public MyComputer()
    {
    }
  }
}


// Decompiled with JetBrains decompiler
// Type: 巴哈姆特勇者資訊查詢器.My.MyComputer
// Assembly: 巴哈姆特勇者資訊查詢器, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A33BE2FC-B7FF-424D-BCC1-9549C68B0587
// Assembly location: C:\Users\User\Desktop\巴哈姆特勇者資訊查詢器_v1.3.exe

using Microsoft.VisualBasic.Devices;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;

#nullable disable
namespace 巴哈姆特勇者資訊查詢器.My
{
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Never)]
  internal class MyComputer : Computer
  {
    [DebuggerHidden]
    [EditorBrowsable(EditorBrowsableState.Never)]
    public MyComputer()
    {
    }
  }
}


// Decompiled with JetBrains decompiler
// Type: 巴哈姆特勇者資訊查詢器.My.MyProject
// Assembly: 巴哈姆特勇者資訊查詢器, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A33BE2FC-B7FF-424D-BCC1-9549C68B0587
// Assembly location: C:\Users\User\Desktop\巴哈姆特勇者資訊查詢器_v1.3.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

#nullable disable
namespace 巴哈姆特勇者資訊查詢器.My
{
  [StandardModule]
  [HideModuleName]
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  internal sealed class MyProject
  {
    private static readonly MyProject.ThreadSafeObjectProvider<MyComputer> m_ComputerObjectProvider = new MyProject.ThreadSafeObjectProvider<MyComputer>();
    private static readonly MyProject.ThreadSafeObjectProvider<MyApplication> m_AppObjectProvider = new MyProject.ThreadSafeObjectProvider<MyApplication>();
    private static readonly MyProject.ThreadSafeObjectProvider<User> m_UserObjectProvider = new MyProject.ThreadSafeObjectProvider<User>();
    private static MyProject.ThreadSafeObjectProvider<MyProject.MyForms> m_MyFormsObjectProvider = new MyProject.ThreadSafeObjectProvider<MyProject.MyForms>();
    private static readonly MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices> m_MyWebServicesObjectProvider = new MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices>();

    [HelpKeyword("My.Computer")]
    internal static MyComputer Computer
    {
      [DebuggerHidden] get => MyProject.m_ComputerObjectProvider.GetInstance;
    }

    [HelpKeyword("My.Application")]
    internal static MyApplication Application
    {
      [DebuggerHidden] get => MyProject.m_AppObjectProvider.GetInstance;
    }

    [HelpKeyword("My.User")]
    internal static User User
    {
      [DebuggerHidden] get => MyProject.m_UserObjectProvider.GetInstance;
    }

    [HelpKeyword("My.Forms")]
    internal static MyProject.MyForms Forms
    {
      [DebuggerHidden] get => MyProject.m_MyFormsObjectProvider.GetInstance;
    }

    [HelpKeyword("My.WebServices")]
    internal static MyProject.MyWebServices WebServices
    {
      [DebuggerHidden] get => MyProject.m_MyWebServicesObjectProvider.GetInstance;
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Windows.Forms.Form", "Create__Instance__", "Dispose__Instance__", "My.MyProject.Forms")]
    internal sealed class MyForms
    {
      [ThreadStatic]
      private static Hashtable m_FormBeingCreated;
      [EditorBrowsable(EditorBrowsableState.Never)]
      public 主表單 m_主表單;

      [DebuggerHidden]
      private static T Create__Instance__<T>(T Instance) where T : Form, new()
      {
        T instance;
        if ((object) Instance == null || Instance.IsDisposed)
        {
          if (MyProject.MyForms.m_FormBeingCreated != null)
          {
            if (MyProject.MyForms.m_FormBeingCreated.ContainsKey((object) typeof (T)))
              throw new InvalidOperationException(Utils.GetResourceString("WinForms_RecursiveFormCreate"));
          }
          else
            MyProject.MyForms.m_FormBeingCreated = new Hashtable();
          MyProject.MyForms.m_FormBeingCreated.Add((object) typeof (T), (object) null);
          TargetInvocationException invocationException;
          try
          {
            instance = new T();
          }
          catch (TargetInvocationException ex) when (
          {
            // ISSUE: unable to correctly present filter
            ProjectData.SetProjectError((Exception) ex);
            invocationException = ex;
            if (invocationException.InnerException != null)
            {
              SuccessfulFiltering;
            }
            else
              throw;
          }
          )
          {
            throw new InvalidOperationException(Utils.GetResourceString("WinForms_SeeInnerException", invocationException.InnerException.Message), invocationException.InnerException);
          }
          finally
          {
            MyProject.MyForms.m_FormBeingCreated.Remove((object) typeof (T));
          }
        }
        else
          instance = Instance;
        return instance;
      }

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) where T : Form
      {
        instance.Dispose();
        instance = default (T);
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyForms()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal new System.Type GetType() => typeof (MyProject.MyForms);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      public 主表單 主表單
      {
        get
        {
          this.m_主表單 = MyProject.MyForms.Create__Instance__<主表單>(this.m_主表單);
          return this.m_主表單;
        }
        set
        {
          if (value == this.m_主表單)
            return;
          if (value != null)
            throw new ArgumentException("Property can only be set to Nothing");
          this.Dispose__Instance__<主表單>(ref this.m_主表單);
        }
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    internal sealed class MyWebServices
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      internal new System.Type GetType() => typeof (MyProject.MyWebServices);

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override string ToString() => base.ToString();

      [DebuggerHidden]
      private static T Create__Instance__<T>(T instance) where T : new()
      {
        return (object) instance != null ? instance : new T();
      }

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) => instance = default (T);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyWebServices()
      {
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class ThreadSafeObjectProvider<T> where T : new()
    {
      internal T GetInstance
      {
        [DebuggerHidden] get
        {
          if ((object) MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
            MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = new T();
          return MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public ThreadSafeObjectProvider()
      {
      }
    }
  }
}


